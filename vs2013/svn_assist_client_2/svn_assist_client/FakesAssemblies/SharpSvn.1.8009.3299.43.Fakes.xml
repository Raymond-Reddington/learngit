<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SharpSvn.1.8009.3299.43.Fakes</name>
    </assembly>
    <members>
        <member name="T:SharpSvn.Delta.Fakes.ShimSvnDeltaAbortEventArgs">
            <summary>SharpSvn.Delta.SvnDeltaAbortEventArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaAbortEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaAbortEventArgs.#ctor(SharpSvn.Delta.SvnDeltaAbortEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaAbortEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaAbortEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaAbortEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaAbortEventArgs.Constructor">
            <summary>设置 SvnDeltaAbortEventArgs.SvnDeltaAbortEventArgs() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Delta.Fakes.ShimSvnDeltaAbortEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Delta.Fakes.ShimSvnDeltaCloseEventArgs">
            <summary>SharpSvn.Delta.SvnDeltaCloseEventArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaCloseEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaCloseEventArgs.#ctor(SharpSvn.Delta.SvnDeltaCloseEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaCloseEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaCloseEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaCloseEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaCloseEventArgs.Constructor">
            <summary>设置 SvnDeltaCloseEventArgs.SvnDeltaCloseEventArgs() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Delta.Fakes.ShimSvnDeltaCloseEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Delta.Fakes.ShimSvnDeltaCompleteEventArgs">
            <summary>SharpSvn.Delta.SvnDeltaCompleteEventArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaCompleteEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaCompleteEventArgs.#ctor(SharpSvn.Delta.SvnDeltaCompleteEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaCompleteEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaCompleteEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaCompleteEventArgs.BaseMD5Get">
            <summary>设置 SvnDeltaCompleteEventArgs.get_BaseMD5() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaCompleteEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaCompleteEventArgs.Constructor">
            <summary>设置 SvnDeltaCompleteEventArgs.SvnDeltaCompleteEventArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaCompleteEventArgs.ConstructorSvnDeltaWindowEventArgs">
            <summary>设置 SvnDeltaCompleteEventArgs.SvnDeltaCompleteEventArgs(SvnDeltaWindowEventArgs from) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaCompleteEventArgs.DetachBoolean">
            <summary>设置 SvnDeltaCompleteEventArgs.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaCompleteEventArgs.ResultMD5Get">
            <summary>设置 SvnDeltaCompleteEventArgs.get_ResultMD5() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Delta.Fakes.ShimSvnDeltaCompleteEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaCompleteEventArgs.AllInstances.BaseMD5Get">
            <summary>设置 SvnDeltaCompleteEventArgs.get_BaseMD5() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaCompleteEventArgs.AllInstances.DetachBoolean">
            <summary>设置 SvnDeltaCompleteEventArgs.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaCompleteEventArgs.AllInstances.ResultMD5Get">
            <summary>设置 SvnDeltaCompleteEventArgs.get_ResultMD5() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Delta.Fakes.ShimSvnDeltaDeleteEntryEventArgs">
            <summary>SharpSvn.Delta.SvnDeltaDeleteEntryEventArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaDeleteEntryEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaDeleteEntryEventArgs.#ctor(SharpSvn.Delta.SvnDeltaDeleteEntryEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaDeleteEntryEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaDeleteEntryEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaDeleteEntryEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaDeleteEntryEventArgs.ConstructorSvnDeltaNodeStringInt64">
            <summary>设置 SvnDeltaDeleteEntryEventArgs.SvnDeltaDeleteEntryEventArgs(SvnDeltaNode parentDirectory, String path, Int64 revision) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaDeleteEntryEventArgs.NameGet">
            <summary>设置 SvnDeltaDeleteEntryEventArgs.get_Name() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaDeleteEntryEventArgs.PathGet">
            <summary>设置 SvnDeltaDeleteEntryEventArgs.get_Path() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaDeleteEntryEventArgs.RevisionGet">
            <summary>设置 SvnDeltaDeleteEntryEventArgs.get_Revision() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Delta.Fakes.ShimSvnDeltaDeleteEntryEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaDeleteEntryEventArgs.AllInstances.NameGet">
            <summary>设置 SvnDeltaDeleteEntryEventArgs.get_Name() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaDeleteEntryEventArgs.AllInstances.PathGet">
            <summary>设置 SvnDeltaDeleteEntryEventArgs.get_Path() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaDeleteEntryEventArgs.AllInstances.RevisionGet">
            <summary>设置 SvnDeltaDeleteEntryEventArgs.get_Revision() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Delta.Fakes.ShimSvnDeltaDirectoryAbsentEventArgs">
            <summary>SharpSvn.Delta.SvnDeltaDirectoryAbsentEventArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaDirectoryAbsentEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaDirectoryAbsentEventArgs.#ctor(SharpSvn.Delta.SvnDeltaDirectoryAbsentEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaDirectoryAbsentEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaDirectoryAbsentEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaDirectoryAbsentEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaDirectoryAbsentEventArgs.ConstructorSvnDeltaNode">
            <summary>设置 SvnDeltaDirectoryAbsentEventArgs.SvnDeltaDirectoryAbsentEventArgs(SvnDeltaNode directoryNode) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Delta.Fakes.ShimSvnDeltaDirectoryAbsentEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Delta.Fakes.ShimSvnDeltaDirectoryAddEventArgs">
            <summary>SharpSvn.Delta.SvnDeltaDirectoryAddEventArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaDirectoryAddEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaDirectoryAddEventArgs.#ctor(SharpSvn.Delta.SvnDeltaDirectoryAddEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaDirectoryAddEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaDirectoryAddEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaDirectoryAddEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaDirectoryAddEventArgs.ConstructorSvnDeltaNodeStringInt64">
            <summary>设置 SvnDeltaDirectoryAddEventArgs.SvnDeltaDirectoryAddEventArgs(SvnDeltaNode directoryNode, String copy_from_path, Int64 copy_from_rev) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaDirectoryAddEventArgs.CopyFromPathGet">
            <summary>设置 SvnDeltaDirectoryAddEventArgs.get_CopyFromPath() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaDirectoryAddEventArgs.CopyFromRevisionGet">
            <summary>设置 SvnDeltaDirectoryAddEventArgs.get_CopyFromRevision() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Delta.Fakes.ShimSvnDeltaDirectoryAddEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaDirectoryAddEventArgs.AllInstances.CopyFromPathGet">
            <summary>设置 SvnDeltaDirectoryAddEventArgs.get_CopyFromPath() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaDirectoryAddEventArgs.AllInstances.CopyFromRevisionGet">
            <summary>设置 SvnDeltaDirectoryAddEventArgs.get_CopyFromRevision() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Delta.Fakes.ShimSvnDeltaDirectoryCloseEventArgs">
            <summary>SharpSvn.Delta.SvnDeltaDirectoryCloseEventArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaDirectoryCloseEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaDirectoryCloseEventArgs.#ctor(SharpSvn.Delta.SvnDeltaDirectoryCloseEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaDirectoryCloseEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaDirectoryCloseEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaDirectoryCloseEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaDirectoryCloseEventArgs.ConstructorSvnDeltaNode">
            <summary>设置 SvnDeltaDirectoryCloseEventArgs.SvnDeltaDirectoryCloseEventArgs(SvnDeltaNode directoryNode) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Delta.Fakes.ShimSvnDeltaDirectoryCloseEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Delta.Fakes.ShimSvnDeltaDirectoryItemEventArgs">
            <summary>SharpSvn.Delta.SvnDeltaDirectoryItemEventArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaDirectoryItemEventArgs.#ctor(SharpSvn.Delta.SvnDeltaDirectoryItemEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaDirectoryItemEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaDirectoryItemEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaDirectoryItemEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaDirectoryItemEventArgs.ConstructorSvnDeltaNode">
            <summary>设置 SvnDeltaDirectoryItemEventArgs.SvnDeltaDirectoryItemEventArgs(SvnDeltaNode parentNode) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaDirectoryItemEventArgs.ParentDirectoryNodeGet">
            <summary>设置 SvnDeltaDirectoryItemEventArgs.get_ParentDirectoryNode() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Delta.Fakes.ShimSvnDeltaDirectoryItemEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaDirectoryItemEventArgs.AllInstances.ParentDirectoryNodeGet">
            <summary>设置 SvnDeltaDirectoryItemEventArgs.get_ParentDirectoryNode() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Delta.Fakes.ShimSvnDeltaDirectoryOpenEventArgs">
            <summary>SharpSvn.Delta.SvnDeltaDirectoryOpenEventArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaDirectoryOpenEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaDirectoryOpenEventArgs.#ctor(SharpSvn.Delta.SvnDeltaDirectoryOpenEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaDirectoryOpenEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaDirectoryOpenEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaDirectoryOpenEventArgs.BaseRevisionGet">
            <summary>设置 SvnDeltaDirectoryOpenEventArgs.get_BaseRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaDirectoryOpenEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaDirectoryOpenEventArgs.ConstructorSvnDeltaNodeInt64">
            <summary>设置 SvnDeltaDirectoryOpenEventArgs.SvnDeltaDirectoryOpenEventArgs(SvnDeltaNode directoryNode, Int64 baseRevision) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Delta.Fakes.ShimSvnDeltaDirectoryOpenEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaDirectoryOpenEventArgs.AllInstances.BaseRevisionGet">
            <summary>设置 SvnDeltaDirectoryOpenEventArgs.get_BaseRevision() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Delta.Fakes.ShimSvnDeltaDirectoryPropertyChangeEventArgs">
            <summary>SharpSvn.Delta.SvnDeltaDirectoryPropertyChangeEventArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaDirectoryPropertyChangeEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaDirectoryPropertyChangeEventArgs.#ctor(SharpSvn.Delta.SvnDeltaDirectoryPropertyChangeEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaDirectoryPropertyChangeEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaDirectoryPropertyChangeEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaDirectoryPropertyChangeEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaDirectoryPropertyChangeEventArgs.DetachBoolean">
            <summary>设置 SvnDeltaDirectoryPropertyChangeEventArgs.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaDirectoryPropertyChangeEventArgs.PropertyKindGet">
            <summary>设置 SvnDeltaDirectoryPropertyChangeEventArgs.get_PropertyKind() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaDirectoryPropertyChangeEventArgs.PropertyNameGet">
            <summary>设置 SvnDeltaDirectoryPropertyChangeEventArgs.get_PropertyName() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaDirectoryPropertyChangeEventArgs.ValueGet">
            <summary>设置 SvnDeltaDirectoryPropertyChangeEventArgs.get_Value() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Delta.Fakes.ShimSvnDeltaDirectoryPropertyChangeEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaDirectoryPropertyChangeEventArgs.AllInstances.DetachBoolean">
            <summary>设置 SvnDeltaDirectoryPropertyChangeEventArgs.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaDirectoryPropertyChangeEventArgs.AllInstances.PropertyKindGet">
            <summary>设置 SvnDeltaDirectoryPropertyChangeEventArgs.get_PropertyKind() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaDirectoryPropertyChangeEventArgs.AllInstances.PropertyNameGet">
            <summary>设置 SvnDeltaDirectoryPropertyChangeEventArgs.get_PropertyName() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaDirectoryPropertyChangeEventArgs.AllInstances.ValueGet">
            <summary>设置 SvnDeltaDirectoryPropertyChangeEventArgs.get_Value() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor">
            <summary>SharpSvn.Delta.SvnDeltaEditor 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.#ctor(SharpSvn.Delta.SvnDeltaEditor)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.AbortAddEventHandlerOfSvnDeltaAbortEventArgs">
            <summary>设置 SvnDeltaEditor.add_Abort(EventHandler`1&lt;SvnDeltaAbortEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.AbortRaiseObjectSvnDeltaAbortEventArgs">
            <summary>设置 SvnDeltaEditor.raise_Abort(Object sender, SvnDeltaAbortEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.AbortRemoveEventHandlerOfSvnDeltaAbortEventArgs">
            <summary>设置 SvnDeltaEditor.remove_Abort(EventHandler`1&lt;SvnDeltaAbortEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.CloseAddEventHandlerOfSvnDeltaCloseEventArgs">
            <summary>设置 SvnDeltaEditor.add_Close(EventHandler`1&lt;SvnDeltaCloseEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.CloseRaiseObjectSvnDeltaCloseEventArgs">
            <summary>设置 SvnDeltaEditor.raise_Close(Object sender, SvnDeltaCloseEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.CloseRemoveEventHandlerOfSvnDeltaCloseEventArgs">
            <summary>设置 SvnDeltaEditor.remove_Close(EventHandler`1&lt;SvnDeltaCloseEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.Constructor">
            <summary>设置 SvnDeltaEditor.SvnDeltaEditor() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.CreateDirectoryNodeSvnDeltaNodeString">
            <summary>设置 SvnDeltaEditor.CreateDirectoryNode(SvnDeltaNode parent, String path) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.CreateFileNodeSvnDeltaNodeString">
            <summary>设置 SvnDeltaEditor.CreateFileNode(SvnDeltaNode parent, String path) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.DeleteEntryAddEventHandlerOfSvnDeltaDeleteEntryEventArgs">
            <summary>设置 SvnDeltaEditor.add_DeleteEntry(EventHandler`1&lt;SvnDeltaDeleteEntryEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.DeleteEntryRaiseObjectSvnDeltaDeleteEntryEventArgs">
            <summary>设置 SvnDeltaEditor.raise_DeleteEntry(Object sender, SvnDeltaDeleteEntryEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.DeleteEntryRemoveEventHandlerOfSvnDeltaDeleteEntryEventArgs">
            <summary>设置 SvnDeltaEditor.remove_DeleteEntry(EventHandler`1&lt;SvnDeltaDeleteEntryEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.DirectoryAbsentAddEventHandlerOfSvnDeltaDirectoryAbsentEventArgs">
            <summary>设置 SvnDeltaEditor.add_DirectoryAbsent(EventHandler`1&lt;SvnDeltaDirectoryAbsentEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.DirectoryAbsentRaiseObjectSvnDeltaDirectoryAbsentEventArgs">
            <summary>设置 SvnDeltaEditor.raise_DirectoryAbsent(Object sender, SvnDeltaDirectoryAbsentEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.DirectoryAbsentRemoveEventHandlerOfSvnDeltaDirectoryAbsentEventArgs">
            <summary>设置 SvnDeltaEditor.remove_DirectoryAbsent(EventHandler`1&lt;SvnDeltaDirectoryAbsentEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.DirectoryAddAddEventHandlerOfSvnDeltaDirectoryAddEventArgs">
            <summary>设置 SvnDeltaEditor.add_DirectoryAdd(EventHandler`1&lt;SvnDeltaDirectoryAddEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.DirectoryAddRaiseObjectSvnDeltaDirectoryAddEventArgs">
            <summary>设置 SvnDeltaEditor.raise_DirectoryAdd(Object sender, SvnDeltaDirectoryAddEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.DirectoryAddRemoveEventHandlerOfSvnDeltaDirectoryAddEventArgs">
            <summary>设置 SvnDeltaEditor.remove_DirectoryAdd(EventHandler`1&lt;SvnDeltaDirectoryAddEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.DirectoryCloseAddEventHandlerOfSvnDeltaDirectoryCloseEventArgs">
            <summary>设置 SvnDeltaEditor.add_DirectoryClose(EventHandler`1&lt;SvnDeltaDirectoryCloseEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.DirectoryCloseRaiseObjectSvnDeltaDirectoryCloseEventArgs">
            <summary>设置 SvnDeltaEditor.raise_DirectoryClose(Object sender, SvnDeltaDirectoryCloseEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.DirectoryCloseRemoveEventHandlerOfSvnDeltaDirectoryCloseEventArgs">
            <summary>设置 SvnDeltaEditor.remove_DirectoryClose(EventHandler`1&lt;SvnDeltaDirectoryCloseEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.DirectoryOpenAddEventHandlerOfSvnDeltaDirectoryOpenEventArgs">
            <summary>设置 SvnDeltaEditor.add_DirectoryOpen(EventHandler`1&lt;SvnDeltaDirectoryOpenEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.DirectoryOpenRaiseObjectSvnDeltaDirectoryOpenEventArgs">
            <summary>设置 SvnDeltaEditor.raise_DirectoryOpen(Object sender, SvnDeltaDirectoryOpenEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.DirectoryOpenRemoveEventHandlerOfSvnDeltaDirectoryOpenEventArgs">
            <summary>设置 SvnDeltaEditor.remove_DirectoryOpen(EventHandler`1&lt;SvnDeltaDirectoryOpenEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.DirectoryPropertyChangeAddEventHandlerOfSvnDeltaDirectoryPropertyChangeEventArgs">
            <summary>设置 SvnDeltaEditor.add_DirectoryPropertyChange(EventHandler`1&lt;SvnDeltaDirectoryPropertyChangeEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.DirectoryPropertyChangeRaiseObjectSvnDeltaDirectoryPropertyChangeEventArgs">
            <summary>设置 SvnDeltaEditor.raise_DirectoryPropertyChange(Object sender, SvnDeltaDirectoryPropertyChangeEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.DirectoryPropertyChangeRemoveEventHandlerOfSvnDeltaDirectoryPropertyChangeEventArgs">
            <summary>设置 SvnDeltaEditor.remove_DirectoryPropertyChange(EventHandler`1&lt;SvnDeltaDirectoryPropertyChangeEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.FileAbsentAddEventHandlerOfSvnDeltaFileAbsentEventArgs">
            <summary>设置 SvnDeltaEditor.add_FileAbsent(EventHandler`1&lt;SvnDeltaFileAbsentEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.FileAbsentRaiseObjectSvnDeltaFileAbsentEventArgs">
            <summary>设置 SvnDeltaEditor.raise_FileAbsent(Object sender, SvnDeltaFileAbsentEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.FileAbsentRemoveEventHandlerOfSvnDeltaFileAbsentEventArgs">
            <summary>设置 SvnDeltaEditor.remove_FileAbsent(EventHandler`1&lt;SvnDeltaFileAbsentEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.FileAddAddEventHandlerOfSvnDeltaFileAddEventArgs">
            <summary>设置 SvnDeltaEditor.add_FileAdd(EventHandler`1&lt;SvnDeltaFileAddEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.FileAddRaiseObjectSvnDeltaFileAddEventArgs">
            <summary>设置 SvnDeltaEditor.raise_FileAdd(Object sender, SvnDeltaFileAddEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.FileAddRemoveEventHandlerOfSvnDeltaFileAddEventArgs">
            <summary>设置 SvnDeltaEditor.remove_FileAdd(EventHandler`1&lt;SvnDeltaFileAddEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.FileCloseAddEventHandlerOfSvnDeltaFileCloseEventArgs">
            <summary>设置 SvnDeltaEditor.add_FileClose(EventHandler`1&lt;SvnDeltaFileCloseEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.FileCloseRaiseObjectSvnDeltaFileCloseEventArgs">
            <summary>设置 SvnDeltaEditor.raise_FileClose(Object sender, SvnDeltaFileCloseEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.FileCloseRemoveEventHandlerOfSvnDeltaFileCloseEventArgs">
            <summary>设置 SvnDeltaEditor.remove_FileClose(EventHandler`1&lt;SvnDeltaFileCloseEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.FileDeltaAddEventHandlerOfSvnDeltaFileChangeEventArgs">
            <summary>设置 SvnDeltaEditor.add_FileDelta(EventHandler`1&lt;SvnDeltaFileChangeEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.FileDeltaRaiseObjectSvnDeltaFileChangeEventArgs">
            <summary>设置 SvnDeltaEditor.raise_FileDelta(Object sender, SvnDeltaFileChangeEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.FileDeltaRemoveEventHandlerOfSvnDeltaFileChangeEventArgs">
            <summary>设置 SvnDeltaEditor.remove_FileDelta(EventHandler`1&lt;SvnDeltaFileChangeEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.FileOpenAddEventHandlerOfSvnDeltaFileOpenEventArgs">
            <summary>设置 SvnDeltaEditor.add_FileOpen(EventHandler`1&lt;SvnDeltaFileOpenEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.FileOpenRaiseObjectSvnDeltaFileOpenEventArgs">
            <summary>设置 SvnDeltaEditor.raise_FileOpen(Object sender, SvnDeltaFileOpenEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.FileOpenRemoveEventHandlerOfSvnDeltaFileOpenEventArgs">
            <summary>设置 SvnDeltaEditor.remove_FileOpen(EventHandler`1&lt;SvnDeltaFileOpenEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.FilePropertyChangeAddEventHandlerOfSvnDeltaFilePropertyChangeEventArgs">
            <summary>设置 SvnDeltaEditor.add_FilePropertyChange(EventHandler`1&lt;SvnDeltaFilePropertyChangeEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.FilePropertyChangeRaiseObjectSvnDeltaFilePropertyChangeEventArgs">
            <summary>设置 SvnDeltaEditor.raise_FilePropertyChange(Object sender, SvnDeltaFilePropertyChangeEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.FilePropertyChangeRemoveEventHandlerOfSvnDeltaFilePropertyChangeEventArgs">
            <summary>设置 SvnDeltaEditor.remove_FilePropertyChange(EventHandler`1&lt;SvnDeltaFilePropertyChangeEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.OnAbortSvnDeltaAbortEventArgs">
            <summary>设置 SvnDeltaEditor.OnAbort(SvnDeltaAbortEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.OnCloseSvnDeltaCloseEventArgs">
            <summary>设置 SvnDeltaEditor.OnClose(SvnDeltaCloseEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.OnDeleteEntrySvnDeltaDeleteEntryEventArgs">
            <summary>设置 SvnDeltaEditor.OnDeleteEntry(SvnDeltaDeleteEntryEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.OnDirectoryAbsentSvnDeltaDirectoryAbsentEventArgs">
            <summary>设置 SvnDeltaEditor.OnDirectoryAbsent(SvnDeltaDirectoryAbsentEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.OnDirectoryAddSvnDeltaDirectoryAddEventArgs">
            <summary>设置 SvnDeltaEditor.OnDirectoryAdd(SvnDeltaDirectoryAddEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.OnDirectoryCloseSvnDeltaDirectoryCloseEventArgs">
            <summary>设置 SvnDeltaEditor.OnDirectoryClose(SvnDeltaDirectoryCloseEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.OnDirectoryOpenSvnDeltaDirectoryOpenEventArgs">
            <summary>设置 SvnDeltaEditor.OnDirectoryOpen(SvnDeltaDirectoryOpenEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.OnDirectoryPropertyChangeSvnDeltaDirectoryPropertyChangeEventArgs">
            <summary>设置 SvnDeltaEditor.OnDirectoryPropertyChange(SvnDeltaDirectoryPropertyChangeEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.OnFileAbsentSvnDeltaFileAbsentEventArgs">
            <summary>设置 SvnDeltaEditor.OnFileAbsent(SvnDeltaFileAbsentEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.OnFileAddSvnDeltaFileAddEventArgs">
            <summary>设置 SvnDeltaEditor.OnFileAdd(SvnDeltaFileAddEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.OnFileChangeSvnDeltaFileChangeEventArgs">
            <summary>设置 SvnDeltaEditor.OnFileChange(SvnDeltaFileChangeEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.OnFileCloseSvnDeltaFileCloseEventArgs">
            <summary>设置 SvnDeltaEditor.OnFileClose(SvnDeltaFileCloseEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.OnFileOpenSvnDeltaFileOpenEventArgs">
            <summary>设置 SvnDeltaEditor.OnFileOpen(SvnDeltaFileOpenEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.OnFilePropertyChangeSvnDeltaFilePropertyChangeEventArgs">
            <summary>设置 SvnDeltaEditor.OnFilePropertyChange(SvnDeltaFilePropertyChangeEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.OnOpenSvnDeltaOpenEventArgs">
            <summary>设置 SvnDeltaEditor.OnOpen(SvnDeltaOpenEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.OnSetTargetSvnDeltaSetTargetEventArgs">
            <summary>设置 SvnDeltaEditor.OnSetTarget(SvnDeltaSetTargetEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.OpenAddEventHandlerOfSvnDeltaOpenEventArgs">
            <summary>设置 SvnDeltaEditor.add_Open(EventHandler`1&lt;SvnDeltaOpenEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.OpenRaiseObjectSvnDeltaOpenEventArgs">
            <summary>设置 SvnDeltaEditor.raise_Open(Object sender, SvnDeltaOpenEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.OpenRemoveEventHandlerOfSvnDeltaOpenEventArgs">
            <summary>设置 SvnDeltaEditor.remove_Open(EventHandler`1&lt;SvnDeltaOpenEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.SetTargetAddEventHandlerOfSvnDeltaSetTargetEventArgs">
            <summary>设置 SvnDeltaEditor.add_SetTarget(EventHandler`1&lt;SvnDeltaSetTargetEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.SetTargetRaiseObjectSvnDeltaSetTargetEventArgs">
            <summary>设置 SvnDeltaEditor.raise_SetTarget(Object sender, SvnDeltaSetTargetEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.SetTargetRemoveEventHandlerOfSvnDeltaSetTargetEventArgs">
            <summary>设置 SvnDeltaEditor.remove_SetTarget(EventHandler`1&lt;SvnDeltaSetTargetEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.AllInstances.AbortAddEventHandlerOfSvnDeltaAbortEventArgs">
            <summary>设置 SvnDeltaEditor.add_Abort(EventHandler`1&lt;SvnDeltaAbortEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.AllInstances.AbortRaiseObjectSvnDeltaAbortEventArgs">
            <summary>设置 SvnDeltaEditor.raise_Abort(Object sender, SvnDeltaAbortEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.AllInstances.AbortRemoveEventHandlerOfSvnDeltaAbortEventArgs">
            <summary>设置 SvnDeltaEditor.remove_Abort(EventHandler`1&lt;SvnDeltaAbortEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.AllInstances.CloseAddEventHandlerOfSvnDeltaCloseEventArgs">
            <summary>设置 SvnDeltaEditor.add_Close(EventHandler`1&lt;SvnDeltaCloseEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.AllInstances.CloseRaiseObjectSvnDeltaCloseEventArgs">
            <summary>设置 SvnDeltaEditor.raise_Close(Object sender, SvnDeltaCloseEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.AllInstances.CloseRemoveEventHandlerOfSvnDeltaCloseEventArgs">
            <summary>设置 SvnDeltaEditor.remove_Close(EventHandler`1&lt;SvnDeltaCloseEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.AllInstances.CreateDirectoryNodeSvnDeltaNodeString">
            <summary>设置 SvnDeltaEditor.CreateDirectoryNode(SvnDeltaNode parent, String path) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.AllInstances.CreateFileNodeSvnDeltaNodeString">
            <summary>设置 SvnDeltaEditor.CreateFileNode(SvnDeltaNode parent, String path) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.AllInstances.DeleteEntryAddEventHandlerOfSvnDeltaDeleteEntryEventArgs">
            <summary>设置 SvnDeltaEditor.add_DeleteEntry(EventHandler`1&lt;SvnDeltaDeleteEntryEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.AllInstances.DeleteEntryRaiseObjectSvnDeltaDeleteEntryEventArgs">
            <summary>设置 SvnDeltaEditor.raise_DeleteEntry(Object sender, SvnDeltaDeleteEntryEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.AllInstances.DeleteEntryRemoveEventHandlerOfSvnDeltaDeleteEntryEventArgs">
            <summary>设置 SvnDeltaEditor.remove_DeleteEntry(EventHandler`1&lt;SvnDeltaDeleteEntryEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.AllInstances.DirectoryAbsentAddEventHandlerOfSvnDeltaDirectoryAbsentEventArgs">
            <summary>设置 SvnDeltaEditor.add_DirectoryAbsent(EventHandler`1&lt;SvnDeltaDirectoryAbsentEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.AllInstances.DirectoryAbsentRaiseObjectSvnDeltaDirectoryAbsentEventArgs">
            <summary>设置 SvnDeltaEditor.raise_DirectoryAbsent(Object sender, SvnDeltaDirectoryAbsentEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.AllInstances.DirectoryAbsentRemoveEventHandlerOfSvnDeltaDirectoryAbsentEventArgs">
            <summary>设置 SvnDeltaEditor.remove_DirectoryAbsent(EventHandler`1&lt;SvnDeltaDirectoryAbsentEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.AllInstances.DirectoryAddAddEventHandlerOfSvnDeltaDirectoryAddEventArgs">
            <summary>设置 SvnDeltaEditor.add_DirectoryAdd(EventHandler`1&lt;SvnDeltaDirectoryAddEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.AllInstances.DirectoryAddRaiseObjectSvnDeltaDirectoryAddEventArgs">
            <summary>设置 SvnDeltaEditor.raise_DirectoryAdd(Object sender, SvnDeltaDirectoryAddEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.AllInstances.DirectoryAddRemoveEventHandlerOfSvnDeltaDirectoryAddEventArgs">
            <summary>设置 SvnDeltaEditor.remove_DirectoryAdd(EventHandler`1&lt;SvnDeltaDirectoryAddEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.AllInstances.DirectoryCloseAddEventHandlerOfSvnDeltaDirectoryCloseEventArgs">
            <summary>设置 SvnDeltaEditor.add_DirectoryClose(EventHandler`1&lt;SvnDeltaDirectoryCloseEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.AllInstances.DirectoryCloseRaiseObjectSvnDeltaDirectoryCloseEventArgs">
            <summary>设置 SvnDeltaEditor.raise_DirectoryClose(Object sender, SvnDeltaDirectoryCloseEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.AllInstances.DirectoryCloseRemoveEventHandlerOfSvnDeltaDirectoryCloseEventArgs">
            <summary>设置 SvnDeltaEditor.remove_DirectoryClose(EventHandler`1&lt;SvnDeltaDirectoryCloseEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.AllInstances.DirectoryOpenAddEventHandlerOfSvnDeltaDirectoryOpenEventArgs">
            <summary>设置 SvnDeltaEditor.add_DirectoryOpen(EventHandler`1&lt;SvnDeltaDirectoryOpenEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.AllInstances.DirectoryOpenRaiseObjectSvnDeltaDirectoryOpenEventArgs">
            <summary>设置 SvnDeltaEditor.raise_DirectoryOpen(Object sender, SvnDeltaDirectoryOpenEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.AllInstances.DirectoryOpenRemoveEventHandlerOfSvnDeltaDirectoryOpenEventArgs">
            <summary>设置 SvnDeltaEditor.remove_DirectoryOpen(EventHandler`1&lt;SvnDeltaDirectoryOpenEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.AllInstances.DirectoryPropertyChangeAddEventHandlerOfSvnDeltaDirectoryPropertyChangeEventArgs">
            <summary>设置 SvnDeltaEditor.add_DirectoryPropertyChange(EventHandler`1&lt;SvnDeltaDirectoryPropertyChangeEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.AllInstances.DirectoryPropertyChangeRaiseObjectSvnDeltaDirectoryPropertyChangeEventArgs">
            <summary>设置 SvnDeltaEditor.raise_DirectoryPropertyChange(Object sender, SvnDeltaDirectoryPropertyChangeEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.AllInstances.DirectoryPropertyChangeRemoveEventHandlerOfSvnDeltaDirectoryPropertyChangeEventArgs">
            <summary>设置 SvnDeltaEditor.remove_DirectoryPropertyChange(EventHandler`1&lt;SvnDeltaDirectoryPropertyChangeEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.AllInstances.FileAbsentAddEventHandlerOfSvnDeltaFileAbsentEventArgs">
            <summary>设置 SvnDeltaEditor.add_FileAbsent(EventHandler`1&lt;SvnDeltaFileAbsentEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.AllInstances.FileAbsentRaiseObjectSvnDeltaFileAbsentEventArgs">
            <summary>设置 SvnDeltaEditor.raise_FileAbsent(Object sender, SvnDeltaFileAbsentEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.AllInstances.FileAbsentRemoveEventHandlerOfSvnDeltaFileAbsentEventArgs">
            <summary>设置 SvnDeltaEditor.remove_FileAbsent(EventHandler`1&lt;SvnDeltaFileAbsentEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.AllInstances.FileAddAddEventHandlerOfSvnDeltaFileAddEventArgs">
            <summary>设置 SvnDeltaEditor.add_FileAdd(EventHandler`1&lt;SvnDeltaFileAddEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.AllInstances.FileAddRaiseObjectSvnDeltaFileAddEventArgs">
            <summary>设置 SvnDeltaEditor.raise_FileAdd(Object sender, SvnDeltaFileAddEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.AllInstances.FileAddRemoveEventHandlerOfSvnDeltaFileAddEventArgs">
            <summary>设置 SvnDeltaEditor.remove_FileAdd(EventHandler`1&lt;SvnDeltaFileAddEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.AllInstances.FileCloseAddEventHandlerOfSvnDeltaFileCloseEventArgs">
            <summary>设置 SvnDeltaEditor.add_FileClose(EventHandler`1&lt;SvnDeltaFileCloseEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.AllInstances.FileCloseRaiseObjectSvnDeltaFileCloseEventArgs">
            <summary>设置 SvnDeltaEditor.raise_FileClose(Object sender, SvnDeltaFileCloseEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.AllInstances.FileCloseRemoveEventHandlerOfSvnDeltaFileCloseEventArgs">
            <summary>设置 SvnDeltaEditor.remove_FileClose(EventHandler`1&lt;SvnDeltaFileCloseEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.AllInstances.FileDeltaAddEventHandlerOfSvnDeltaFileChangeEventArgs">
            <summary>设置 SvnDeltaEditor.add_FileDelta(EventHandler`1&lt;SvnDeltaFileChangeEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.AllInstances.FileDeltaRaiseObjectSvnDeltaFileChangeEventArgs">
            <summary>设置 SvnDeltaEditor.raise_FileDelta(Object sender, SvnDeltaFileChangeEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.AllInstances.FileDeltaRemoveEventHandlerOfSvnDeltaFileChangeEventArgs">
            <summary>设置 SvnDeltaEditor.remove_FileDelta(EventHandler`1&lt;SvnDeltaFileChangeEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.AllInstances.FileOpenAddEventHandlerOfSvnDeltaFileOpenEventArgs">
            <summary>设置 SvnDeltaEditor.add_FileOpen(EventHandler`1&lt;SvnDeltaFileOpenEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.AllInstances.FileOpenRaiseObjectSvnDeltaFileOpenEventArgs">
            <summary>设置 SvnDeltaEditor.raise_FileOpen(Object sender, SvnDeltaFileOpenEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.AllInstances.FileOpenRemoveEventHandlerOfSvnDeltaFileOpenEventArgs">
            <summary>设置 SvnDeltaEditor.remove_FileOpen(EventHandler`1&lt;SvnDeltaFileOpenEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.AllInstances.FilePropertyChangeAddEventHandlerOfSvnDeltaFilePropertyChangeEventArgs">
            <summary>设置 SvnDeltaEditor.add_FilePropertyChange(EventHandler`1&lt;SvnDeltaFilePropertyChangeEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.AllInstances.FilePropertyChangeRaiseObjectSvnDeltaFilePropertyChangeEventArgs">
            <summary>设置 SvnDeltaEditor.raise_FilePropertyChange(Object sender, SvnDeltaFilePropertyChangeEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.AllInstances.FilePropertyChangeRemoveEventHandlerOfSvnDeltaFilePropertyChangeEventArgs">
            <summary>设置 SvnDeltaEditor.remove_FilePropertyChange(EventHandler`1&lt;SvnDeltaFilePropertyChangeEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.AllInstances.OnAbortSvnDeltaAbortEventArgs">
            <summary>设置 SvnDeltaEditor.OnAbort(SvnDeltaAbortEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.AllInstances.OnCloseSvnDeltaCloseEventArgs">
            <summary>设置 SvnDeltaEditor.OnClose(SvnDeltaCloseEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.AllInstances.OnDeleteEntrySvnDeltaDeleteEntryEventArgs">
            <summary>设置 SvnDeltaEditor.OnDeleteEntry(SvnDeltaDeleteEntryEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.AllInstances.OnDirectoryAbsentSvnDeltaDirectoryAbsentEventArgs">
            <summary>设置 SvnDeltaEditor.OnDirectoryAbsent(SvnDeltaDirectoryAbsentEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.AllInstances.OnDirectoryAddSvnDeltaDirectoryAddEventArgs">
            <summary>设置 SvnDeltaEditor.OnDirectoryAdd(SvnDeltaDirectoryAddEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.AllInstances.OnDirectoryCloseSvnDeltaDirectoryCloseEventArgs">
            <summary>设置 SvnDeltaEditor.OnDirectoryClose(SvnDeltaDirectoryCloseEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.AllInstances.OnDirectoryOpenSvnDeltaDirectoryOpenEventArgs">
            <summary>设置 SvnDeltaEditor.OnDirectoryOpen(SvnDeltaDirectoryOpenEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.AllInstances.OnDirectoryPropertyChangeSvnDeltaDirectoryPropertyChangeEventArgs">
            <summary>设置 SvnDeltaEditor.OnDirectoryPropertyChange(SvnDeltaDirectoryPropertyChangeEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.AllInstances.OnFileAbsentSvnDeltaFileAbsentEventArgs">
            <summary>设置 SvnDeltaEditor.OnFileAbsent(SvnDeltaFileAbsentEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.AllInstances.OnFileAddSvnDeltaFileAddEventArgs">
            <summary>设置 SvnDeltaEditor.OnFileAdd(SvnDeltaFileAddEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.AllInstances.OnFileChangeSvnDeltaFileChangeEventArgs">
            <summary>设置 SvnDeltaEditor.OnFileChange(SvnDeltaFileChangeEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.AllInstances.OnFileCloseSvnDeltaFileCloseEventArgs">
            <summary>设置 SvnDeltaEditor.OnFileClose(SvnDeltaFileCloseEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.AllInstances.OnFileOpenSvnDeltaFileOpenEventArgs">
            <summary>设置 SvnDeltaEditor.OnFileOpen(SvnDeltaFileOpenEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.AllInstances.OnFilePropertyChangeSvnDeltaFilePropertyChangeEventArgs">
            <summary>设置 SvnDeltaEditor.OnFilePropertyChange(SvnDeltaFilePropertyChangeEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.AllInstances.OnOpenSvnDeltaOpenEventArgs">
            <summary>设置 SvnDeltaEditor.OnOpen(SvnDeltaOpenEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.AllInstances.OnSetTargetSvnDeltaSetTargetEventArgs">
            <summary>设置 SvnDeltaEditor.OnSetTarget(SvnDeltaSetTargetEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.AllInstances.OpenAddEventHandlerOfSvnDeltaOpenEventArgs">
            <summary>设置 SvnDeltaEditor.add_Open(EventHandler`1&lt;SvnDeltaOpenEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.AllInstances.OpenRaiseObjectSvnDeltaOpenEventArgs">
            <summary>设置 SvnDeltaEditor.raise_Open(Object sender, SvnDeltaOpenEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.AllInstances.OpenRemoveEventHandlerOfSvnDeltaOpenEventArgs">
            <summary>设置 SvnDeltaEditor.remove_Open(EventHandler`1&lt;SvnDeltaOpenEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.AllInstances.SetTargetAddEventHandlerOfSvnDeltaSetTargetEventArgs">
            <summary>设置 SvnDeltaEditor.add_SetTarget(EventHandler`1&lt;SvnDeltaSetTargetEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.AllInstances.SetTargetRaiseObjectSvnDeltaSetTargetEventArgs">
            <summary>设置 SvnDeltaEditor.raise_SetTarget(Object sender, SvnDeltaSetTargetEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEditor.AllInstances.SetTargetRemoveEventHandlerOfSvnDeltaSetTargetEventArgs">
            <summary>设置 SvnDeltaEditor.remove_SetTarget(EventHandler`1&lt;SvnDeltaSetTargetEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Delta.Fakes.ShimSvnDeltaEventArgs">
            <summary>SharpSvn.Delta.SvnDeltaEventArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaEventArgs.#ctor(SharpSvn.Delta.SvnDeltaEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEventArgs.Constructor">
            <summary>设置 SvnDeltaEventArgs.SvnDeltaEventArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEventArgs.Detach">
            <summary>设置 SvnDeltaEventArgs.Detach() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEventArgs.DetachBoolean">
            <summary>设置 SvnDeltaEventArgs.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEventArgs.ParentGet">
            <summary>设置 SvnDeltaEventArgs.get_Parent() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Delta.Fakes.ShimSvnDeltaEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEventArgs.AllInstances.Detach">
            <summary>设置 SvnDeltaEventArgs.Detach() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEventArgs.AllInstances.DetachBoolean">
            <summary>设置 SvnDeltaEventArgs.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaEventArgs.AllInstances.ParentGet">
            <summary>设置 SvnDeltaEventArgs.get_Parent() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Delta.Fakes.ShimSvnDeltaFileAbsentEventArgs">
            <summary>SharpSvn.Delta.SvnDeltaFileAbsentEventArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaFileAbsentEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaFileAbsentEventArgs.#ctor(SharpSvn.Delta.SvnDeltaFileAbsentEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaFileAbsentEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaFileAbsentEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaFileAbsentEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaFileAbsentEventArgs.ConstructorSvnDeltaNode">
            <summary>设置 SvnDeltaFileAbsentEventArgs.SvnDeltaFileAbsentEventArgs(SvnDeltaNode fileNode) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Delta.Fakes.ShimSvnDeltaFileAbsentEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Delta.Fakes.ShimSvnDeltaFileAddEventArgs">
            <summary>SharpSvn.Delta.SvnDeltaFileAddEventArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaFileAddEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaFileAddEventArgs.#ctor(SharpSvn.Delta.SvnDeltaFileAddEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaFileAddEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaFileAddEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaFileAddEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaFileAddEventArgs.ConstructorSvnDeltaNodeStringInt64">
            <summary>设置 SvnDeltaFileAddEventArgs.SvnDeltaFileAddEventArgs(SvnDeltaNode fileNode, String copy_from_path, Int64 copy_from_rev) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaFileAddEventArgs.CopyFromPathGet">
            <summary>设置 SvnDeltaFileAddEventArgs.get_CopyFromPath() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaFileAddEventArgs.CopyFromRevisionGet">
            <summary>设置 SvnDeltaFileAddEventArgs.get_CopyFromRevision() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Delta.Fakes.ShimSvnDeltaFileAddEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaFileAddEventArgs.AllInstances.CopyFromPathGet">
            <summary>设置 SvnDeltaFileAddEventArgs.get_CopyFromPath() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaFileAddEventArgs.AllInstances.CopyFromRevisionGet">
            <summary>设置 SvnDeltaFileAddEventArgs.get_CopyFromRevision() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Delta.Fakes.ShimSvnDeltaFileChangeEventArgs">
            <summary>SharpSvn.Delta.SvnDeltaFileChangeEventArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaFileChangeEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaFileChangeEventArgs.#ctor(SharpSvn.Delta.SvnDeltaFileChangeEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaFileChangeEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaFileChangeEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaFileChangeEventArgs.BaseMD5Get">
            <summary>设置 SvnDeltaFileChangeEventArgs.get_BaseMD5() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaFileChangeEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaFileChangeEventArgs.DeltaCompleteAddEventHandlerOfSvnDeltaCompleteEventArgs">
            <summary>设置 SvnDeltaFileChangeEventArgs.add_DeltaComplete(EventHandler`1&lt;SvnDeltaCompleteEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaFileChangeEventArgs.DeltaCompleteRaiseObjectSvnDeltaCompleteEventArgs">
            <summary>设置 SvnDeltaFileChangeEventArgs.raise_DeltaComplete(Object sender, SvnDeltaCompleteEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaFileChangeEventArgs.DeltaCompleteRemoveEventHandlerOfSvnDeltaCompleteEventArgs">
            <summary>设置 SvnDeltaFileChangeEventArgs.remove_DeltaComplete(EventHandler`1&lt;SvnDeltaCompleteEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaFileChangeEventArgs.DetachBoolean">
            <summary>设置 SvnDeltaFileChangeEventArgs.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaFileChangeEventArgs.InvokeDeltaCompleteObjectSvnDeltaCompleteEventArgs">
            <summary>设置 SvnDeltaFileChangeEventArgs.InvokeDeltaComplete(Object sender, SvnDeltaCompleteEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaFileChangeEventArgs.OnDeltaCompleteSvnDeltaCompleteEventArgs">
            <summary>设置 SvnDeltaFileChangeEventArgs.OnDeltaComplete(SvnDeltaCompleteEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaFileChangeEventArgs.PrepareForDeltaSvnDeltaTarget">
            <summary>设置 SvnDeltaFileChangeEventArgs.PrepareForDelta(SvnDeltaTarget target) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaFileChangeEventArgs.TargetGet">
            <summary>设置 SvnDeltaFileChangeEventArgs.get_Target() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaFileChangeEventArgs.TargetSetSvnDeltaTarget">
            <summary>设置 SvnDeltaFileChangeEventArgs.set_Target(SvnDeltaTarget value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Delta.Fakes.ShimSvnDeltaFileChangeEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaFileChangeEventArgs.AllInstances.BaseMD5Get">
            <summary>设置 SvnDeltaFileChangeEventArgs.get_BaseMD5() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaFileChangeEventArgs.AllInstances.DeltaCompleteAddEventHandlerOfSvnDeltaCompleteEventArgs">
            <summary>设置 SvnDeltaFileChangeEventArgs.add_DeltaComplete(EventHandler`1&lt;SvnDeltaCompleteEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaFileChangeEventArgs.AllInstances.DeltaCompleteRaiseObjectSvnDeltaCompleteEventArgs">
            <summary>设置 SvnDeltaFileChangeEventArgs.raise_DeltaComplete(Object sender, SvnDeltaCompleteEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaFileChangeEventArgs.AllInstances.DeltaCompleteRemoveEventHandlerOfSvnDeltaCompleteEventArgs">
            <summary>设置 SvnDeltaFileChangeEventArgs.remove_DeltaComplete(EventHandler`1&lt;SvnDeltaCompleteEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaFileChangeEventArgs.AllInstances.DetachBoolean">
            <summary>设置 SvnDeltaFileChangeEventArgs.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaFileChangeEventArgs.AllInstances.InvokeDeltaCompleteObjectSvnDeltaCompleteEventArgs">
            <summary>设置 SvnDeltaFileChangeEventArgs.InvokeDeltaComplete(Object sender, SvnDeltaCompleteEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaFileChangeEventArgs.AllInstances.OnDeltaCompleteSvnDeltaCompleteEventArgs">
            <summary>设置 SvnDeltaFileChangeEventArgs.OnDeltaComplete(SvnDeltaCompleteEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaFileChangeEventArgs.AllInstances.PrepareForDeltaSvnDeltaTarget">
            <summary>设置 SvnDeltaFileChangeEventArgs.PrepareForDelta(SvnDeltaTarget target) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaFileChangeEventArgs.AllInstances.TargetGet">
            <summary>设置 SvnDeltaFileChangeEventArgs.get_Target() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaFileChangeEventArgs.AllInstances.TargetSetSvnDeltaTarget">
            <summary>设置 SvnDeltaFileChangeEventArgs.set_Target(SvnDeltaTarget value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Delta.Fakes.ShimSvnDeltaFileCloseEventArgs">
            <summary>SharpSvn.Delta.SvnDeltaFileCloseEventArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaFileCloseEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaFileCloseEventArgs.#ctor(SharpSvn.Delta.SvnDeltaFileCloseEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaFileCloseEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaFileCloseEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaFileCloseEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:SharpSvn.Delta.Fakes.ShimSvnDeltaFileCloseEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Delta.Fakes.ShimSvnDeltaFileOpenEventArgs">
            <summary>SharpSvn.Delta.SvnDeltaFileOpenEventArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaFileOpenEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaFileOpenEventArgs.#ctor(SharpSvn.Delta.SvnDeltaFileOpenEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaFileOpenEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaFileOpenEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaFileOpenEventArgs.BaseRevisionGet">
            <summary>设置 SvnDeltaFileOpenEventArgs.get_BaseRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaFileOpenEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaFileOpenEventArgs.ConstructorSvnDeltaNodeInt64">
            <summary>设置 SvnDeltaFileOpenEventArgs.SvnDeltaFileOpenEventArgs(SvnDeltaNode fileNode, Int64 baseRevision) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Delta.Fakes.ShimSvnDeltaFileOpenEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaFileOpenEventArgs.AllInstances.BaseRevisionGet">
            <summary>设置 SvnDeltaFileOpenEventArgs.get_BaseRevision() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Delta.Fakes.ShimSvnDeltaFilePropertyChangeEventArgs">
            <summary>SharpSvn.Delta.SvnDeltaFilePropertyChangeEventArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaFilePropertyChangeEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaFilePropertyChangeEventArgs.#ctor(SharpSvn.Delta.SvnDeltaFilePropertyChangeEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaFilePropertyChangeEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaFilePropertyChangeEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaFilePropertyChangeEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaFilePropertyChangeEventArgs.DetachBoolean">
            <summary>设置 SvnDeltaFilePropertyChangeEventArgs.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaFilePropertyChangeEventArgs.PropertyKindGet">
            <summary>设置 SvnDeltaFilePropertyChangeEventArgs.get_PropertyKind() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaFilePropertyChangeEventArgs.PropertyNameGet">
            <summary>设置 SvnDeltaFilePropertyChangeEventArgs.get_PropertyName() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaFilePropertyChangeEventArgs.ValueGet">
            <summary>设置 SvnDeltaFilePropertyChangeEventArgs.get_Value() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Delta.Fakes.ShimSvnDeltaFilePropertyChangeEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaFilePropertyChangeEventArgs.AllInstances.DetachBoolean">
            <summary>设置 SvnDeltaFilePropertyChangeEventArgs.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaFilePropertyChangeEventArgs.AllInstances.PropertyKindGet">
            <summary>设置 SvnDeltaFilePropertyChangeEventArgs.get_PropertyKind() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaFilePropertyChangeEventArgs.AllInstances.PropertyNameGet">
            <summary>设置 SvnDeltaFilePropertyChangeEventArgs.get_PropertyName() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaFilePropertyChangeEventArgs.AllInstances.ValueGet">
            <summary>设置 SvnDeltaFilePropertyChangeEventArgs.get_Value() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Delta.Fakes.ShimSvnDeltaFileTransform">
            <summary>SharpSvn.Delta.SvnDeltaFileTransform 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaFileTransform.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaFileTransform.#ctor(SharpSvn.Delta.SvnDeltaFileTransform)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaFileTransform.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaFileTransform.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaFileTransform.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaFileTransform.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaFileTransform.ConstructorStringString">
            <summary>设置 SvnDeltaFileTransform.SvnDeltaFileTransform(String baseFile, String toFile) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaFileTransform.ConstructorStringStringBoolean">
            <summary>设置 SvnDeltaFileTransform.SvnDeltaFileTransform(String baseFile, String toFile, Boolean verifyBase) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaFileTransform.DisposeBoolean">
            <summary>设置 SvnDeltaFileTransform.Dispose(Boolean ) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaFileTransform.OnDeltaWindowSvnDeltaWindowEventArgs">
            <summary>设置 SvnDeltaFileTransform.OnDeltaWindow(SvnDeltaWindowEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaFileTransform.OnFileChangeSvnDeltaFileChangeEventArgs">
            <summary>设置 SvnDeltaFileTransform.OnFileChange(SvnDeltaFileChangeEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaFileTransform._SvnDeltaFileTransform">
            <summary>设置 SvnDeltaFileTransform.~SvnDeltaFileTransform() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Delta.Fakes.ShimSvnDeltaFileTransform.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaFileTransform.AllInstances.DisposeBoolean">
            <summary>设置 SvnDeltaFileTransform.Dispose(Boolean ) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaFileTransform.AllInstances.OnDeltaWindowSvnDeltaWindowEventArgs">
            <summary>设置 SvnDeltaFileTransform.OnDeltaWindow(SvnDeltaWindowEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaFileTransform.AllInstances.OnFileChangeSvnDeltaFileChangeEventArgs">
            <summary>设置 SvnDeltaFileTransform.OnFileChange(SvnDeltaFileChangeEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaFileTransform.AllInstances._SvnDeltaFileTransform">
            <summary>设置 SvnDeltaFileTransform.~SvnDeltaFileTransform() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Delta.Fakes.ShimSvnDeltaNode">
            <summary>SharpSvn.Delta.SvnDeltaNode 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaNode.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaNode.#ctor(SharpSvn.Delta.SvnDeltaNode)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaNode.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaNode.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaNode.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaNode.ConstructorStringSvnDeltaNode">
            <summary>设置 SvnDeltaNode.SvnDeltaNode(String path, SvnDeltaNode parent) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaNode.NameGet">
            <summary>设置 SvnDeltaNode.get_Name() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaNode.OnCloseSvnDeltaEventArgs">
            <summary>设置 SvnDeltaNode.OnClose(SvnDeltaEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaNode.ParentDirectoryGet">
            <summary>设置 SvnDeltaNode.get_ParentDirectory() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaNode.PathGet">
            <summary>设置 SvnDeltaNode.get_Path() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Delta.Fakes.ShimSvnDeltaNode.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaNode.AllInstances.NameGet">
            <summary>设置 SvnDeltaNode.get_Name() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaNode.AllInstances.OnCloseSvnDeltaEventArgs">
            <summary>设置 SvnDeltaNode.OnClose(SvnDeltaEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaNode.AllInstances.ParentDirectoryGet">
            <summary>设置 SvnDeltaNode.get_ParentDirectory() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaNode.AllInstances.PathGet">
            <summary>设置 SvnDeltaNode.get_Path() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Delta.Fakes.ShimSvnDeltaNodeEventArgs">
            <summary>SharpSvn.Delta.SvnDeltaNodeEventArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaNodeEventArgs.#ctor(SharpSvn.Delta.SvnDeltaNodeEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaNodeEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaNodeEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaNodeEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaNodeEventArgs.ConstructorSvnDeltaNode">
            <summary>设置 SvnDeltaNodeEventArgs.SvnDeltaNodeEventArgs(SvnDeltaNode node) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaNodeEventArgs.NameGet">
            <summary>设置 SvnDeltaNodeEventArgs.get_Name() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaNodeEventArgs.NodeGet">
            <summary>设置 SvnDeltaNodeEventArgs.get_Node() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaNodeEventArgs.PathGet">
            <summary>设置 SvnDeltaNodeEventArgs.get_Path() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Delta.Fakes.ShimSvnDeltaNodeEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaNodeEventArgs.AllInstances.NameGet">
            <summary>设置 SvnDeltaNodeEventArgs.get_Name() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaNodeEventArgs.AllInstances.NodeGet">
            <summary>设置 SvnDeltaNodeEventArgs.get_Node() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaNodeEventArgs.AllInstances.PathGet">
            <summary>设置 SvnDeltaNodeEventArgs.get_Path() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Delta.Fakes.ShimSvnDeltaOpenEventArgs">
            <summary>SharpSvn.Delta.SvnDeltaOpenEventArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaOpenEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaOpenEventArgs.#ctor(SharpSvn.Delta.SvnDeltaOpenEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaOpenEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaOpenEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaOpenEventArgs.BaseRevisionGet">
            <summary>设置 SvnDeltaOpenEventArgs.get_BaseRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaOpenEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaOpenEventArgs.ConstructorInt64">
            <summary>设置 SvnDeltaOpenEventArgs.SvnDeltaOpenEventArgs(Int64 baseRevision) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Delta.Fakes.ShimSvnDeltaOpenEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaOpenEventArgs.AllInstances.BaseRevisionGet">
            <summary>设置 SvnDeltaOpenEventArgs.get_BaseRevision() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Delta.Fakes.ShimSvnDeltaSetTargetEventArgs">
            <summary>SharpSvn.Delta.SvnDeltaSetTargetEventArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaSetTargetEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaSetTargetEventArgs.#ctor(SharpSvn.Delta.SvnDeltaSetTargetEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaSetTargetEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaSetTargetEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaSetTargetEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaSetTargetEventArgs.ConstructorInt64">
            <summary>设置 SvnDeltaSetTargetEventArgs.SvnDeltaSetTargetEventArgs(Int64 targetRevision) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaSetTargetEventArgs.TargetRevisionGet">
            <summary>设置 SvnDeltaSetTargetEventArgs.get_TargetRevision() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Delta.Fakes.ShimSvnDeltaSetTargetEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaSetTargetEventArgs.AllInstances.TargetRevisionGet">
            <summary>设置 SvnDeltaSetTargetEventArgs.get_TargetRevision() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Delta.Fakes.ShimSvnDeltaTarget">
            <summary>SharpSvn.Delta.SvnDeltaTarget 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaTarget.#ctor(SharpSvn.Delta.SvnDeltaTarget)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaTarget.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaTarget.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaTarget.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaTarget.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaTarget.Constructor">
            <summary>设置 SvnDeltaTarget.SvnDeltaTarget() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaTarget.DeltaCompleteAddEventHandlerOfSvnDeltaCompleteEventArgs">
            <summary>设置 SvnDeltaTarget.add_DeltaComplete(EventHandler`1&lt;SvnDeltaCompleteEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaTarget.DeltaCompleteRaiseObjectSvnDeltaCompleteEventArgs">
            <summary>设置 SvnDeltaTarget.raise_DeltaComplete(Object sender, SvnDeltaCompleteEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaTarget.DeltaCompleteRemoveEventHandlerOfSvnDeltaCompleteEventArgs">
            <summary>设置 SvnDeltaTarget.remove_DeltaComplete(EventHandler`1&lt;SvnDeltaCompleteEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaTarget.Dispose">
            <summary>设置 SvnDeltaTarget.Dispose() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaTarget.DisposeBoolean">
            <summary>设置 SvnDeltaTarget.Dispose(Boolean ) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaTarget.InvokeFileChangeSvnDeltaFileChangeEventArgs">
            <summary>设置 SvnDeltaTarget.InvokeFileChange(SvnDeltaFileChangeEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaTarget.IsDisposedGet">
            <summary>设置 SvnDeltaTarget.get_IsDisposed() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaTarget.OnDeltaCompleteSvnDeltaCompleteEventArgs">
            <summary>设置 SvnDeltaTarget.OnDeltaComplete(SvnDeltaCompleteEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaTarget.OnDeltaWindowSvnDeltaWindowEventArgs">
            <summary>设置 SvnDeltaTarget.OnDeltaWindow(SvnDeltaWindowEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaTarget.OnFileChangeSvnDeltaFileChangeEventArgs">
            <summary>设置 SvnDeltaTarget.OnFileChange(SvnDeltaFileChangeEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaTarget._SvnDeltaTarget">
            <summary>设置 SvnDeltaTarget.~SvnDeltaTarget() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaTarget.final_windowSvnDeltaCompleteEventArgs">
            <summary>设置 SvnDeltaTarget.final_window(SvnDeltaCompleteEventArgs e) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Delta.Fakes.ShimSvnDeltaTarget.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaTarget.AllInstances.DeltaCompleteAddEventHandlerOfSvnDeltaCompleteEventArgs">
            <summary>设置 SvnDeltaTarget.add_DeltaComplete(EventHandler`1&lt;SvnDeltaCompleteEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaTarget.AllInstances.DeltaCompleteRaiseObjectSvnDeltaCompleteEventArgs">
            <summary>设置 SvnDeltaTarget.raise_DeltaComplete(Object sender, SvnDeltaCompleteEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaTarget.AllInstances.DeltaCompleteRemoveEventHandlerOfSvnDeltaCompleteEventArgs">
            <summary>设置 SvnDeltaTarget.remove_DeltaComplete(EventHandler`1&lt;SvnDeltaCompleteEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaTarget.AllInstances.Dispose">
            <summary>设置 SvnDeltaTarget.Dispose() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaTarget.AllInstances.DisposeBoolean">
            <summary>设置 SvnDeltaTarget.Dispose(Boolean ) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaTarget.AllInstances.InvokeFileChangeSvnDeltaFileChangeEventArgs">
            <summary>设置 SvnDeltaTarget.InvokeFileChange(SvnDeltaFileChangeEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaTarget.AllInstances.IsDisposedGet">
            <summary>设置 SvnDeltaTarget.get_IsDisposed() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaTarget.AllInstances.OnDeltaCompleteSvnDeltaCompleteEventArgs">
            <summary>设置 SvnDeltaTarget.OnDeltaComplete(SvnDeltaCompleteEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaTarget.AllInstances.OnDeltaWindowSvnDeltaWindowEventArgs">
            <summary>设置 SvnDeltaTarget.OnDeltaWindow(SvnDeltaWindowEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaTarget.AllInstances.OnFileChangeSvnDeltaFileChangeEventArgs">
            <summary>设置 SvnDeltaTarget.OnFileChange(SvnDeltaFileChangeEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaTarget.AllInstances._SvnDeltaTarget">
            <summary>设置 SvnDeltaTarget.~SvnDeltaTarget() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaTarget.AllInstances.final_windowSvnDeltaCompleteEventArgs">
            <summary>设置 SvnDeltaTarget.final_window(SvnDeltaCompleteEventArgs e) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Delta.Fakes.ShimSvnDeltaWindowEventArgs">
            <summary>SharpSvn.Delta.SvnDeltaWindowEventArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaWindowEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaWindowEventArgs.#ctor(SharpSvn.Delta.SvnDeltaWindowEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaWindowEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.ShimSvnDeltaWindowEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaWindowEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaWindowEventArgs.DetachBoolean">
            <summary>设置 SvnDeltaWindowEventArgs.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Delta.Fakes.ShimSvnDeltaWindowEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.ShimSvnDeltaWindowEventArgs.AllInstances.DetachBoolean">
            <summary>设置 SvnDeltaWindowEventArgs.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Delta.Fakes.StubSvnDeltaEditor">
            <summary>SharpSvn.Delta.SvnDeltaEditor 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.StubSvnDeltaEditor.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.StubSvnDeltaEditor.CreateDirectoryNode(SharpSvn.Delta.SvnDeltaNode,System.String)">
            <summary>设置 SvnDeltaEditor.CreateDirectoryNode(SvnDeltaNode parent, String path) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Delta.Fakes.StubSvnDeltaEditor.CreateDirectoryNodeSvnDeltaNodeString">
            <summary>设置 SvnDeltaEditor.CreateDirectoryNode(SvnDeltaNode parent, String path) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.StubSvnDeltaEditor.CreateFileNode(SharpSvn.Delta.SvnDeltaNode,System.String)">
            <summary>设置 SvnDeltaEditor.CreateFileNode(SvnDeltaNode parent, String path) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Delta.Fakes.StubSvnDeltaEditor.CreateFileNodeSvnDeltaNodeString">
            <summary>设置 SvnDeltaEditor.CreateFileNode(SvnDeltaNode parent, String path) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.StubSvnDeltaEditor.InitializeStub">
            <summary>初始化 type StubSvnDeltaEditor 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.StubSvnDeltaEditor.OnAbort(SharpSvn.Delta.SvnDeltaAbortEventArgs)">
            <summary>设置 SvnDeltaEditor.OnAbort(SvnDeltaAbortEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Delta.Fakes.StubSvnDeltaEditor.OnAbortSvnDeltaAbortEventArgs">
            <summary>设置 SvnDeltaEditor.OnAbort(SvnDeltaAbortEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.StubSvnDeltaEditor.OnClose(SharpSvn.Delta.SvnDeltaCloseEventArgs)">
            <summary>设置 SvnDeltaEditor.OnClose(SvnDeltaCloseEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Delta.Fakes.StubSvnDeltaEditor.OnCloseSvnDeltaCloseEventArgs">
            <summary>设置 SvnDeltaEditor.OnClose(SvnDeltaCloseEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.StubSvnDeltaEditor.OnDeleteEntry(SharpSvn.Delta.SvnDeltaDeleteEntryEventArgs)">
            <summary>设置 SvnDeltaEditor.OnDeleteEntry(SvnDeltaDeleteEntryEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Delta.Fakes.StubSvnDeltaEditor.OnDeleteEntrySvnDeltaDeleteEntryEventArgs">
            <summary>设置 SvnDeltaEditor.OnDeleteEntry(SvnDeltaDeleteEntryEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.StubSvnDeltaEditor.OnDirectoryAbsent(SharpSvn.Delta.SvnDeltaDirectoryAbsentEventArgs)">
            <summary>设置 SvnDeltaEditor.OnDirectoryAbsent(SvnDeltaDirectoryAbsentEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Delta.Fakes.StubSvnDeltaEditor.OnDirectoryAbsentSvnDeltaDirectoryAbsentEventArgs">
            <summary>设置 SvnDeltaEditor.OnDirectoryAbsent(SvnDeltaDirectoryAbsentEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.StubSvnDeltaEditor.OnDirectoryAdd(SharpSvn.Delta.SvnDeltaDirectoryAddEventArgs)">
            <summary>设置 SvnDeltaEditor.OnDirectoryAdd(SvnDeltaDirectoryAddEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Delta.Fakes.StubSvnDeltaEditor.OnDirectoryAddSvnDeltaDirectoryAddEventArgs">
            <summary>设置 SvnDeltaEditor.OnDirectoryAdd(SvnDeltaDirectoryAddEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.StubSvnDeltaEditor.OnDirectoryClose(SharpSvn.Delta.SvnDeltaDirectoryCloseEventArgs)">
            <summary>设置 SvnDeltaEditor.OnDirectoryClose(SvnDeltaDirectoryCloseEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Delta.Fakes.StubSvnDeltaEditor.OnDirectoryCloseSvnDeltaDirectoryCloseEventArgs">
            <summary>设置 SvnDeltaEditor.OnDirectoryClose(SvnDeltaDirectoryCloseEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.StubSvnDeltaEditor.OnDirectoryOpen(SharpSvn.Delta.SvnDeltaDirectoryOpenEventArgs)">
            <summary>设置 SvnDeltaEditor.OnDirectoryOpen(SvnDeltaDirectoryOpenEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Delta.Fakes.StubSvnDeltaEditor.OnDirectoryOpenSvnDeltaDirectoryOpenEventArgs">
            <summary>设置 SvnDeltaEditor.OnDirectoryOpen(SvnDeltaDirectoryOpenEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.StubSvnDeltaEditor.OnDirectoryPropertyChange(SharpSvn.Delta.SvnDeltaDirectoryPropertyChangeEventArgs)">
            <summary>设置 SvnDeltaEditor.OnDirectoryPropertyChange(SvnDeltaDirectoryPropertyChangeEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Delta.Fakes.StubSvnDeltaEditor.OnDirectoryPropertyChangeSvnDeltaDirectoryPropertyChangeEventArgs">
            <summary>设置 SvnDeltaEditor.OnDirectoryPropertyChange(SvnDeltaDirectoryPropertyChangeEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.StubSvnDeltaEditor.OnFileAbsent(SharpSvn.Delta.SvnDeltaFileAbsentEventArgs)">
            <summary>设置 SvnDeltaEditor.OnFileAbsent(SvnDeltaFileAbsentEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Delta.Fakes.StubSvnDeltaEditor.OnFileAbsentSvnDeltaFileAbsentEventArgs">
            <summary>设置 SvnDeltaEditor.OnFileAbsent(SvnDeltaFileAbsentEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.StubSvnDeltaEditor.OnFileAdd(SharpSvn.Delta.SvnDeltaFileAddEventArgs)">
            <summary>设置 SvnDeltaEditor.OnFileAdd(SvnDeltaFileAddEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Delta.Fakes.StubSvnDeltaEditor.OnFileAddSvnDeltaFileAddEventArgs">
            <summary>设置 SvnDeltaEditor.OnFileAdd(SvnDeltaFileAddEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.StubSvnDeltaEditor.OnFileChange(SharpSvn.Delta.SvnDeltaFileChangeEventArgs)">
            <summary>设置 SvnDeltaEditor.OnFileChange(SvnDeltaFileChangeEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Delta.Fakes.StubSvnDeltaEditor.OnFileChangeSvnDeltaFileChangeEventArgs">
            <summary>设置 SvnDeltaEditor.OnFileChange(SvnDeltaFileChangeEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.StubSvnDeltaEditor.OnFileClose(SharpSvn.Delta.SvnDeltaFileCloseEventArgs)">
            <summary>设置 SvnDeltaEditor.OnFileClose(SvnDeltaFileCloseEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Delta.Fakes.StubSvnDeltaEditor.OnFileCloseSvnDeltaFileCloseEventArgs">
            <summary>设置 SvnDeltaEditor.OnFileClose(SvnDeltaFileCloseEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.StubSvnDeltaEditor.OnFileOpen(SharpSvn.Delta.SvnDeltaFileOpenEventArgs)">
            <summary>设置 SvnDeltaEditor.OnFileOpen(SvnDeltaFileOpenEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Delta.Fakes.StubSvnDeltaEditor.OnFileOpenSvnDeltaFileOpenEventArgs">
            <summary>设置 SvnDeltaEditor.OnFileOpen(SvnDeltaFileOpenEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.StubSvnDeltaEditor.OnFilePropertyChange(SharpSvn.Delta.SvnDeltaFilePropertyChangeEventArgs)">
            <summary>设置 SvnDeltaEditor.OnFilePropertyChange(SvnDeltaFilePropertyChangeEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Delta.Fakes.StubSvnDeltaEditor.OnFilePropertyChangeSvnDeltaFilePropertyChangeEventArgs">
            <summary>设置 SvnDeltaEditor.OnFilePropertyChange(SvnDeltaFilePropertyChangeEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.StubSvnDeltaEditor.OnOpen(SharpSvn.Delta.SvnDeltaOpenEventArgs)">
            <summary>设置 SvnDeltaEditor.OnOpen(SvnDeltaOpenEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Delta.Fakes.StubSvnDeltaEditor.OnOpenSvnDeltaOpenEventArgs">
            <summary>设置 SvnDeltaEditor.OnOpen(SvnDeltaOpenEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.StubSvnDeltaEditor.OnSetTarget(SharpSvn.Delta.SvnDeltaSetTargetEventArgs)">
            <summary>设置 SvnDeltaEditor.OnSetTarget(SvnDeltaSetTargetEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Delta.Fakes.StubSvnDeltaEditor.OnSetTargetSvnDeltaSetTargetEventArgs">
            <summary>设置 SvnDeltaEditor.OnSetTarget(SvnDeltaSetTargetEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.StubSvnDeltaEditor.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.StubSvnDeltaEditor.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.StubSvnDeltaEditor.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Delta.Fakes.StubSvnDeltaFileTransform">
            <summary>SharpSvn.Delta.SvnDeltaFileTransform 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.StubSvnDeltaFileTransform.#ctor(System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.StubSvnDeltaFileTransform.#ctor(System.String,System.String,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.StubSvnDeltaFileTransform.Dispose(System.Boolean)">
            <summary>设置 SvnDeltaFileTransform.Dispose(Boolean ) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Delta.Fakes.StubSvnDeltaFileTransform.DisposeBoolean">
            <summary>设置 SvnDeltaFileTransform.Dispose(Boolean ) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.StubSvnDeltaFileTransform.InitializeStub">
            <summary>初始化 type StubSvnDeltaFileTransform 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.StubSvnDeltaFileTransform.OnDeltaComplete(SharpSvn.Delta.SvnDeltaCompleteEventArgs)">
            <summary>设置 SvnDeltaTarget.OnDeltaComplete(SvnDeltaCompleteEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Delta.Fakes.StubSvnDeltaFileTransform.OnDeltaCompleteSvnDeltaCompleteEventArgs">
            <summary>设置 SvnDeltaTarget.OnDeltaComplete(SvnDeltaCompleteEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.StubSvnDeltaFileTransform.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.StubSvnDeltaFileTransform.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.StubSvnDeltaFileTransform.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Delta.Fakes.StubSvnDeltaNode">
            <summary>SharpSvn.Delta.SvnDeltaNode 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.StubSvnDeltaNode.#ctor(System.String,SharpSvn.Delta.SvnDeltaNode)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.StubSvnDeltaNode.InitializeStub">
            <summary>初始化 type StubSvnDeltaNode 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.StubSvnDeltaNode.OnClose(SharpSvn.Delta.SvnDeltaEventArgs)">
            <summary>设置 SvnDeltaNode.OnClose(SvnDeltaEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Delta.Fakes.StubSvnDeltaNode.OnCloseSvnDeltaEventArgs">
            <summary>设置 SvnDeltaNode.OnClose(SvnDeltaEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.StubSvnDeltaNode.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.StubSvnDeltaNode.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.StubSvnDeltaNode.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Delta.Fakes.StubSvnDeltaTarget">
            <summary>SharpSvn.Delta.SvnDeltaTarget 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.StubSvnDeltaTarget.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.StubSvnDeltaTarget.Dispose(System.Boolean)">
            <summary>设置 SvnDeltaTarget.Dispose(Boolean ) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Delta.Fakes.StubSvnDeltaTarget.DisposeBoolean">
            <summary>设置 SvnDeltaTarget.Dispose(Boolean ) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.StubSvnDeltaTarget.InitializeStub">
            <summary>初始化 type StubSvnDeltaTarget 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.StubSvnDeltaTarget.OnDeltaComplete(SharpSvn.Delta.SvnDeltaCompleteEventArgs)">
            <summary>设置 SvnDeltaTarget.OnDeltaComplete(SvnDeltaCompleteEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Delta.Fakes.StubSvnDeltaTarget.OnDeltaCompleteSvnDeltaCompleteEventArgs">
            <summary>设置 SvnDeltaTarget.OnDeltaComplete(SvnDeltaCompleteEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.StubSvnDeltaTarget.OnDeltaWindow(SharpSvn.Delta.SvnDeltaWindowEventArgs)">
            <summary>设置 SvnDeltaTarget.OnDeltaWindow(SvnDeltaWindowEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Delta.Fakes.StubSvnDeltaTarget.OnDeltaWindowSvnDeltaWindowEventArgs">
            <summary>设置 SvnDeltaTarget.OnDeltaWindow(SvnDeltaWindowEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Delta.Fakes.StubSvnDeltaTarget.OnFileChange(SharpSvn.Delta.SvnDeltaFileChangeEventArgs)">
            <summary>设置 SvnDeltaTarget.OnFileChange(SvnDeltaFileChangeEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Delta.Fakes.StubSvnDeltaTarget.OnFileChangeSvnDeltaFileChangeEventArgs">
            <summary>设置 SvnDeltaTarget.OnFileChange(SvnDeltaFileChangeEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.StubSvnDeltaTarget.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.StubSvnDeltaTarget.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Delta.Fakes.StubSvnDeltaTarget.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Diff.Fakes.ShimSvnDiff`1">
            <summary>SharpSvn.Diff.SvnDiff`1 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Diff.Fakes.ShimSvnDiff`1.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Diff.Fakes.ShimSvnDiff`1.#ctor(SharpSvn.Diff.SvnDiff{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Diff.Fakes.ShimSvnDiff`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Diff.Fakes.ShimSvnDiff`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Diff.Fakes.ShimSvnDiff`1.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiff`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiff`1.ConstructorSvnDiffSourceOfT0SvnDiffSourceOfT0">
            <summary>设置 SvnDiff`1.SvnDiff`1(SvnDiffSource`1&lt;!0&gt; original, SvnDiffSource`1&lt;!0&gt; modified) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiff`1.ConstructorSvnDiffSourceOfT0SvnDiffSourceOfT0SvnDiffSourceOfT0">
            <summary>设置 SvnDiff`1.SvnDiff`1(SvnDiffSource`1&lt;!0&gt; original, SvnDiffSource`1&lt;!0&gt; modified, SvnDiffSource`1&lt;!0&gt; latest) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiff`1.ConstructorSvnDiffSourceOfT0SvnDiffSourceOfT0SvnDiffSourceOfT0SvnDiffSourceOfT0">
            <summary>设置 SvnDiff`1.SvnDiff`1(SvnDiffSource`1&lt;!0&gt; original, SvnDiffSource`1&lt;!0&gt; modified, SvnDiffSource`1&lt;!0&gt; latest, SvnDiffSource`1&lt;!0&gt; ancestor) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiff`1.CreateComparer">
            <summary>设置 SvnDiff`1.CreateComparer() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiff`1.Dispose">
            <summary>设置 SvnDiff`1.Dispose() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiff`1.DisposeBoolean">
            <summary>设置 SvnDiff`1.Dispose(Boolean ) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiff`1.HasConflictsGet">
            <summary>设置 SvnDiff`1.get_HasConflicts() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiff`1.HasDifferencesGet">
            <summary>设置 SvnDiff`1.get_HasDifferences() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiff`1.InitSvnDiffSourceOfT0SvnDiffSourceOfT0SvnDiffSourceOfT0SvnDiffSourceOfT0">
            <summary>设置 SvnDiff`1.Init(SvnDiffSource`1&lt;!0&gt; original, SvnDiffSource`1&lt;!0&gt; modified, SvnDiffSource`1&lt;!0&gt; latest, SvnDiffSource`1&lt;!0&gt; ancestor) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiff`1.TokenComparerGet">
            <summary>设置 SvnDiff`1.get_TokenComparer() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiff`1._SvnDiff1">
            <summary>设置 SvnDiff`1.~SvnDiff`1() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Diff.Fakes.ShimSvnDiff`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiff`1.AllInstances.CreateComparer">
            <summary>设置 SvnDiff`1.CreateComparer() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiff`1.AllInstances.Dispose">
            <summary>设置 SvnDiff`1.Dispose() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiff`1.AllInstances.DisposeBoolean">
            <summary>设置 SvnDiff`1.Dispose(Boolean ) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiff`1.AllInstances.HasConflictsGet">
            <summary>设置 SvnDiff`1.get_HasConflicts() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiff`1.AllInstances.HasDifferencesGet">
            <summary>设置 SvnDiff`1.get_HasDifferences() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiff`1.AllInstances.InitSvnDiffSourceOfT0SvnDiffSourceOfT0SvnDiffSourceOfT0SvnDiffSourceOfT0">
            <summary>设置 SvnDiff`1.Init(SvnDiffSource`1&lt;!0&gt; original, SvnDiffSource`1&lt;!0&gt; modified, SvnDiffSource`1&lt;!0&gt; latest, SvnDiffSource`1&lt;!0&gt; ancestor) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiff`1.AllInstances.TokenComparerGet">
            <summary>设置 SvnDiff`1.get_TokenComparer() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiff`1.AllInstances._SvnDiff1">
            <summary>设置 SvnDiff`1.~SvnDiff`1() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Diff.Fakes.ShimSvnDiffSource`1">
            <summary>SharpSvn.Diff.SvnDiffSource`1 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Diff.Fakes.ShimSvnDiffSource`1.#ctor(SharpSvn.Diff.SvnDiffSource{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Diff.Fakes.ShimSvnDiffSource`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Diff.Fakes.ShimSvnDiffSource`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Diff.Fakes.ShimSvnDiffSource`1.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Diff.Fakes.ShimSvnDiffSource`1.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Diff.Fakes.ShimSvnDiffSource`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiffSource`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiffSource`1.Constructor">
            <summary>设置 SvnDiffSource`1.SvnDiffSource`1() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiffSource`1.Dispose">
            <summary>设置 SvnDiffSource`1.Dispose() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiffSource`1.DisposeBoolean">
            <summary>设置 SvnDiffSource`1.Dispose(Boolean ) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiffSource`1.OldGetEnumerator">
            <summary>设置 SvnDiffSource`1.OldGetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiffSource`1._SvnDiffSource1">
            <summary>设置 SvnDiffSource`1.~SvnDiffSource`1() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Diff.Fakes.ShimSvnDiffSource`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiffSource`1.AllInstances.Dispose">
            <summary>设置 SvnDiffSource`1.Dispose() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiffSource`1.AllInstances.DisposeBoolean">
            <summary>设置 SvnDiffSource`1.Dispose(Boolean ) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiffSource`1.AllInstances.OldGetEnumerator">
            <summary>设置 SvnDiffSource`1.OldGetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiffSource`1.AllInstances._SvnDiffSource1">
            <summary>设置 SvnDiffSource`1.~SvnDiffSource`1() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Diff.Fakes.ShimSvnDiffWriteDifferencesArgs">
            <summary>SharpSvn.Diff.SvnDiffWriteDifferencesArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Diff.Fakes.ShimSvnDiffWriteDifferencesArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Diff.Fakes.ShimSvnDiffWriteDifferencesArgs.#ctor(SharpSvn.Diff.SvnDiffWriteDifferencesArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Diff.Fakes.ShimSvnDiffWriteDifferencesArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Diff.Fakes.ShimSvnDiffWriteDifferencesArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiffWriteDifferencesArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiffWriteDifferencesArgs.CommandTypeGet">
            <summary>设置 SvnDiffWriteDifferencesArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiffWriteDifferencesArgs.Constructor">
            <summary>设置 SvnDiffWriteDifferencesArgs.SvnDiffWriteDifferencesArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiffWriteDifferencesArgs.HeaderGet">
            <summary>设置 SvnDiffWriteDifferencesArgs.get_Header() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiffWriteDifferencesArgs.HeaderSetString">
            <summary>设置 SvnDiffWriteDifferencesArgs.set_Header(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiffWriteDifferencesArgs.ModifiedHeaderGet">
            <summary>设置 SvnDiffWriteDifferencesArgs.get_ModifiedHeader() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiffWriteDifferencesArgs.ModifiedHeaderSetString">
            <summary>设置 SvnDiffWriteDifferencesArgs.set_ModifiedHeader(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiffWriteDifferencesArgs.OriginalHeaderGet">
            <summary>设置 SvnDiffWriteDifferencesArgs.get_OriginalHeader() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiffWriteDifferencesArgs.OriginalHeaderSetString">
            <summary>设置 SvnDiffWriteDifferencesArgs.set_OriginalHeader(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiffWriteDifferencesArgs.RelativeToPathGet">
            <summary>设置 SvnDiffWriteDifferencesArgs.get_RelativeToPath() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiffWriteDifferencesArgs.RelativeToPathSetString">
            <summary>设置 SvnDiffWriteDifferencesArgs.set_RelativeToPath(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiffWriteDifferencesArgs.ShowCFunctionGet">
            <summary>设置 SvnDiffWriteDifferencesArgs.get_ShowCFunction() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiffWriteDifferencesArgs.ShowCFunctionSetBoolean">
            <summary>设置 SvnDiffWriteDifferencesArgs.set_ShowCFunction(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Diff.Fakes.ShimSvnDiffWriteDifferencesArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiffWriteDifferencesArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnDiffWriteDifferencesArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiffWriteDifferencesArgs.AllInstances.HeaderGet">
            <summary>设置 SvnDiffWriteDifferencesArgs.get_Header() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiffWriteDifferencesArgs.AllInstances.HeaderSetString">
            <summary>设置 SvnDiffWriteDifferencesArgs.set_Header(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiffWriteDifferencesArgs.AllInstances.ModifiedHeaderGet">
            <summary>设置 SvnDiffWriteDifferencesArgs.get_ModifiedHeader() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiffWriteDifferencesArgs.AllInstances.ModifiedHeaderSetString">
            <summary>设置 SvnDiffWriteDifferencesArgs.set_ModifiedHeader(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiffWriteDifferencesArgs.AllInstances.OriginalHeaderGet">
            <summary>设置 SvnDiffWriteDifferencesArgs.get_OriginalHeader() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiffWriteDifferencesArgs.AllInstances.OriginalHeaderSetString">
            <summary>设置 SvnDiffWriteDifferencesArgs.set_OriginalHeader(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiffWriteDifferencesArgs.AllInstances.RelativeToPathGet">
            <summary>设置 SvnDiffWriteDifferencesArgs.get_RelativeToPath() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiffWriteDifferencesArgs.AllInstances.RelativeToPathSetString">
            <summary>设置 SvnDiffWriteDifferencesArgs.set_RelativeToPath(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiffWriteDifferencesArgs.AllInstances.ShowCFunctionGet">
            <summary>设置 SvnDiffWriteDifferencesArgs.get_ShowCFunction() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiffWriteDifferencesArgs.AllInstances.ShowCFunctionSetBoolean">
            <summary>设置 SvnDiffWriteDifferencesArgs.set_ShowCFunction(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Diff.Fakes.ShimSvnDiffWriteMergedArgs">
            <summary>SharpSvn.Diff.SvnDiffWriteMergedArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Diff.Fakes.ShimSvnDiffWriteMergedArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Diff.Fakes.ShimSvnDiffWriteMergedArgs.#ctor(SharpSvn.Diff.SvnDiffWriteMergedArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Diff.Fakes.ShimSvnDiffWriteMergedArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Diff.Fakes.ShimSvnDiffWriteMergedArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiffWriteMergedArgs.AncestorPathGet">
            <summary>设置 SvnDiffWriteMergedArgs.get_AncestorPath() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiffWriteMergedArgs.AncestorPathSetString">
            <summary>设置 SvnDiffWriteMergedArgs.set_AncestorPath(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiffWriteMergedArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiffWriteMergedArgs.CommandTypeGet">
            <summary>设置 SvnDiffWriteMergedArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiffWriteMergedArgs.ConflictLatestGet">
            <summary>设置 SvnDiffWriteMergedArgs.get_ConflictLatest() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiffWriteMergedArgs.ConflictLatestSetString">
            <summary>设置 SvnDiffWriteMergedArgs.set_ConflictLatest(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiffWriteMergedArgs.ConflictModifiedGet">
            <summary>设置 SvnDiffWriteMergedArgs.get_ConflictModified() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiffWriteMergedArgs.ConflictModifiedSetString">
            <summary>设置 SvnDiffWriteMergedArgs.set_ConflictModified(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiffWriteMergedArgs.ConflictSeparatorGet">
            <summary>设置 SvnDiffWriteMergedArgs.get_ConflictSeparator() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiffWriteMergedArgs.ConflictSeparatorSetString">
            <summary>设置 SvnDiffWriteMergedArgs.set_ConflictSeparator(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiffWriteMergedArgs.Constructor">
            <summary>设置 SvnDiffWriteMergedArgs.SvnDiffWriteMergedArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiffWriteMergedArgs.DisplayGet">
            <summary>设置 SvnDiffWriteMergedArgs.get_Display() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiffWriteMergedArgs.DisplaySetSvnDiffDisplay">
            <summary>设置 SvnDiffWriteMergedArgs.set_Display(SvnDiffDisplay value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiffWriteMergedArgs.LatestPathGet">
            <summary>设置 SvnDiffWriteMergedArgs.get_LatestPath() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiffWriteMergedArgs.LatestPathSetString">
            <summary>设置 SvnDiffWriteMergedArgs.set_LatestPath(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiffWriteMergedArgs.ModifiedPathGet">
            <summary>设置 SvnDiffWriteMergedArgs.get_ModifiedPath() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiffWriteMergedArgs.ModifiedPathSetString">
            <summary>设置 SvnDiffWriteMergedArgs.set_ModifiedPath(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiffWriteMergedArgs.OriginalPathGet">
            <summary>设置 SvnDiffWriteMergedArgs.get_OriginalPath() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiffWriteMergedArgs.OriginalPathSetString">
            <summary>设置 SvnDiffWriteMergedArgs.set_OriginalPath(String value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Diff.Fakes.ShimSvnDiffWriteMergedArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiffWriteMergedArgs.AllInstances.AncestorPathGet">
            <summary>设置 SvnDiffWriteMergedArgs.get_AncestorPath() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiffWriteMergedArgs.AllInstances.AncestorPathSetString">
            <summary>设置 SvnDiffWriteMergedArgs.set_AncestorPath(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiffWriteMergedArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnDiffWriteMergedArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiffWriteMergedArgs.AllInstances.ConflictLatestGet">
            <summary>设置 SvnDiffWriteMergedArgs.get_ConflictLatest() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiffWriteMergedArgs.AllInstances.ConflictLatestSetString">
            <summary>设置 SvnDiffWriteMergedArgs.set_ConflictLatest(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiffWriteMergedArgs.AllInstances.ConflictModifiedGet">
            <summary>设置 SvnDiffWriteMergedArgs.get_ConflictModified() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiffWriteMergedArgs.AllInstances.ConflictModifiedSetString">
            <summary>设置 SvnDiffWriteMergedArgs.set_ConflictModified(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiffWriteMergedArgs.AllInstances.ConflictSeparatorGet">
            <summary>设置 SvnDiffWriteMergedArgs.get_ConflictSeparator() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiffWriteMergedArgs.AllInstances.ConflictSeparatorSetString">
            <summary>设置 SvnDiffWriteMergedArgs.set_ConflictSeparator(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiffWriteMergedArgs.AllInstances.DisplayGet">
            <summary>设置 SvnDiffWriteMergedArgs.get_Display() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiffWriteMergedArgs.AllInstances.DisplaySetSvnDiffDisplay">
            <summary>设置 SvnDiffWriteMergedArgs.set_Display(SvnDiffDisplay value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiffWriteMergedArgs.AllInstances.LatestPathGet">
            <summary>设置 SvnDiffWriteMergedArgs.get_LatestPath() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiffWriteMergedArgs.AllInstances.LatestPathSetString">
            <summary>设置 SvnDiffWriteMergedArgs.set_LatestPath(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiffWriteMergedArgs.AllInstances.ModifiedPathGet">
            <summary>设置 SvnDiffWriteMergedArgs.get_ModifiedPath() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiffWriteMergedArgs.AllInstances.ModifiedPathSetString">
            <summary>设置 SvnDiffWriteMergedArgs.set_ModifiedPath(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiffWriteMergedArgs.AllInstances.OriginalPathGet">
            <summary>设置 SvnDiffWriteMergedArgs.get_OriginalPath() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnDiffWriteMergedArgs.AllInstances.OriginalPathSetString">
            <summary>设置 SvnDiffWriteMergedArgs.set_OriginalPath(String value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Diff.Fakes.ShimSvnFileDiff">
            <summary>SharpSvn.Diff.SvnFileDiff 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Diff.Fakes.ShimSvnFileDiff.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Diff.Fakes.ShimSvnFileDiff.#ctor(SharpSvn.Diff.SvnFileDiff)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Diff.Fakes.ShimSvnFileDiff.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Diff.Fakes.ShimSvnFileDiff.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Diff.Fakes.ShimSvnFileDiff.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnFileDiff.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnFileDiff.TryCreateStringStringStringStringSvnFileDiffArgsSvnFileDiffOut">
            <summary>设置 SvnFileDiff.TryCreate(String originalPath, String modifiedPath, String latestPath, String ancestorPath, SvnFileDiffArgs args, SvnFileDiff&amp; diff) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnFileDiff.TryCreateStringStringStringSvnFileDiffArgsSvnFileDiffOut">
            <summary>设置 SvnFileDiff.TryCreate(String originalPath, String modifiedPath, String latestPath, SvnFileDiffArgs args, SvnFileDiff&amp; diff) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnFileDiff.TryCreateStringStringSvnFileDiffArgsSvnFileDiffOut">
            <summary>设置 SvnFileDiff.TryCreate(String originalPath, String modifiedPath, SvnFileDiffArgs args, SvnFileDiff&amp; diff) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnFileDiff.WriteDifferencesStreamSvnDiffWriteDifferencesArgs">
            <summary>设置 SvnFileDiff.WriteDifferences(Stream toStream, SvnDiffWriteDifferencesArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnFileDiff.WriteMergedStreamSvnDiffWriteMergedArgs">
            <summary>设置 SvnFileDiff.WriteMerged(Stream toStream, SvnDiffWriteMergedArgs args) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Diff.Fakes.ShimSvnFileDiff.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnFileDiff.AllInstances.WriteDifferencesStreamSvnDiffWriteDifferencesArgs">
            <summary>设置 SvnFileDiff.WriteDifferences(Stream toStream, SvnDiffWriteDifferencesArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnFileDiff.AllInstances.WriteMergedStreamSvnDiffWriteMergedArgs">
            <summary>设置 SvnFileDiff.WriteMerged(Stream toStream, SvnDiffWriteMergedArgs args) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Diff.Fakes.ShimSvnFileDiffArgs">
            <summary>SharpSvn.Diff.SvnFileDiffArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Diff.Fakes.ShimSvnFileDiffArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Diff.Fakes.ShimSvnFileDiffArgs.#ctor(SharpSvn.Diff.SvnFileDiffArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Diff.Fakes.ShimSvnFileDiffArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Diff.Fakes.ShimSvnFileDiffArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnFileDiffArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnFileDiffArgs.CommandTypeGet">
            <summary>设置 SvnFileDiffArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnFileDiffArgs.Constructor">
            <summary>设置 SvnFileDiffArgs.SvnFileDiffArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnFileDiffArgs.IgnoreLineEndingsGet">
            <summary>设置 SvnFileDiffArgs.get_IgnoreLineEndings() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnFileDiffArgs.IgnoreLineEndingsSetBoolean">
            <summary>设置 SvnFileDiffArgs.set_IgnoreLineEndings(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnFileDiffArgs.IgnoreSpacingGet">
            <summary>设置 SvnFileDiffArgs.get_IgnoreSpacing() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnFileDiffArgs.IgnoreSpacingSetSvnIgnoreSpacing">
            <summary>设置 SvnFileDiffArgs.set_IgnoreSpacing(SvnIgnoreSpacing value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnFileDiffArgs.ShowCFunctionGet">
            <summary>设置 SvnFileDiffArgs.get_ShowCFunction() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnFileDiffArgs.ShowCFunctionSetBoolean">
            <summary>设置 SvnFileDiffArgs.set_ShowCFunction(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Diff.Fakes.ShimSvnFileDiffArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnFileDiffArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnFileDiffArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnFileDiffArgs.AllInstances.IgnoreLineEndingsGet">
            <summary>设置 SvnFileDiffArgs.get_IgnoreLineEndings() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnFileDiffArgs.AllInstances.IgnoreLineEndingsSetBoolean">
            <summary>设置 SvnFileDiffArgs.set_IgnoreLineEndings(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnFileDiffArgs.AllInstances.IgnoreSpacingGet">
            <summary>设置 SvnFileDiffArgs.get_IgnoreSpacing() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnFileDiffArgs.AllInstances.IgnoreSpacingSetSvnIgnoreSpacing">
            <summary>设置 SvnFileDiffArgs.set_IgnoreSpacing(SvnIgnoreSpacing value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnFileDiffArgs.AllInstances.ShowCFunctionGet">
            <summary>设置 SvnFileDiffArgs.get_ShowCFunction() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.ShimSvnFileDiffArgs.AllInstances.ShowCFunctionSetBoolean">
            <summary>设置 SvnFileDiffArgs.set_ShowCFunction(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Diff.Fakes.StubSvnDiff`1">
            <summary>SharpSvn.Diff.SvnDiff`1 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Diff.Fakes.StubSvnDiff`1.#ctor(SharpSvn.Diff.SvnDiffSource{`0},SharpSvn.Diff.SvnDiffSource{`0})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Diff.Fakes.StubSvnDiff`1.#ctor(SharpSvn.Diff.SvnDiffSource{`0},SharpSvn.Diff.SvnDiffSource{`0},SharpSvn.Diff.SvnDiffSource{`0})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Diff.Fakes.StubSvnDiff`1.#ctor(SharpSvn.Diff.SvnDiffSource{`0},SharpSvn.Diff.SvnDiffSource{`0},SharpSvn.Diff.SvnDiffSource{`0},SharpSvn.Diff.SvnDiffSource{`0})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Diff.Fakes.StubSvnDiff`1.CreateComparer">
            <summary>设置 SvnDiff`1.CreateComparer() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Diff.Fakes.StubSvnDiff`1.CreateComparer01">
            <summary>设置 SvnDiff`1.CreateComparer() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Diff.Fakes.StubSvnDiff`1.Dispose(System.Boolean)">
            <summary>设置 SvnDiff`1.Dispose(Boolean ) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Diff.Fakes.StubSvnDiff`1.DisposeBoolean">
            <summary>设置 SvnDiff`1.Dispose(Boolean ) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Diff.Fakes.StubSvnDiff`1.InitializeStub">
            <summary>初始化 type StubSvnDiff 的新实例</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.StubSvnDiff`1.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.StubSvnDiff`1.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.StubSvnDiff`1.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Diff.Fakes.StubSvnDiffSource`1">
            <summary>SharpSvn.Diff.SvnDiffSource`1 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Diff.Fakes.StubSvnDiffSource`1.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Diff.Fakes.StubSvnDiffSource`1.Dispose(System.Boolean)">
            <summary>设置 SvnDiffSource`1.Dispose(Boolean ) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Diff.Fakes.StubSvnDiffSource`1.DisposeBoolean">
            <summary>设置 SvnDiffSource`1.Dispose(Boolean ) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Diff.Fakes.StubSvnDiffSource`1.GetEnumerator">
            <summary>设置 SvnDiffSource`1.GetEnumerator() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Diff.Fakes.StubSvnDiffSource`1.GetEnumerator01">
            <summary>设置 SvnDiffSource`1.GetEnumerator() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Diff.Fakes.StubSvnDiffSource`1.InitializeStub">
            <summary>初始化 type StubSvnDiffSource 的新实例</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.StubSvnDiffSource`1.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.StubSvnDiffSource`1.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.StubSvnDiffSource`1.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Diff.Fakes.StubSvnDiffWriteDifferencesArgs">
            <summary>SharpSvn.Diff.SvnDiffWriteDifferencesArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Diff.Fakes.StubSvnDiffWriteDifferencesArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Diff.Fakes.StubSvnDiffWriteDifferencesArgs.InitializeStub">
            <summary>初始化 type StubSvnDiffWriteDifferencesArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Diff.Fakes.StubSvnDiffWriteDifferencesArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Diff.Fakes.StubSvnDiffWriteDifferencesArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Diff.Fakes.StubSvnDiffWriteDifferencesArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Diff.Fakes.StubSvnDiffWriteDifferencesArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Diff.Fakes.StubSvnDiffWriteDifferencesArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Diff.Fakes.StubSvnDiffWriteDifferencesArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Diff.Fakes.StubSvnDiffWriteDifferencesArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Diff.Fakes.StubSvnDiffWriteDifferencesArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.StubSvnDiffWriteDifferencesArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.StubSvnDiffWriteDifferencesArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.StubSvnDiffWriteDifferencesArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Diff.Fakes.StubSvnDiffWriteMergedArgs">
            <summary>SharpSvn.Diff.SvnDiffWriteMergedArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Diff.Fakes.StubSvnDiffWriteMergedArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Diff.Fakes.StubSvnDiffWriteMergedArgs.InitializeStub">
            <summary>初始化 type StubSvnDiffWriteMergedArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Diff.Fakes.StubSvnDiffWriteMergedArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Diff.Fakes.StubSvnDiffWriteMergedArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Diff.Fakes.StubSvnDiffWriteMergedArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Diff.Fakes.StubSvnDiffWriteMergedArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Diff.Fakes.StubSvnDiffWriteMergedArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Diff.Fakes.StubSvnDiffWriteMergedArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Diff.Fakes.StubSvnDiffWriteMergedArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Diff.Fakes.StubSvnDiffWriteMergedArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.StubSvnDiffWriteMergedArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.StubSvnDiffWriteMergedArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.StubSvnDiffWriteMergedArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Diff.Fakes.StubSvnFileDiffArgs">
            <summary>SharpSvn.Diff.SvnFileDiffArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Diff.Fakes.StubSvnFileDiffArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Diff.Fakes.StubSvnFileDiffArgs.InitializeStub">
            <summary>初始化 type StubSvnFileDiffArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Diff.Fakes.StubSvnFileDiffArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Diff.Fakes.StubSvnFileDiffArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Diff.Fakes.StubSvnFileDiffArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Diff.Fakes.StubSvnFileDiffArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Diff.Fakes.StubSvnFileDiffArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Diff.Fakes.StubSvnFileDiffArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Diff.Fakes.StubSvnFileDiffArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Diff.Fakes.StubSvnFileDiffArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.StubSvnFileDiffArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.StubSvnFileDiffArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Diff.Fakes.StubSvnFileDiffArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnAddArgs">
            <summary>SharpSvn.SvnAddArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnAddArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnAddArgs.#ctor(SharpSvn.SvnAddArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnAddArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnAddArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnAddArgs.AddParentsGet">
            <summary>设置 SvnAddArgs.get_AddParents() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnAddArgs.AddParentsSetBoolean">
            <summary>设置 SvnAddArgs.set_AddParents(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnAddArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnAddArgs.CommandTypeGet">
            <summary>设置 SvnAddArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnAddArgs.Constructor">
            <summary>设置 SvnAddArgs.SvnAddArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnAddArgs.DepthGet">
            <summary>设置 SvnAddArgs.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnAddArgs.DepthSetSvnDepth">
            <summary>设置 SvnAddArgs.set_Depth(SvnDepth value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnAddArgs.ForceGet">
            <summary>设置 SvnAddArgs.get_Force() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnAddArgs.ForceSetBoolean">
            <summary>设置 SvnAddArgs.set_Force(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnAddArgs.NoAutoPropsGet">
            <summary>设置 SvnAddArgs.get_NoAutoProps() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnAddArgs.NoAutoPropsSetBoolean">
            <summary>设置 SvnAddArgs.set_NoAutoProps(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnAddArgs.NoIgnoreGet">
            <summary>设置 SvnAddArgs.get_NoIgnore() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnAddArgs.NoIgnoreSetBoolean">
            <summary>设置 SvnAddArgs.set_NoIgnore(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnAddArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnAddArgs.AllInstances.AddParentsGet">
            <summary>设置 SvnAddArgs.get_AddParents() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnAddArgs.AllInstances.AddParentsSetBoolean">
            <summary>设置 SvnAddArgs.set_AddParents(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnAddArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnAddArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnAddArgs.AllInstances.DepthGet">
            <summary>设置 SvnAddArgs.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnAddArgs.AllInstances.DepthSetSvnDepth">
            <summary>设置 SvnAddArgs.set_Depth(SvnDepth value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnAddArgs.AllInstances.ForceGet">
            <summary>设置 SvnAddArgs.get_Force() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnAddArgs.AllInstances.ForceSetBoolean">
            <summary>设置 SvnAddArgs.set_Force(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnAddArgs.AllInstances.NoAutoPropsGet">
            <summary>设置 SvnAddArgs.get_NoAutoProps() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnAddArgs.AllInstances.NoAutoPropsSetBoolean">
            <summary>设置 SvnAddArgs.set_NoAutoProps(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnAddArgs.AllInstances.NoIgnoreGet">
            <summary>设置 SvnAddArgs.get_NoIgnore() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnAddArgs.AllInstances.NoIgnoreSetBoolean">
            <summary>设置 SvnAddArgs.set_NoIgnore(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnAddToChangeListArgs">
            <summary>SharpSvn.SvnAddToChangeListArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnAddToChangeListArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnAddToChangeListArgs.#ctor(SharpSvn.SvnAddToChangeListArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnAddToChangeListArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnAddToChangeListArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnAddToChangeListArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnAddToChangeListArgs.ChangeListsGet">
            <summary>设置 SvnAddToChangeListArgs.get_ChangeLists() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnAddToChangeListArgs.CommandTypeGet">
            <summary>设置 SvnAddToChangeListArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnAddToChangeListArgs.Constructor">
            <summary>设置 SvnAddToChangeListArgs.SvnAddToChangeListArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnAddToChangeListArgs.DepthGet">
            <summary>设置 SvnAddToChangeListArgs.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnAddToChangeListArgs.DepthSetSvnDepth">
            <summary>设置 SvnAddToChangeListArgs.set_Depth(SvnDepth value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnAddToChangeListArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnAddToChangeListArgs.AllInstances.ChangeListsGet">
            <summary>设置 SvnAddToChangeListArgs.get_ChangeLists() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnAddToChangeListArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnAddToChangeListArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnAddToChangeListArgs.AllInstances.DepthGet">
            <summary>设置 SvnAddToChangeListArgs.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnAddToChangeListArgs.AllInstances.DepthSetSvnDepth">
            <summary>设置 SvnAddToChangeListArgs.set_Depth(SvnDepth value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnAppliedMergeInfo">
            <summary>SharpSvn.SvnAppliedMergeInfo 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnAppliedMergeInfo.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnAppliedMergeInfo.#ctor(SharpSvn.SvnAppliedMergeInfo)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnAppliedMergeInfo.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnAppliedMergeInfo.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnAppliedMergeInfo.AppliedMergesGet">
            <summary>设置 SvnAppliedMergeInfo.get_AppliedMerges() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnAppliedMergeInfo.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnAppliedMergeInfo.TargetGet">
            <summary>设置 SvnAppliedMergeInfo.get_Target() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnAppliedMergeInfo.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnAppliedMergeInfo.AllInstances.AppliedMergesGet">
            <summary>设置 SvnAppliedMergeInfo.get_AppliedMerges() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnAppliedMergeInfo.AllInstances.TargetGet">
            <summary>设置 SvnAppliedMergeInfo.get_Target() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnAuthenticationException">
            <summary>SharpSvn.SvnAuthenticationException 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnAuthenticationException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnAuthenticationException.#ctor(SharpSvn.SvnAuthenticationException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnAuthenticationException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnAuthenticationException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnAuthenticationException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnAuthenticationException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnAuthenticationException.Constructor">
            <summary>设置 SvnAuthenticationException.SvnAuthenticationException() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnAuthenticationException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 SvnAuthenticationException.SvnAuthenticationException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnAuthenticationException.ConstructorString">
            <summary>设置 SvnAuthenticationException.SvnAuthenticationException(String message) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnAuthenticationException.ConstructorStringException">
            <summary>设置 SvnAuthenticationException.SvnAuthenticationException(String message, Exception inner) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnAuthenticationException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnAuthorizationException">
            <summary>SharpSvn.SvnAuthorizationException 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnAuthorizationException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnAuthorizationException.#ctor(SharpSvn.SvnAuthorizationException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnAuthorizationException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnAuthorizationException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnAuthorizationException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnAuthorizationException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnAuthorizationException.Constructor">
            <summary>设置 SvnAuthorizationException.SvnAuthorizationException() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnAuthorizationException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 SvnAuthorizationException.SvnAuthorizationException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnAuthorizationException.ConstructorString">
            <summary>设置 SvnAuthorizationException.SvnAuthorizationException(String message) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnAuthorizationException.ConstructorStringException">
            <summary>设置 SvnAuthorizationException.SvnAuthorizationException(String message, Exception inner) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnAuthorizationException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnBlameArgs">
            <summary>SharpSvn.SvnBlameArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnBlameArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnBlameArgs.#ctor(SharpSvn.SvnBlameArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnBlameArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnBlameArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameArgs.BlameAddEventHandlerOfSvnBlameEventArgs">
            <summary>设置 SvnBlameArgs.add_Blame(EventHandler`1&lt;SvnBlameEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameArgs.BlameHandlerAddEventHandlerOfSvnBlameEventArgs">
            <summary>设置 SvnBlameArgs.add_BlameHandler(EventHandler`1&lt;SvnBlameEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameArgs.BlameHandlerRemoveEventHandlerOfSvnBlameEventArgs">
            <summary>设置 SvnBlameArgs.remove_BlameHandler(EventHandler`1&lt;SvnBlameEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameArgs.BlameRaiseObjectSvnBlameEventArgs">
            <summary>设置 SvnBlameArgs.raise_Blame(Object sender, SvnBlameEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameArgs.BlameRemoveEventHandlerOfSvnBlameEventArgs">
            <summary>设置 SvnBlameArgs.remove_Blame(EventHandler`1&lt;SvnBlameEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameArgs.CommandTypeGet">
            <summary>设置 SvnBlameArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameArgs.Constructor">
            <summary>设置 SvnBlameArgs.SvnBlameArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameArgs.EndGet">
            <summary>设置 SvnBlameArgs.get_End() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameArgs.EndSetSvnRevision">
            <summary>设置 SvnBlameArgs.set_End(SvnRevision value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameArgs.IgnoreLineEndingsGet">
            <summary>设置 SvnBlameArgs.get_IgnoreLineEndings() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameArgs.IgnoreLineEndingsSetBoolean">
            <summary>设置 SvnBlameArgs.set_IgnoreLineEndings(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameArgs.IgnoreMimeTypeGet">
            <summary>设置 SvnBlameArgs.get_IgnoreMimeType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameArgs.IgnoreMimeTypeSetBoolean">
            <summary>设置 SvnBlameArgs.set_IgnoreMimeType(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameArgs.IgnoreSpacingGet">
            <summary>设置 SvnBlameArgs.get_IgnoreSpacing() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameArgs.IgnoreSpacingSetSvnIgnoreSpacing">
            <summary>设置 SvnBlameArgs.set_IgnoreSpacing(SvnIgnoreSpacing value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameArgs.IncludeMergedRevisionsGet">
            <summary>设置 SvnBlameArgs.get_IncludeMergedRevisions() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameArgs.IncludeMergedRevisionsSetBoolean">
            <summary>设置 SvnBlameArgs.set_IncludeMergedRevisions(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameArgs.OnBlameSvnBlameEventArgs">
            <summary>设置 SvnBlameArgs.OnBlame(SvnBlameEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameArgs.RaiseBlameSvnBlameEventArgs">
            <summary>设置 SvnBlameArgs.RaiseBlame(SvnBlameEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameArgs.RangeGet">
            <summary>设置 SvnBlameArgs.get_Range() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameArgs.RangeSetSvnRevisionRange">
            <summary>设置 SvnBlameArgs.set_Range(SvnRevisionRange value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameArgs.RetrieveMergedRevisionsGet">
            <summary>设置 SvnBlameArgs.get_RetrieveMergedRevisions() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameArgs.RetrieveMergedRevisionsSetBoolean">
            <summary>设置 SvnBlameArgs.set_RetrieveMergedRevisions(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameArgs.StartGet">
            <summary>设置 SvnBlameArgs.get_Start() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameArgs.StartSetSvnRevision">
            <summary>设置 SvnBlameArgs.set_Start(SvnRevision value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnBlameArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameArgs.AllInstances.BlameAddEventHandlerOfSvnBlameEventArgs">
            <summary>设置 SvnBlameArgs.add_Blame(EventHandler`1&lt;SvnBlameEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameArgs.AllInstances.BlameHandlerAddEventHandlerOfSvnBlameEventArgs">
            <summary>设置 SvnBlameArgs.add_BlameHandler(EventHandler`1&lt;SvnBlameEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameArgs.AllInstances.BlameHandlerRemoveEventHandlerOfSvnBlameEventArgs">
            <summary>设置 SvnBlameArgs.remove_BlameHandler(EventHandler`1&lt;SvnBlameEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameArgs.AllInstances.BlameRaiseObjectSvnBlameEventArgs">
            <summary>设置 SvnBlameArgs.raise_Blame(Object sender, SvnBlameEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameArgs.AllInstances.BlameRemoveEventHandlerOfSvnBlameEventArgs">
            <summary>设置 SvnBlameArgs.remove_Blame(EventHandler`1&lt;SvnBlameEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnBlameArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameArgs.AllInstances.EndGet">
            <summary>设置 SvnBlameArgs.get_End() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameArgs.AllInstances.EndSetSvnRevision">
            <summary>设置 SvnBlameArgs.set_End(SvnRevision value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameArgs.AllInstances.IgnoreLineEndingsGet">
            <summary>设置 SvnBlameArgs.get_IgnoreLineEndings() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameArgs.AllInstances.IgnoreLineEndingsSetBoolean">
            <summary>设置 SvnBlameArgs.set_IgnoreLineEndings(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameArgs.AllInstances.IgnoreMimeTypeGet">
            <summary>设置 SvnBlameArgs.get_IgnoreMimeType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameArgs.AllInstances.IgnoreMimeTypeSetBoolean">
            <summary>设置 SvnBlameArgs.set_IgnoreMimeType(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameArgs.AllInstances.IgnoreSpacingGet">
            <summary>设置 SvnBlameArgs.get_IgnoreSpacing() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameArgs.AllInstances.IgnoreSpacingSetSvnIgnoreSpacing">
            <summary>设置 SvnBlameArgs.set_IgnoreSpacing(SvnIgnoreSpacing value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameArgs.AllInstances.IncludeMergedRevisionsGet">
            <summary>设置 SvnBlameArgs.get_IncludeMergedRevisions() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameArgs.AllInstances.IncludeMergedRevisionsSetBoolean">
            <summary>设置 SvnBlameArgs.set_IncludeMergedRevisions(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameArgs.AllInstances.OnBlameSvnBlameEventArgs">
            <summary>设置 SvnBlameArgs.OnBlame(SvnBlameEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameArgs.AllInstances.RaiseBlameSvnBlameEventArgs">
            <summary>设置 SvnBlameArgs.RaiseBlame(SvnBlameEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameArgs.AllInstances.RangeGet">
            <summary>设置 SvnBlameArgs.get_Range() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameArgs.AllInstances.RangeSetSvnRevisionRange">
            <summary>设置 SvnBlameArgs.set_Range(SvnRevisionRange value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameArgs.AllInstances.RetrieveMergedRevisionsGet">
            <summary>设置 SvnBlameArgs.get_RetrieveMergedRevisions() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameArgs.AllInstances.RetrieveMergedRevisionsSetBoolean">
            <summary>设置 SvnBlameArgs.set_RetrieveMergedRevisions(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameArgs.AllInstances.StartGet">
            <summary>设置 SvnBlameArgs.get_Start() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameArgs.AllInstances.StartSetSvnRevision">
            <summary>设置 SvnBlameArgs.set_Start(SvnRevision value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnBlameEventArgs">
            <summary>SharpSvn.SvnBlameEventArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnBlameEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnBlameEventArgs.#ctor(SharpSvn.SvnBlameEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnBlameEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnBlameEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameEventArgs.AuthorGet">
            <summary>设置 SvnBlameEventArgs.get_Author() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameEventArgs.DetachBoolean">
            <summary>设置 SvnBlameEventArgs.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameEventArgs.EndRevisionGet">
            <summary>设置 SvnBlameEventArgs.get_EndRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameEventArgs.GetHashCode">
            <summary>设置 SvnBlameEventArgs.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameEventArgs.LineGet">
            <summary>设置 SvnBlameEventArgs.get_Line() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameEventArgs.LineNumberGet">
            <summary>设置 SvnBlameEventArgs.get_LineNumber() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameEventArgs.LocalChangeGet">
            <summary>设置 SvnBlameEventArgs.get_LocalChange() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameEventArgs.MergedAuthorGet">
            <summary>设置 SvnBlameEventArgs.get_MergedAuthor() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameEventArgs.MergedPathGet">
            <summary>设置 SvnBlameEventArgs.get_MergedPath() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameEventArgs.MergedRevisionGet">
            <summary>设置 SvnBlameEventArgs.get_MergedRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameEventArgs.MergedRevisionPropertiesGet">
            <summary>设置 SvnBlameEventArgs.get_MergedRevisionProperties() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameEventArgs.MergedTimeGet">
            <summary>设置 SvnBlameEventArgs.get_MergedTime() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameEventArgs.RevisionGet">
            <summary>设置 SvnBlameEventArgs.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameEventArgs.RevisionPropertiesGet">
            <summary>设置 SvnBlameEventArgs.get_RevisionProperties() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameEventArgs.StartRevisionGet">
            <summary>设置 SvnBlameEventArgs.get_StartRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameEventArgs.TimeGet">
            <summary>设置 SvnBlameEventArgs.get_Time() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnBlameEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameEventArgs.AllInstances.AuthorGet">
            <summary>设置 SvnBlameEventArgs.get_Author() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameEventArgs.AllInstances.DetachBoolean">
            <summary>设置 SvnBlameEventArgs.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameEventArgs.AllInstances.EndRevisionGet">
            <summary>设置 SvnBlameEventArgs.get_EndRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameEventArgs.AllInstances.GetHashCode01">
            <summary>设置 SvnBlameEventArgs.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameEventArgs.AllInstances.LineGet">
            <summary>设置 SvnBlameEventArgs.get_Line() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameEventArgs.AllInstances.LineNumberGet">
            <summary>设置 SvnBlameEventArgs.get_LineNumber() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameEventArgs.AllInstances.LocalChangeGet">
            <summary>设置 SvnBlameEventArgs.get_LocalChange() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameEventArgs.AllInstances.MergedAuthorGet">
            <summary>设置 SvnBlameEventArgs.get_MergedAuthor() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameEventArgs.AllInstances.MergedPathGet">
            <summary>设置 SvnBlameEventArgs.get_MergedPath() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameEventArgs.AllInstances.MergedRevisionGet">
            <summary>设置 SvnBlameEventArgs.get_MergedRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameEventArgs.AllInstances.MergedRevisionPropertiesGet">
            <summary>设置 SvnBlameEventArgs.get_MergedRevisionProperties() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameEventArgs.AllInstances.MergedTimeGet">
            <summary>设置 SvnBlameEventArgs.get_MergedTime() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameEventArgs.AllInstances.RevisionGet">
            <summary>设置 SvnBlameEventArgs.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameEventArgs.AllInstances.RevisionPropertiesGet">
            <summary>设置 SvnBlameEventArgs.get_RevisionProperties() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameEventArgs.AllInstances.StartRevisionGet">
            <summary>设置 SvnBlameEventArgs.get_StartRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBlameEventArgs.AllInstances.TimeGet">
            <summary>设置 SvnBlameEventArgs.get_Time() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnBreakIterationException">
            <summary>SharpSvn.SvnBreakIterationException 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnBreakIterationException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnBreakIterationException.#ctor(SharpSvn.SvnBreakIterationException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnBreakIterationException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnBreakIterationException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnBreakIterationException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBreakIterationException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBreakIterationException.Constructor">
            <summary>设置 SvnBreakIterationException.SvnBreakIterationException() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBreakIterationException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 SvnBreakIterationException.SvnBreakIterationException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBreakIterationException.ConstructorString">
            <summary>设置 SvnBreakIterationException.SvnBreakIterationException(String message) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnBreakIterationException.ConstructorStringException">
            <summary>设置 SvnBreakIterationException.SvnBreakIterationException(String message, Exception inner) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnBreakIterationException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnCancelEventArgs">
            <summary>SharpSvn.SvnCancelEventArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnCancelEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnCancelEventArgs.#ctor(SharpSvn.SvnCancelEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnCancelEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnCancelEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCancelEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCancelEventArgs.CancelGet">
            <summary>设置 SvnCancelEventArgs.get_Cancel() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCancelEventArgs.CancelSetBoolean">
            <summary>设置 SvnCancelEventArgs.set_Cancel(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCancelEventArgs.Constructor">
            <summary>设置 SvnCancelEventArgs.SvnCancelEventArgs() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnCancelEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCancelEventArgs.AllInstances.CancelGet">
            <summary>设置 SvnCancelEventArgs.get_Cancel() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCancelEventArgs.AllInstances.CancelSetBoolean">
            <summary>设置 SvnCancelEventArgs.set_Cancel(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnChangeInfoArgs">
            <summary>SharpSvn.SvnChangeInfoArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnChangeInfoArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnChangeInfoArgs.#ctor(SharpSvn.SvnChangeInfoArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnChangeInfoArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnChangeInfoArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangeInfoArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangeInfoArgs.ChangeInfoAddEventHandlerOfSvnChangeInfoEventArgs">
            <summary>设置 SvnChangeInfoArgs.add_ChangeInfo(EventHandler`1&lt;SvnChangeInfoEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangeInfoArgs.ChangeInfoRaiseObjectSvnChangeInfoEventArgs">
            <summary>设置 SvnChangeInfoArgs.raise_ChangeInfo(Object sender, SvnChangeInfoEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangeInfoArgs.ChangeInfoRemoveEventHandlerOfSvnChangeInfoEventArgs">
            <summary>设置 SvnChangeInfoArgs.remove_ChangeInfo(EventHandler`1&lt;SvnChangeInfoEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangeInfoArgs.CommandTypeGet">
            <summary>设置 SvnChangeInfoArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangeInfoArgs.Constructor">
            <summary>设置 SvnChangeInfoArgs.SvnChangeInfoArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangeInfoArgs.OnChangeInfoSvnChangeInfoEventArgs">
            <summary>设置 SvnChangeInfoArgs.OnChangeInfo(SvnChangeInfoEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangeInfoArgs.RetrieveChangedPathsGet">
            <summary>设置 SvnChangeInfoArgs.get_RetrieveChangedPaths() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangeInfoArgs.RetrieveChangedPathsSetBoolean">
            <summary>设置 SvnChangeInfoArgs.set_RetrieveChangedPaths(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnChangeInfoArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangeInfoArgs.AllInstances.ChangeInfoAddEventHandlerOfSvnChangeInfoEventArgs">
            <summary>设置 SvnChangeInfoArgs.add_ChangeInfo(EventHandler`1&lt;SvnChangeInfoEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangeInfoArgs.AllInstances.ChangeInfoRaiseObjectSvnChangeInfoEventArgs">
            <summary>设置 SvnChangeInfoArgs.raise_ChangeInfo(Object sender, SvnChangeInfoEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangeInfoArgs.AllInstances.ChangeInfoRemoveEventHandlerOfSvnChangeInfoEventArgs">
            <summary>设置 SvnChangeInfoArgs.remove_ChangeInfo(EventHandler`1&lt;SvnChangeInfoEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangeInfoArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnChangeInfoArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangeInfoArgs.AllInstances.OnChangeInfoSvnChangeInfoEventArgs">
            <summary>设置 SvnChangeInfoArgs.OnChangeInfo(SvnChangeInfoEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangeInfoArgs.AllInstances.RetrieveChangedPathsGet">
            <summary>设置 SvnChangeInfoArgs.get_RetrieveChangedPaths() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangeInfoArgs.AllInstances.RetrieveChangedPathsSetBoolean">
            <summary>设置 SvnChangeInfoArgs.set_RetrieveChangedPaths(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnChangeInfoEventArgs">
            <summary>SharpSvn.SvnChangeInfoEventArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnChangeInfoEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnChangeInfoEventArgs.#ctor(SharpSvn.SvnChangeInfoEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnChangeInfoEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnChangeInfoEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangeInfoEventArgs.BaseRevisionGet">
            <summary>设置 SvnChangeInfoEventArgs.get_BaseRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangeInfoEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnChangeInfoEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangeInfoEventArgs.AllInstances.BaseRevisionGet">
            <summary>设置 SvnChangeInfoEventArgs.get_BaseRevision() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnChangeItem">
            <summary>SharpSvn.SvnChangeItem 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnChangeItem.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnChangeItem.#ctor(SharpSvn.SvnChangeItem)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnChangeItem.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnChangeItem.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangeItem.ActionGet">
            <summary>设置 SvnChangeItem.get_Action() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangeItem.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangeItem.ContentModifiedGet">
            <summary>设置 SvnChangeItem.get_ContentModified() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangeItem.CopyFromPathGet">
            <summary>设置 SvnChangeItem.get_CopyFromPath() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangeItem.CopyFromRevisionGet">
            <summary>设置 SvnChangeItem.get_CopyFromRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangeItem.Detach">
            <summary>设置 SvnChangeItem.Detach() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangeItem.DetachBoolean">
            <summary>设置 SvnChangeItem.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangeItem.GetHashCode">
            <summary>设置 SvnChangeItem.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangeItem.NodeKindGet">
            <summary>设置 SvnChangeItem.get_NodeKind() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangeItem.PathGet">
            <summary>设置 SvnChangeItem.get_Path() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangeItem.PropertiesModifiedGet">
            <summary>设置 SvnChangeItem.get_PropertiesModified() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangeItem.RepositoryPathGet">
            <summary>设置 SvnChangeItem.get_RepositoryPath() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnChangeItem.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangeItem.AllInstances.ActionGet">
            <summary>设置 SvnChangeItem.get_Action() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangeItem.AllInstances.ContentModifiedGet">
            <summary>设置 SvnChangeItem.get_ContentModified() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangeItem.AllInstances.CopyFromPathGet">
            <summary>设置 SvnChangeItem.get_CopyFromPath() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangeItem.AllInstances.CopyFromRevisionGet">
            <summary>设置 SvnChangeItem.get_CopyFromRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangeItem.AllInstances.Detach">
            <summary>设置 SvnChangeItem.Detach() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangeItem.AllInstances.DetachBoolean">
            <summary>设置 SvnChangeItem.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangeItem.AllInstances.GetHashCode01">
            <summary>设置 SvnChangeItem.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangeItem.AllInstances.NodeKindGet">
            <summary>设置 SvnChangeItem.get_NodeKind() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangeItem.AllInstances.PathGet">
            <summary>设置 SvnChangeItem.get_Path() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangeItem.AllInstances.PropertiesModifiedGet">
            <summary>设置 SvnChangeItem.get_PropertiesModified() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangeItem.AllInstances.RepositoryPathGet">
            <summary>设置 SvnChangeItem.get_RepositoryPath() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnChangeListCollection">
            <summary>SharpSvn.SvnChangeListCollection 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnChangeListCollection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnChangeListCollection.#ctor(SharpSvn.SvnChangeListCollection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnChangeListCollection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnChangeListCollection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnChangeListCollection.Bind(System.Collections.ICollection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnChangeListCollection.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnChangeListCollection.Bind(System.Collections.IList)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnChangeListCollection.Bind(System.Collections.Generic.ICollection{System.String})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnChangeListCollection.Bind(System.Collections.Generic.IEnumerable{System.String})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnChangeListCollection.Bind(System.Collections.Generic.IList{System.String})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnChangeListCollection.Bind(System.Collections.Generic.IReadOnlyCollection{System.String})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnChangeListCollection.Bind(System.Collections.Generic.IReadOnlyList{System.String})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangeListCollection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangeListCollection.Constructor">
            <summary>设置 SvnChangeListCollection.SvnChangeListCollection() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnChangeListCollection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnChangedArgs">
            <summary>SharpSvn.SvnChangedArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnChangedArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnChangedArgs.#ctor(SharpSvn.SvnChangedArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnChangedArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnChangedArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangedArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangedArgs.ChangedAddEventHandlerOfSvnChangedEventArgs">
            <summary>设置 SvnChangedArgs.add_Changed(EventHandler`1&lt;SvnChangedEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangedArgs.ChangedRaiseObjectSvnChangedEventArgs">
            <summary>设置 SvnChangedArgs.raise_Changed(Object sender, SvnChangedEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangedArgs.ChangedRemoveEventHandlerOfSvnChangedEventArgs">
            <summary>设置 SvnChangedArgs.remove_Changed(EventHandler`1&lt;SvnChangedEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangedArgs.CommandTypeGet">
            <summary>设置 SvnChangedArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangedArgs.Constructor">
            <summary>设置 SvnChangedArgs.SvnChangedArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangedArgs.OnChangedSvnChangedEventArgs">
            <summary>设置 SvnChangedArgs.OnChanged(SvnChangedEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangedArgs.RevisionGet">
            <summary>设置 SvnChangedArgs.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangedArgs.RevisionSetSvnRevision">
            <summary>设置 SvnChangedArgs.set_Revision(SvnRevision value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangedArgs.TransactionGet">
            <summary>设置 SvnChangedArgs.get_Transaction() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangedArgs.TransactionSetString">
            <summary>设置 SvnChangedArgs.set_Transaction(String value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnChangedArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangedArgs.AllInstances.ChangedAddEventHandlerOfSvnChangedEventArgs">
            <summary>设置 SvnChangedArgs.add_Changed(EventHandler`1&lt;SvnChangedEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangedArgs.AllInstances.ChangedRaiseObjectSvnChangedEventArgs">
            <summary>设置 SvnChangedArgs.raise_Changed(Object sender, SvnChangedEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangedArgs.AllInstances.ChangedRemoveEventHandlerOfSvnChangedEventArgs">
            <summary>设置 SvnChangedArgs.remove_Changed(EventHandler`1&lt;SvnChangedEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangedArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnChangedArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangedArgs.AllInstances.OnChangedSvnChangedEventArgs">
            <summary>设置 SvnChangedArgs.OnChanged(SvnChangedEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangedArgs.AllInstances.RevisionGet">
            <summary>设置 SvnChangedArgs.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangedArgs.AllInstances.RevisionSetSvnRevision">
            <summary>设置 SvnChangedArgs.set_Revision(SvnRevision value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangedArgs.AllInstances.TransactionGet">
            <summary>设置 SvnChangedArgs.get_Transaction() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangedArgs.AllInstances.TransactionSetString">
            <summary>设置 SvnChangedArgs.set_Transaction(String value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnChangedEventArgs">
            <summary>SharpSvn.SvnChangedEventArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnChangedEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnChangedEventArgs.#ctor(SharpSvn.SvnChangedEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnChangedEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnChangedEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangedEventArgs.ActionGet">
            <summary>设置 SvnChangedEventArgs.get_Action() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangedEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangedEventArgs.ConstructorStringStringSvnChangeActionStringInt64SvnNodeKindBooleanBoolean">
            <summary>设置 SvnChangedEventArgs.SvnChangedEventArgs(String path, String name, SvnChangeAction action, String copyFromPath, Int64 copyFromRevision, SvnNodeKind kind, Boolean propertyModifications, Boolean textualModifications) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangedEventArgs.ContentModifiedGet">
            <summary>设置 SvnChangedEventArgs.get_ContentModified() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangedEventArgs.CopyFromPathGet">
            <summary>设置 SvnChangedEventArgs.get_CopyFromPath() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangedEventArgs.CopyFromRevisionGet">
            <summary>设置 SvnChangedEventArgs.get_CopyFromRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangedEventArgs.GetHashCode">
            <summary>设置 SvnChangedEventArgs.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangedEventArgs.NameGet">
            <summary>设置 SvnChangedEventArgs.get_Name() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangedEventArgs.NodeKindGet">
            <summary>设置 SvnChangedEventArgs.get_NodeKind() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangedEventArgs.PathGet">
            <summary>设置 SvnChangedEventArgs.get_Path() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangedEventArgs.PropertiesModifiedGet">
            <summary>设置 SvnChangedEventArgs.get_PropertiesModified() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangedEventArgs.ToString">
            <summary>设置 SvnChangedEventArgs.ToString() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnChangedEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangedEventArgs.AllInstances.ActionGet">
            <summary>设置 SvnChangedEventArgs.get_Action() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangedEventArgs.AllInstances.ContentModifiedGet">
            <summary>设置 SvnChangedEventArgs.get_ContentModified() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangedEventArgs.AllInstances.CopyFromPathGet">
            <summary>设置 SvnChangedEventArgs.get_CopyFromPath() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangedEventArgs.AllInstances.CopyFromRevisionGet">
            <summary>设置 SvnChangedEventArgs.get_CopyFromRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangedEventArgs.AllInstances.GetHashCode01">
            <summary>设置 SvnChangedEventArgs.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangedEventArgs.AllInstances.NameGet">
            <summary>设置 SvnChangedEventArgs.get_Name() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangedEventArgs.AllInstances.NodeKindGet">
            <summary>设置 SvnChangedEventArgs.get_NodeKind() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangedEventArgs.AllInstances.PathGet">
            <summary>设置 SvnChangedEventArgs.get_Path() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangedEventArgs.AllInstances.PropertiesModifiedGet">
            <summary>设置 SvnChangedEventArgs.get_PropertiesModified() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChangedEventArgs.AllInstances.ToString01">
            <summary>设置 SvnChangedEventArgs.ToString() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnCheckOutArgs">
            <summary>SharpSvn.SvnCheckOutArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnCheckOutArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnCheckOutArgs.#ctor(SharpSvn.SvnCheckOutArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnCheckOutArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnCheckOutArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCheckOutArgs.AllowObstructionsGet">
            <summary>设置 SvnCheckOutArgs.get_AllowObstructions() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCheckOutArgs.AllowObstructionsSetBoolean">
            <summary>设置 SvnCheckOutArgs.set_AllowObstructions(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCheckOutArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCheckOutArgs.CommandTypeGet">
            <summary>设置 SvnCheckOutArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCheckOutArgs.Constructor">
            <summary>设置 SvnCheckOutArgs.SvnCheckOutArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCheckOutArgs.DepthGet">
            <summary>设置 SvnCheckOutArgs.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCheckOutArgs.DepthSetSvnDepth">
            <summary>设置 SvnCheckOutArgs.set_Depth(SvnDepth value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCheckOutArgs.IgnoreExternalsGet">
            <summary>设置 SvnCheckOutArgs.get_IgnoreExternals() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCheckOutArgs.IgnoreExternalsSetBoolean">
            <summary>设置 SvnCheckOutArgs.set_IgnoreExternals(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCheckOutArgs.RevisionGet">
            <summary>设置 SvnCheckOutArgs.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCheckOutArgs.RevisionSetSvnRevision">
            <summary>设置 SvnCheckOutArgs.set_Revision(SvnRevision value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnCheckOutArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCheckOutArgs.AllInstances.AllowObstructionsGet">
            <summary>设置 SvnCheckOutArgs.get_AllowObstructions() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCheckOutArgs.AllInstances.AllowObstructionsSetBoolean">
            <summary>设置 SvnCheckOutArgs.set_AllowObstructions(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCheckOutArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnCheckOutArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCheckOutArgs.AllInstances.DepthGet">
            <summary>设置 SvnCheckOutArgs.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCheckOutArgs.AllInstances.DepthSetSvnDepth">
            <summary>设置 SvnCheckOutArgs.set_Depth(SvnDepth value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCheckOutArgs.AllInstances.IgnoreExternalsGet">
            <summary>设置 SvnCheckOutArgs.get_IgnoreExternals() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCheckOutArgs.AllInstances.IgnoreExternalsSetBoolean">
            <summary>设置 SvnCheckOutArgs.set_IgnoreExternals(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCheckOutArgs.AllInstances.RevisionGet">
            <summary>设置 SvnCheckOutArgs.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCheckOutArgs.AllInstances.RevisionSetSvnRevision">
            <summary>设置 SvnCheckOutArgs.set_Revision(SvnRevision value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnChecksumMismatchException">
            <summary>SharpSvn.SvnChecksumMismatchException 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnChecksumMismatchException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnChecksumMismatchException.#ctor(SharpSvn.SvnChecksumMismatchException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnChecksumMismatchException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnChecksumMismatchException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnChecksumMismatchException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChecksumMismatchException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChecksumMismatchException.Constructor">
            <summary>设置 SvnChecksumMismatchException.SvnChecksumMismatchException() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChecksumMismatchException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 SvnChecksumMismatchException.SvnChecksumMismatchException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChecksumMismatchException.ConstructorString">
            <summary>设置 SvnChecksumMismatchException.SvnChecksumMismatchException(String message) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnChecksumMismatchException.ConstructorStringException">
            <summary>设置 SvnChecksumMismatchException.SvnChecksumMismatchException(String message, Exception inner) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnChecksumMismatchException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnCleanUpArgs">
            <summary>SharpSvn.SvnCleanUpArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnCleanUpArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnCleanUpArgs.#ctor(SharpSvn.SvnCleanUpArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnCleanUpArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnCleanUpArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCleanUpArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCleanUpArgs.CommandTypeGet">
            <summary>设置 SvnCleanUpArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCleanUpArgs.Constructor">
            <summary>设置 SvnCleanUpArgs.SvnCleanUpArgs() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnCleanUpArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCleanUpArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnCleanUpArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnClient">
            <summary>SharpSvn.SvnClient 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClient.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClient.#ctor(SharpSvn.SvnClient)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClient.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClient.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClient.Bind(System.ComponentModel.IComponent)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClient.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClient.CopyOf1ICollectionOfM0String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.ICollection{``0},System.String,System.Boolean})">
            <summary>设置 SvnClient.Copy(ICollection`1&lt;!!0&gt; sources, String toPath) 的 填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClient.CopyOf1ICollectionOfM0StringSvnCopyArgs``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.ICollection{``0},System.String,SharpSvn.SvnCopyArgs,System.Boolean})">
            <summary>设置 SvnClient.Copy(ICollection`1&lt;!!0&gt; sources, String toPath, SvnCopyArgs args) 的 填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClient.MergeOf1StringSvnTargetICollectionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,SharpSvn.SvnTarget,System.Collections.Generic.ICollection{``0},System.Boolean})">
            <summary>设置 SvnClient.Merge(String targetPath, SvnTarget source, ICollection`1&lt;!!0&gt; mergeRange) 的 填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClient.MergeOf1StringSvnTargetICollectionOfM0SvnMergeArgs``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,SharpSvn.SvnTarget,System.Collections.Generic.ICollection{``0},SharpSvn.SvnMergeArgs,System.Boolean})">
            <summary>设置 SvnClient.Merge(String targetPath, SvnTarget source, ICollection`1&lt;!!0&gt; mergeRange, SvnMergeArgs args) 的 填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClient.RemoteCopyOf1ICollectionOfM0Uri``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.ICollection{``0},System.Uri,System.Boolean})">
            <summary>设置 SvnClient.RemoteCopy(ICollection`1&lt;!!0&gt; sources, Uri toUri) 的 填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClient.RemoteCopyOf1ICollectionOfM0UriSvnCommitResultOut``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{System.Collections.Generic.ICollection{``0},System.Uri,SharpSvn.SvnCommitResult,System.Boolean})">
            <summary>设置 SvnClient.RemoteCopy(ICollection`1&lt;!!0&gt; sources, Uri toUri, SvnCommitResult&amp; result) 的 填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClient.RemoteCopyOf1ICollectionOfM0UriSvnCopyArgs``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.ICollection{``0},System.Uri,SharpSvn.SvnCopyArgs,System.Boolean})">
            <summary>设置 SvnClient.RemoteCopy(ICollection`1&lt;!!0&gt; sources, Uri toUri, SvnCopyArgs args) 的 填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClient.RemoteCopyOf1ICollectionOfM0UriSvnCopyArgsSvnCommitResultOut``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{System.Collections.Generic.ICollection{``0},System.Uri,SharpSvn.SvnCopyArgs,SharpSvn.SvnCommitResult,System.Boolean})">
            <summary>设置 SvnClient.RemoteCopy(ICollection`1&lt;!!0&gt; sources, Uri toUri, SvnCopyArgs args, SvnCommitResult&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AddClientNameStringVersion">
            <summary>设置 SvnClient.AddClientName(String name, Version version) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AddString">
            <summary>设置 SvnClient.Add(String path) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AddStringSvnAddArgs">
            <summary>设置 SvnClient.Add(String path, SvnAddArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AddStringSvnDepth">
            <summary>设置 SvnClient.Add(String path, SvnDepth depth) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AddToChangeListICollectionOfStringString">
            <summary>设置 SvnClient.AddToChangeList(ICollection`1&lt;String&gt; targets, String changeList) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AddToChangeListICollectionOfStringStringSvnAddToChangeListArgs">
            <summary>设置 SvnClient.AddToChangeList(ICollection`1&lt;String&gt; targets, String changeList, SvnAddToChangeListArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AddToChangeListStringString">
            <summary>设置 SvnClient.AddToChangeList(String target, String changeList) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AddToChangeListStringStringSvnAddToChangeListArgs">
            <summary>设置 SvnClient.AddToChangeList(String target, String changeList, SvnAddToChangeListArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AdministrativeDirectoryNameGet">
            <summary>设置 SvnClient.get_AdministrativeDirectoryName() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AdministrativeDirectoryNameSetString">
            <summary>设置 SvnClient.set_AdministrativeDirectoryName(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.BlameSvnTargetEventHandlerOfSvnBlameEventArgs">
            <summary>设置 SvnClient.Blame(SvnTarget target, EventHandler`1&lt;SvnBlameEventArgs&gt; blameHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.BlameSvnTargetSvnBlameArgsEventHandlerOfSvnBlameEventArgs">
            <summary>设置 SvnClient.Blame(SvnTarget target, SvnBlameArgs args, EventHandler`1&lt;SvnBlameEventArgs&gt; blameHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.CancelAddEventHandlerOfSvnCancelEventArgs">
            <summary>设置 SvnClient.add_Cancel(EventHandler`1&lt;SvnCancelEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.CancelRaiseObjectSvnCancelEventArgs">
            <summary>设置 SvnClient.raise_Cancel(Object sender, SvnCancelEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.CancelRemoveEventHandlerOfSvnCancelEventArgs">
            <summary>设置 SvnClient.remove_Cancel(EventHandler`1&lt;SvnCancelEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.CheckOutSvnUriTargetString">
            <summary>设置 SvnClient.CheckOut(SvnUriTarget url, String path) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.CheckOutSvnUriTargetStringSvnCheckOutArgs">
            <summary>设置 SvnClient.CheckOut(SvnUriTarget url, String path, SvnCheckOutArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.CheckOutSvnUriTargetStringSvnCheckOutArgsSvnUpdateResultOut">
            <summary>设置 SvnClient.CheckOut(SvnUriTarget url, String path, SvnCheckOutArgs args, SvnUpdateResult&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.CheckOutSvnUriTargetStringSvnUpdateResultOut">
            <summary>设置 SvnClient.CheckOut(SvnUriTarget url, String path, SvnUpdateResult&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.CleanUpString">
            <summary>设置 SvnClient.CleanUp(String path) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.CleanUpStringSvnCleanUpArgs">
            <summary>设置 SvnClient.CleanUp(String path, SvnCleanUpArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.CommitICollectionOfString">
            <summary>设置 SvnClient.Commit(ICollection`1&lt;String&gt; paths) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.CommitICollectionOfStringSvnCommitArgs">
            <summary>设置 SvnClient.Commit(ICollection`1&lt;String&gt; paths, SvnCommitArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.CommitICollectionOfStringSvnCommitArgsSvnCommitResultOut">
            <summary>设置 SvnClient.Commit(ICollection`1&lt;String&gt; paths, SvnCommitArgs args, SvnCommitResult&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.CommitICollectionOfStringSvnCommitResultOut">
            <summary>设置 SvnClient.Commit(ICollection`1&lt;String&gt; paths, SvnCommitResult&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.CommitString">
            <summary>设置 SvnClient.Commit(String path) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.CommitStringSvnCommitArgs">
            <summary>设置 SvnClient.Commit(String path, SvnCommitArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.CommitStringSvnCommitArgsSvnCommitResultOut">
            <summary>设置 SvnClient.Commit(String path, SvnCommitArgs args, SvnCommitResult&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.CommitStringSvnCommitResultOut">
            <summary>设置 SvnClient.Commit(String path, SvnCommitResult&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.CommittedAddEventHandlerOfSvnCommittedEventArgs">
            <summary>设置 SvnClient.add_Committed(EventHandler`1&lt;SvnCommittedEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.CommittedRaiseObjectSvnCommittedEventArgs">
            <summary>设置 SvnClient.raise_Committed(Object sender, SvnCommittedEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.CommittedRemoveEventHandlerOfSvnCommittedEventArgs">
            <summary>设置 SvnClient.remove_Committed(EventHandler`1&lt;SvnCommittedEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.CommittingAddEventHandlerOfSvnCommittingEventArgs">
            <summary>设置 SvnClient.add_Committing(EventHandler`1&lt;SvnCommittingEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.CommittingRaiseObjectSvnCommittingEventArgs">
            <summary>设置 SvnClient.raise_Committing(Object sender, SvnCommittingEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.CommittingRemoveEventHandlerOfSvnCommittingEventArgs">
            <summary>设置 SvnClient.remove_Committing(EventHandler`1&lt;SvnCommittingEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.ConfigurationGet">
            <summary>设置 SvnClient.get_Configuration() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.ConflictAddEventHandlerOfSvnConflictEventArgs">
            <summary>设置 SvnClient.add_Conflict(EventHandler`1&lt;SvnConflictEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.ConflictRaiseObjectSvnConflictEventArgs">
            <summary>设置 SvnClient.raise_Conflict(Object sender, SvnConflictEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.ConflictRemoveEventHandlerOfSvnConflictEventArgs">
            <summary>设置 SvnClient.remove_Conflict(EventHandler`1&lt;SvnConflictEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.Constructor">
            <summary>设置 SvnClient.SvnClient() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.CopySvnTargetString">
            <summary>设置 SvnClient.Copy(SvnTarget source, String toPath) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.CopySvnTargetStringSvnCopyArgs">
            <summary>设置 SvnClient.Copy(SvnTarget source, String toPath, SvnCopyArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.CreateDirectoriesICollectionOfString">
            <summary>设置 SvnClient.CreateDirectories(ICollection`1&lt;String&gt; paths) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.CreateDirectoriesICollectionOfStringSvnCreateDirectoryArgs">
            <summary>设置 SvnClient.CreateDirectories(ICollection`1&lt;String&gt; paths, SvnCreateDirectoryArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.CreateDirectoryString">
            <summary>设置 SvnClient.CreateDirectory(String path) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.CreateDirectoryStringSvnCreateDirectoryArgs">
            <summary>设置 SvnClient.CreateDirectory(String path, SvnCreateDirectoryArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.CropWorkingCopyStringSvnDepth">
            <summary>设置 SvnClient.CropWorkingCopy(String path, SvnDepth toDepth) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.CropWorkingCopyStringSvnDepthSvnCropWorkingCopyArgs">
            <summary>设置 SvnClient.CropWorkingCopy(String path, SvnDepth toDepth, SvnCropWorkingCopyArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.DeleteICollectionOfString">
            <summary>设置 SvnClient.Delete(ICollection`1&lt;String&gt; paths) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.DeleteICollectionOfStringSvnDeleteArgs">
            <summary>设置 SvnClient.Delete(ICollection`1&lt;String&gt; paths, SvnDeleteArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.DeletePropertyStringString">
            <summary>设置 SvnClient.DeleteProperty(String target, String propertyName) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.DeletePropertyStringStringSvnSetPropertyArgs">
            <summary>设置 SvnClient.DeleteProperty(String target, String propertyName, SvnSetPropertyArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.DeletePropertyUriString">
            <summary>设置 SvnClient.DeleteProperty(Uri target, String propertyName) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.DeletePropertyUriStringSvnSetPropertyArgs">
            <summary>设置 SvnClient.DeleteProperty(Uri target, String propertyName, SvnSetPropertyArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.DeleteRevisionPropertySvnUriTargetString">
            <summary>设置 SvnClient.DeleteRevisionProperty(SvnUriTarget target, String propertyName) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.DeleteRevisionPropertySvnUriTargetStringSvnSetRevisionPropertyArgs">
            <summary>设置 SvnClient.DeleteRevisionProperty(SvnUriTarget target, String propertyName, SvnSetRevisionPropertyArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.DeleteRevisionPropertyUriSvnRevisionString">
            <summary>设置 SvnClient.DeleteRevisionProperty(Uri target, SvnRevision revision, String propertyName) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.DeleteRevisionPropertyUriSvnRevisionStringSvnSetRevisionPropertyArgs">
            <summary>设置 SvnClient.DeleteRevisionProperty(Uri target, SvnRevision revision, String propertyName, SvnSetRevisionPropertyArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.DeleteString">
            <summary>设置 SvnClient.Delete(String path) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.DeleteStringSvnDeleteArgs">
            <summary>设置 SvnClient.Delete(String path, SvnDeleteArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.DiffMergeStringSvnTargetSvnTarget">
            <summary>设置 SvnClient.DiffMerge(String targetPath, SvnTarget mergeFrom, SvnTarget mergeTo) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.DiffMergeStringSvnTargetSvnTargetSvnDiffMergeArgs">
            <summary>设置 SvnClient.DiffMerge(String targetPath, SvnTarget mergeFrom, SvnTarget mergeTo, SvnDiffMergeArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.DiffSummarySvnTargetSvnTargetEventHandlerOfSvnDiffSummaryEventArgs">
            <summary>设置 SvnClient.DiffSummary(SvnTarget from, SvnTarget to, EventHandler`1&lt;SvnDiffSummaryEventArgs&gt; summaryHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.DiffSummarySvnTargetSvnTargetSvnDiffSummaryArgsEventHandlerOfSvnDiffSummaryEventArgs">
            <summary>设置 SvnClient.DiffSummary(SvnTarget from, SvnTarget to, SvnDiffSummaryArgs args, EventHandler`1&lt;SvnDiffSummaryEventArgs&gt; summaryHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.DiffSvnTargetSvnRevisionRangeStream">
            <summary>设置 SvnClient.Diff(SvnTarget source, SvnRevisionRange range, Stream result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.DiffSvnTargetSvnRevisionRangeSvnDiffArgsStream">
            <summary>设置 SvnClient.Diff(SvnTarget source, SvnRevisionRange range, SvnDiffArgs args, Stream result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.DiffSvnTargetSvnTargetStream">
            <summary>设置 SvnClient.Diff(SvnTarget from, SvnTarget to, Stream result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.DiffSvnTargetSvnTargetSvnDiffArgsStream">
            <summary>设置 SvnClient.Diff(SvnTarget from, SvnTarget to, SvnDiffArgs args, Stream result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.DisposeBoolean">
            <summary>设置 SvnClient.Dispose(Boolean ) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.EnableSubversionLocalization">
            <summary>设置 SvnClient.EnableSubversionLocalization() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.ExportSvnTargetString">
            <summary>设置 SvnClient.Export(SvnTarget from, String toPath) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.ExportSvnTargetStringSvnExportArgs">
            <summary>设置 SvnClient.Export(SvnTarget from, String toPath, SvnExportArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.ExportSvnTargetStringSvnExportArgsSvnUpdateResultOut">
            <summary>设置 SvnClient.Export(SvnTarget from, String toPath, SvnExportArgs args, SvnUpdateResult&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.ExportSvnTargetStringSvnUpdateResultOut">
            <summary>设置 SvnClient.Export(SvnTarget from, String toPath, SvnUpdateResult&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.FileVersionsSvnTargetEventHandlerOfSvnFileVersionEventArgs">
            <summary>设置 SvnClient.FileVersions(SvnTarget target, EventHandler`1&lt;SvnFileVersionEventArgs&gt; versionHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.FileVersionsSvnTargetSvnFileVersionsArgsEventHandlerOfSvnFileVersionEventArgs">
            <summary>设置 SvnClient.FileVersions(SvnTarget target, SvnFileVersionsArgs args, EventHandler`1&lt;SvnFileVersionEventArgs&gt; versionHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.GetAppliedMergeInfoSvnTargetSvnAppliedMergeInfoOut">
            <summary>设置 SvnClient.GetAppliedMergeInfo(SvnTarget target, SvnAppliedMergeInfo&amp; mergeInfo) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.GetAppliedMergeInfoSvnTargetSvnGetAppliedMergeInfoArgsSvnAppliedMergeInfoOut">
            <summary>设置 SvnClient.GetAppliedMergeInfo(SvnTarget target, SvnGetAppliedMergeInfoArgs args, SvnAppliedMergeInfo&amp; mergeInfo) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.GetBlameSvnTargetCollectionOfSvnBlameEventArgsOut">
            <summary>设置 SvnClient.GetBlame(SvnTarget target, Collection`1&lt;SvnBlameEventArgs&gt;&amp; list) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.GetBlameSvnTargetSvnBlameArgsCollectionOfSvnBlameEventArgsOut">
            <summary>设置 SvnClient.GetBlame(SvnTarget target, SvnBlameArgs args, Collection`1&lt;SvnBlameEventArgs&gt;&amp; list) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.GetCapabilitiesSvnTargetIEnumerableOfSvnCapabilityCollectionOfSvnCapabilityOut">
            <summary>设置 SvnClient.GetCapabilities(SvnTarget target, IEnumerable`1&lt;SvnCapability&gt; retrieve, Collection`1&lt;SvnCapability&gt;&amp; capabilities) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.GetCapabilitiesSvnTargetSvnGetCapabilitiesArgsCollectionOfSvnCapabilityOut">
            <summary>设置 SvnClient.GetCapabilities(SvnTarget target, SvnGetCapabilitiesArgs args, Collection`1&lt;SvnCapability&gt;&amp; capabilities) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.GetChangeListStringCollectionOfSvnListChangeListEventArgsOut">
            <summary>设置 SvnClient.GetChangeList(String rootPath, Collection`1&lt;SvnListChangeListEventArgs&gt;&amp; list) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.GetChangeListStringSvnListChangeListArgsCollectionOfSvnListChangeListEventArgsOut">
            <summary>设置 SvnClient.GetChangeList(String rootPath, SvnListChangeListArgs args, Collection`1&lt;SvnListChangeListEventArgs&gt;&amp; list) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.GetDiffSummarySvnTargetSvnTargetCollectionOfSvnDiffSummaryEventArgsOut">
            <summary>设置 SvnClient.GetDiffSummary(SvnTarget from, SvnTarget to, Collection`1&lt;SvnDiffSummaryEventArgs&gt;&amp; list) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.GetDiffSummarySvnTargetSvnTargetSvnDiffSummaryArgsCollectionOfSvnDiffSummaryEventArgsOut">
            <summary>设置 SvnClient.GetDiffSummary(SvnTarget from, SvnTarget to, SvnDiffSummaryArgs args, Collection`1&lt;SvnDiffSummaryEventArgs&gt;&amp; list) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.GetFileVersionsSvnTargetCollectionOfSvnFileVersionEventArgsOut">
            <summary>设置 SvnClient.GetFileVersions(SvnTarget target, Collection`1&lt;SvnFileVersionEventArgs&gt;&amp; list) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.GetFileVersionsSvnTargetSvnFileVersionsArgsCollectionOfSvnFileVersionEventArgsOut">
            <summary>设置 SvnClient.GetFileVersions(SvnTarget target, SvnFileVersionsArgs args, Collection`1&lt;SvnFileVersionEventArgs&gt;&amp; list) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.GetInfoSvnTargetSvnInfoArgsCollectionOfSvnInfoEventArgsOut">
            <summary>设置 SvnClient.GetInfo(SvnTarget target, SvnInfoArgs args, Collection`1&lt;SvnInfoEventArgs&gt;&amp; info) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.GetInfoSvnTargetSvnInfoEventArgsOut">
            <summary>设置 SvnClient.GetInfo(SvnTarget target, SvnInfoEventArgs&amp; info) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.GetInheritedPropertyListStringCollectionOfSvnInheritedPropertyListEventArgsOut">
            <summary>设置 SvnClient.GetInheritedPropertyList(String path, Collection`1&lt;SvnInheritedPropertyListEventArgs&gt;&amp; listHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.GetInheritedPropertyListStringSvnInheritedPropertyListArgsCollectionOfSvnInheritedPropertyListEventArgsOut">
            <summary>设置 SvnClient.GetInheritedPropertyList(String path, SvnInheritedPropertyListArgs args, Collection`1&lt;SvnInheritedPropertyListEventArgs&gt;&amp; listHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.GetListSvnTargetCollectionOfSvnListEventArgsOut">
            <summary>设置 SvnClient.GetList(SvnTarget target, Collection`1&lt;SvnListEventArgs&gt;&amp; list) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.GetListSvnTargetSvnListArgsCollectionOfSvnListEventArgsOut">
            <summary>设置 SvnClient.GetList(SvnTarget target, SvnListArgs args, Collection`1&lt;SvnListEventArgs&gt;&amp; list) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.GetLogICollectionOfStringSvnLogArgsCollectionOfSvnLogEventArgsOut">
            <summary>设置 SvnClient.GetLog(ICollection`1&lt;String&gt; targetPaths, SvnLogArgs args, Collection`1&lt;SvnLogEventArgs&gt;&amp; logItems) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.GetLogICollectionOfUriSvnLogArgsCollectionOfSvnLogEventArgsOut">
            <summary>设置 SvnClient.GetLog(ICollection`1&lt;Uri&gt; targets, SvnLogArgs args, Collection`1&lt;SvnLogEventArgs&gt;&amp; logItems) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.GetLogStringCollectionOfSvnLogEventArgsOut">
            <summary>设置 SvnClient.GetLog(String targetPath, Collection`1&lt;SvnLogEventArgs&gt;&amp; logItems) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.GetLogStringSvnLogArgsCollectionOfSvnLogEventArgsOut">
            <summary>设置 SvnClient.GetLog(String targetPath, SvnLogArgs args, Collection`1&lt;SvnLogEventArgs&gt;&amp; logItems) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.GetLogUriCollectionOfSvnLogEventArgsOut">
            <summary>设置 SvnClient.GetLog(Uri target, Collection`1&lt;SvnLogEventArgs&gt;&amp; logItems) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.GetLogUriSvnLogArgsCollectionOfSvnLogEventArgsOut">
            <summary>设置 SvnClient.GetLog(Uri target, SvnLogArgs args, Collection`1&lt;SvnLogEventArgs&gt;&amp; logItems) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.GetMergesEligibleSvnTargetSvnTargetCollectionOfSvnMergesEligibleEventArgsOut">
            <summary>设置 SvnClient.GetMergesEligible(SvnTarget target, SvnTarget source, Collection`1&lt;SvnMergesEligibleEventArgs&gt;&amp; list) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.GetMergesEligibleSvnTargetSvnTargetSvnMergesEligibleArgsCollectionOfSvnMergesEligibleEventArgsOut">
            <summary>设置 SvnClient.GetMergesEligible(SvnTarget target, SvnTarget source, SvnMergesEligibleArgs args, Collection`1&lt;SvnMergesEligibleEventArgs&gt;&amp; list) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.GetMergesMergedSvnTargetSvnTargetCollectionOfSvnMergesMergedEventArgsOut">
            <summary>设置 SvnClient.GetMergesMerged(SvnTarget target, SvnTarget source, Collection`1&lt;SvnMergesMergedEventArgs&gt;&amp; list) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.GetMergesMergedSvnTargetSvnTargetSvnMergesMergedArgsCollectionOfSvnMergesMergedEventArgsOut">
            <summary>设置 SvnClient.GetMergesMerged(SvnTarget target, SvnTarget source, SvnMergesMergedArgs args, Collection`1&lt;SvnMergesMergedEventArgs&gt;&amp; list) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.GetPropertyListSvnTargetCollectionOfSvnPropertyListEventArgsOut">
            <summary>设置 SvnClient.GetPropertyList(SvnTarget target, Collection`1&lt;SvnPropertyListEventArgs&gt;&amp; list) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.GetPropertyListSvnTargetSvnPropertyListArgsCollectionOfSvnPropertyListEventArgsOut">
            <summary>设置 SvnClient.GetPropertyList(SvnTarget target, SvnPropertyListArgs args, Collection`1&lt;SvnPropertyListEventArgs&gt;&amp; list) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.GetPropertySvnTargetStringStringOut">
            <summary>设置 SvnClient.GetProperty(SvnTarget target, String propertyName, String&amp; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.GetPropertySvnTargetStringSvnGetPropertyArgsSvnTargetPropertyCollectionOut">
            <summary>设置 SvnClient.GetProperty(SvnTarget target, String propertyName, SvnGetPropertyArgs args, SvnTargetPropertyCollection&amp; properties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.GetPropertySvnTargetStringSvnPropertyValueOut">
            <summary>设置 SvnClient.GetProperty(SvnTarget target, String propertyName, SvnPropertyValue&amp; bytes) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.GetRepositoryIdFromUriUriGuidOut">
            <summary>设置 SvnClient.GetRepositoryIdFromUri(Uri uri, Guid&amp; id) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.GetRepositoryRootString">
            <summary>设置 SvnClient.GetRepositoryRoot(String target) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.GetRepositoryRootUri">
            <summary>设置 SvnClient.GetRepositoryRoot(Uri uri) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.GetRevisionPropertyListSvnUriTargetSvnPropertyCollectionOut">
            <summary>设置 SvnClient.GetRevisionPropertyList(SvnUriTarget target, SvnPropertyCollection&amp; list) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.GetRevisionPropertyListSvnUriTargetSvnRevisionPropertyListArgsSvnPropertyCollectionOut">
            <summary>设置 SvnClient.GetRevisionPropertyList(SvnUriTarget target, SvnRevisionPropertyListArgs args, SvnPropertyCollection&amp; list) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.GetRevisionPropertyListUriSvnRevisionSvnPropertyCollectionOut">
            <summary>设置 SvnClient.GetRevisionPropertyList(Uri target, SvnRevision revision, SvnPropertyCollection&amp; list) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.GetRevisionPropertyListUriSvnRevisionSvnRevisionPropertyListArgsSvnPropertyCollectionOut">
            <summary>设置 SvnClient.GetRevisionPropertyList(Uri target, SvnRevision revision, SvnRevisionPropertyListArgs args, SvnPropertyCollection&amp; list) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.GetRevisionPropertySvnUriTargetStringStringOut">
            <summary>设置 SvnClient.GetRevisionProperty(SvnUriTarget target, String propertyName, String&amp; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.GetRevisionPropertySvnUriTargetStringSvnGetRevisionPropertyArgsStringOut">
            <summary>设置 SvnClient.GetRevisionProperty(SvnUriTarget target, String propertyName, SvnGetRevisionPropertyArgs args, String&amp; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.GetRevisionPropertySvnUriTargetStringSvnGetRevisionPropertyArgsSvnPropertyValueOut">
            <summary>设置 SvnClient.GetRevisionProperty(SvnUriTarget target, String propertyName, SvnGetRevisionPropertyArgs args, SvnPropertyValue&amp; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.GetRevisionPropertySvnUriTargetStringSvnPropertyValueOut">
            <summary>设置 SvnClient.GetRevisionProperty(SvnUriTarget target, String propertyName, SvnPropertyValue&amp; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.GetRevisionPropertyUriSvnRevisionStringStringOut">
            <summary>设置 SvnClient.GetRevisionProperty(Uri target, SvnRevision revision, String propertyName, String&amp; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.GetRevisionPropertyUriSvnRevisionStringSvnGetRevisionPropertyArgsStringOut">
            <summary>设置 SvnClient.GetRevisionProperty(Uri target, SvnRevision revision, String propertyName, SvnGetRevisionPropertyArgs args, String&amp; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.GetRevisionPropertyUriSvnRevisionStringSvnGetRevisionPropertyArgsSvnPropertyValueOut">
            <summary>设置 SvnClient.GetRevisionProperty(Uri target, SvnRevision revision, String propertyName, SvnGetRevisionPropertyArgs args, SvnPropertyValue&amp; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.GetRevisionPropertyUriSvnRevisionStringSvnPropertyValueOut">
            <summary>设置 SvnClient.GetRevisionProperty(Uri target, SvnRevision revision, String propertyName, SvnPropertyValue&amp; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.GetStatusStringCollectionOfSvnStatusEventArgsOut">
            <summary>设置 SvnClient.GetStatus(String path, Collection`1&lt;SvnStatusEventArgs&gt;&amp; statuses) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.GetStatusStringSvnStatusArgsCollectionOfSvnStatusEventArgsOut">
            <summary>设置 SvnClient.GetStatus(String path, SvnStatusArgs args, Collection`1&lt;SvnStatusEventArgs&gt;&amp; statuses) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.GetSuggestedMergeSourcesSvnTargetSvnGetSuggestedMergeSourcesArgsSvnMergeSourcesCollectionOut">
            <summary>设置 SvnClient.GetSuggestedMergeSources(SvnTarget target, SvnGetSuggestedMergeSourcesArgs args, SvnMergeSourcesCollection&amp; mergeSources) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.GetSuggestedMergeSourcesSvnTargetSvnMergeSourcesCollectionOut">
            <summary>设置 SvnClient.GetSuggestedMergeSources(SvnTarget target, SvnMergeSourcesCollection&amp; mergeSources) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.GetUriFromWorkingCopyString">
            <summary>设置 SvnClient.GetUriFromWorkingCopy(String path) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.GetWorkingCopyRootString">
            <summary>设置 SvnClient.GetWorkingCopyRoot(String path) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.HandleClientCancelSvnCancelEventArgs">
            <summary>设置 SvnClient.HandleClientCancel(SvnCancelEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.HandleClientCommittedSvnCommittedEventArgs">
            <summary>设置 SvnClient.HandleClientCommitted(SvnCommittedEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.HandleClientCommittingSvnCommittingEventArgs">
            <summary>设置 SvnClient.HandleClientCommitting(SvnCommittingEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.HandleClientConflictSvnConflictEventArgs">
            <summary>设置 SvnClient.HandleClientConflict(SvnConflictEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.HandleClientErrorSvnErrorEventArgs">
            <summary>设置 SvnClient.HandleClientError(SvnErrorEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.HandleClientNotifySvnNotifyEventArgs">
            <summary>设置 SvnClient.HandleClientNotify(SvnNotifyEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.HandleClientProgressSvnProgressEventArgs">
            <summary>设置 SvnClient.HandleClientProgress(SvnProgressEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.HandleProcessingSvnProcessingEventArgs">
            <summary>设置 SvnClient.HandleProcessing(SvnProcessingEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.ImportStringUri">
            <summary>设置 SvnClient.Import(String path, Uri target) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.ImportStringUriSvnCommitResultOut">
            <summary>设置 SvnClient.Import(String path, Uri target, SvnCommitResult&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.ImportStringUriSvnImportArgs">
            <summary>设置 SvnClient.Import(String path, Uri target, SvnImportArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.ImportStringUriSvnImportArgsSvnCommitResultOut">
            <summary>设置 SvnClient.Import(String path, Uri target, SvnImportArgs args, SvnCommitResult&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.InfoSvnTargetEventHandlerOfSvnInfoEventArgs">
            <summary>设置 SvnClient.Info(SvnTarget target, EventHandler`1&lt;SvnInfoEventArgs&gt; infoHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.InfoSvnTargetSvnInfoArgsEventHandlerOfSvnInfoEventArgs">
            <summary>设置 SvnClient.Info(SvnTarget target, SvnInfoArgs args, EventHandler`1&lt;SvnInfoEventArgs&gt; infoHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.InheritedPropertyListStringEventHandlerOfSvnInheritedPropertyListEventArgs">
            <summary>设置 SvnClient.InheritedPropertyList(String path, EventHandler`1&lt;SvnInheritedPropertyListEventArgs&gt; handler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.InheritedPropertyListStringSvnInheritedPropertyListArgsEventHandlerOfSvnInheritedPropertyListEventArgs">
            <summary>设置 SvnClient.InheritedPropertyList(String path, SvnInheritedPropertyListArgs args, EventHandler`1&lt;SvnInheritedPropertyListEventArgs&gt; handler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.Initialize">
            <summary>设置 SvnClient.Initialize() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.InternalLogICollectionOfStringUriSvnRevisionSvnLogArgsEventHandlerOfSvnLogEventArgs">
            <summary>设置 SvnClient.InternalLog(ICollection`1&lt;String&gt; targets, Uri logRoot, SvnRevision altPegRev, SvnLogArgs args, EventHandler`1&lt;SvnLogEventArgs&gt; logHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.ListChangeListStringEventHandlerOfSvnListChangeListEventArgs">
            <summary>设置 SvnClient.ListChangeList(String rootPath, EventHandler`1&lt;SvnListChangeListEventArgs&gt; changeListHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.ListChangeListStringSvnListChangeListArgsEventHandlerOfSvnListChangeListEventArgs">
            <summary>设置 SvnClient.ListChangeList(String rootPath, SvnListChangeListArgs args, EventHandler`1&lt;SvnListChangeListEventArgs&gt; changeListHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.ListMergesEligibleSvnTargetSvnTargetEventHandlerOfSvnMergesEligibleEventArgs">
            <summary>设置 SvnClient.ListMergesEligible(SvnTarget target, SvnTarget source, EventHandler`1&lt;SvnMergesEligibleEventArgs&gt; handler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.ListMergesEligibleSvnTargetSvnTargetSvnMergesEligibleArgsEventHandlerOfSvnMergesEligibleEventArgs">
            <summary>设置 SvnClient.ListMergesEligible(SvnTarget target, SvnTarget source, SvnMergesEligibleArgs args, EventHandler`1&lt;SvnMergesEligibleEventArgs&gt; handler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.ListMergesMergedSvnTargetSvnTargetEventHandlerOfSvnMergesMergedEventArgs">
            <summary>设置 SvnClient.ListMergesMerged(SvnTarget target, SvnTarget source, EventHandler`1&lt;SvnMergesMergedEventArgs&gt; handler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.ListMergesMergedSvnTargetSvnTargetSvnMergesMergedArgsEventHandlerOfSvnMergesMergedEventArgs">
            <summary>设置 SvnClient.ListMergesMerged(SvnTarget target, SvnTarget source, SvnMergesMergedArgs args, EventHandler`1&lt;SvnMergesMergedEventArgs&gt; handler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.ListSvnTargetEventHandlerOfSvnListEventArgs">
            <summary>设置 SvnClient.List(SvnTarget target, EventHandler`1&lt;SvnListEventArgs&gt; listHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.ListSvnTargetSvnListArgsEventHandlerOfSvnListEventArgs">
            <summary>设置 SvnClient.List(SvnTarget target, SvnListArgs args, EventHandler`1&lt;SvnListEventArgs&gt; listHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.LockICollectionOfStringString">
            <summary>设置 SvnClient.Lock(ICollection`1&lt;String&gt; targets, String comment) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.LockICollectionOfStringSvnLockArgs">
            <summary>设置 SvnClient.Lock(ICollection`1&lt;String&gt; targets, SvnLockArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.LockStringString">
            <summary>设置 SvnClient.Lock(String target, String comment) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.LockStringSvnLockArgs">
            <summary>设置 SvnClient.Lock(String target, SvnLockArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.LogICollectionOfStringSvnLogArgsEventHandlerOfSvnLogEventArgs">
            <summary>设置 SvnClient.Log(ICollection`1&lt;String&gt; targetPaths, SvnLogArgs args, EventHandler`1&lt;SvnLogEventArgs&gt; logHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.LogICollectionOfUriSvnLogArgsEventHandlerOfSvnLogEventArgs">
            <summary>设置 SvnClient.Log(ICollection`1&lt;Uri&gt; targets, SvnLogArgs args, EventHandler`1&lt;SvnLogEventArgs&gt; logHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.LogStringEventHandlerOfSvnLogEventArgs">
            <summary>设置 SvnClient.Log(String targetPath, EventHandler`1&lt;SvnLogEventArgs&gt; logHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.LogStringSvnLogArgsEventHandlerOfSvnLogEventArgs">
            <summary>设置 SvnClient.Log(String targetPath, SvnLogArgs args, EventHandler`1&lt;SvnLogEventArgs&gt; logHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.LogUriEventHandlerOfSvnLogEventArgs">
            <summary>设置 SvnClient.Log(Uri target, EventHandler`1&lt;SvnLogEventArgs&gt; logHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.LogUriSvnLogArgsEventHandlerOfSvnLogEventArgs">
            <summary>设置 SvnClient.Log(Uri target, SvnLogArgs args, EventHandler`1&lt;SvnLogEventArgs&gt; logHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.MergeStringSvnTargetSvnRevisionRange">
            <summary>设置 SvnClient.Merge(String targetPath, SvnTarget source, SvnRevisionRange mergeRange) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.MergeStringSvnTargetSvnRevisionRangeSvnMergeArgs">
            <summary>设置 SvnClient.Merge(String targetPath, SvnTarget source, SvnRevisionRange mergeRange, SvnMergeArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.MoveICollectionOfStringString">
            <summary>设置 SvnClient.Move(ICollection`1&lt;String&gt; sourcePaths, String toPath) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.MoveICollectionOfStringStringSvnMoveArgs">
            <summary>设置 SvnClient.Move(ICollection`1&lt;String&gt; sourcePaths, String toPath, SvnMoveArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.MoveStringString">
            <summary>设置 SvnClient.Move(String sourcePath, String toPath) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.MoveStringStringSvnMoveArgs">
            <summary>设置 SvnClient.Move(String sourcePath, String toPath, SvnMoveArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.NotifyAddEventHandlerOfSvnNotifyEventArgs">
            <summary>设置 SvnClient.add_Notify(EventHandler`1&lt;SvnNotifyEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.NotifyRaiseObjectSvnNotifyEventArgs">
            <summary>设置 SvnClient.raise_Notify(Object sender, SvnNotifyEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.NotifyRemoveEventHandlerOfSvnNotifyEventArgs">
            <summary>设置 SvnClient.remove_Notify(EventHandler`1&lt;SvnNotifyEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClient.OnCancel(SvnCancelEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.OnCommittedSvnCommittedEventArgs">
            <summary>设置 SvnClient.OnCommitted(SvnCommittedEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.OnCommittingSvnCommittingEventArgs">
            <summary>设置 SvnClient.OnCommitting(SvnCommittingEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.OnConflictSvnConflictEventArgs">
            <summary>设置 SvnClient.OnConflict(SvnConflictEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClient.OnNotify(SvnNotifyEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.OnProcessingSvnProcessingEventArgs">
            <summary>设置 SvnClient.OnProcessing(SvnProcessingEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClient.OnProgress(SvnProgressEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClient.OnSvnError(SvnErrorEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.PatchStringString">
            <summary>设置 SvnClient.Patch(String patchFile, String targetDir) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.PatchStringStringSvnPatchArgs">
            <summary>设置 SvnClient.Patch(String patchFile, String targetDir, SvnPatchArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.ProcessingAddEventHandlerOfSvnProcessingEventArgs">
            <summary>设置 SvnClient.add_Processing(EventHandler`1&lt;SvnProcessingEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.ProcessingRaiseObjectSvnProcessingEventArgs">
            <summary>设置 SvnClient.raise_Processing(Object sender, SvnProcessingEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.ProcessingRemoveEventHandlerOfSvnProcessingEventArgs">
            <summary>设置 SvnClient.remove_Processing(EventHandler`1&lt;SvnProcessingEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.ProgressAddEventHandlerOfSvnProgressEventArgs">
            <summary>设置 SvnClient.add_Progress(EventHandler`1&lt;SvnProgressEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.ProgressRaiseObjectSvnProgressEventArgs">
            <summary>设置 SvnClient.raise_Progress(Object sender, SvnProgressEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.ProgressRemoveEventHandlerOfSvnProgressEventArgs">
            <summary>设置 SvnClient.remove_Progress(EventHandler`1&lt;SvnProgressEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.PropertyListSvnTargetEventHandlerOfSvnPropertyListEventArgs">
            <summary>设置 SvnClient.PropertyList(SvnTarget target, EventHandler`1&lt;SvnPropertyListEventArgs&gt; listHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.PropertyListSvnTargetSvnPropertyListArgsEventHandlerOfSvnPropertyListEventArgs">
            <summary>设置 SvnClient.PropertyList(SvnTarget target, SvnPropertyListArgs args, EventHandler`1&lt;SvnPropertyListEventArgs&gt; listHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.ReintegrationMergeStringSvnTarget">
            <summary>设置 SvnClient.ReintegrationMerge(String targetPath, SvnTarget source) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.ReintegrationMergeStringSvnTargetSvnReintegrationMergeArgs">
            <summary>设置 SvnClient.ReintegrationMerge(String targetPath, SvnTarget source, SvnReintegrationMergeArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.RelocateStringUriUri">
            <summary>设置 SvnClient.Relocate(String path, Uri from, Uri to) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.RelocateStringUriUriSvnRelocateArgs">
            <summary>设置 SvnClient.Relocate(String path, Uri from, Uri to, SvnRelocateArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.RemoteCopySvnTargetUri">
            <summary>设置 SvnClient.RemoteCopy(SvnTarget source, Uri toUri) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.RemoteCopySvnTargetUriSvnCommitResultOut">
            <summary>设置 SvnClient.RemoteCopy(SvnTarget source, Uri toUri, SvnCommitResult&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.RemoteCopySvnTargetUriSvnCopyArgs">
            <summary>设置 SvnClient.RemoteCopy(SvnTarget source, Uri toUri, SvnCopyArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.RemoteCopySvnTargetUriSvnCopyArgsSvnCommitResultOut">
            <summary>设置 SvnClient.RemoteCopy(SvnTarget source, Uri toUri, SvnCopyArgs args, SvnCommitResult&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.RemoteCreateDirectoriesICollectionOfUriSvnCreateDirectoryArgs">
            <summary>设置 SvnClient.RemoteCreateDirectories(ICollection`1&lt;Uri&gt; uris, SvnCreateDirectoryArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.RemoteCreateDirectoriesICollectionOfUriSvnCreateDirectoryArgsSvnCommitResultOut">
            <summary>设置 SvnClient.RemoteCreateDirectories(ICollection`1&lt;Uri&gt; uris, SvnCreateDirectoryArgs args, SvnCommitResult&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.RemoteCreateDirectoryUri">
            <summary>设置 SvnClient.RemoteCreateDirectory(Uri uri) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.RemoteCreateDirectoryUriSvnCreateDirectoryArgs">
            <summary>设置 SvnClient.RemoteCreateDirectory(Uri uri, SvnCreateDirectoryArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.RemoteCreateDirectoryUriSvnCreateDirectoryArgsSvnCommitResultOut">
            <summary>设置 SvnClient.RemoteCreateDirectory(Uri uri, SvnCreateDirectoryArgs args, SvnCommitResult&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.RemoteDeleteICollectionOfUri">
            <summary>设置 SvnClient.RemoteDelete(ICollection`1&lt;Uri&gt; uris) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.RemoteDeleteICollectionOfUriSvnDeleteArgs">
            <summary>设置 SvnClient.RemoteDelete(ICollection`1&lt;Uri&gt; uris, SvnDeleteArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.RemoteDeleteICollectionOfUriSvnDeleteArgsSvnCommitResultOut">
            <summary>设置 SvnClient.RemoteDelete(ICollection`1&lt;Uri&gt; uris, SvnDeleteArgs args, SvnCommitResult&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.RemoteDeletePropertyUriString">
            <summary>设置 SvnClient.RemoteDeleteProperty(Uri target, String propertyName) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.RemoteDeletePropertyUriStringSvnSetPropertyArgs">
            <summary>设置 SvnClient.RemoteDeleteProperty(Uri target, String propertyName, SvnSetPropertyArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.RemoteDeleteUri">
            <summary>设置 SvnClient.RemoteDelete(Uri uri) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.RemoteDeleteUriSvnDeleteArgs">
            <summary>设置 SvnClient.RemoteDelete(Uri uri, SvnDeleteArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.RemoteDeleteUriSvnDeleteArgsSvnCommitResultOut">
            <summary>设置 SvnClient.RemoteDelete(Uri uri, SvnDeleteArgs args, SvnCommitResult&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.RemoteImportStringUri">
            <summary>设置 SvnClient.RemoteImport(String path, Uri target) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.RemoteImportStringUriSvnCommitResultOut">
            <summary>设置 SvnClient.RemoteImport(String path, Uri target, SvnCommitResult&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.RemoteImportStringUriSvnImportArgs">
            <summary>设置 SvnClient.RemoteImport(String path, Uri target, SvnImportArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.RemoteImportStringUriSvnImportArgsSvnCommitResultOut">
            <summary>设置 SvnClient.RemoteImport(String path, Uri target, SvnImportArgs args, SvnCommitResult&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.RemoteLockICollectionOfUriString">
            <summary>设置 SvnClient.RemoteLock(ICollection`1&lt;Uri&gt; targets, String comment) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.RemoteLockICollectionOfUriSvnLockArgs">
            <summary>设置 SvnClient.RemoteLock(ICollection`1&lt;Uri&gt; targets, SvnLockArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.RemoteLockUriString">
            <summary>设置 SvnClient.RemoteLock(Uri target, String comment) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.RemoteLockUriSvnLockArgs">
            <summary>设置 SvnClient.RemoteLock(Uri target, SvnLockArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.RemoteMoveICollectionOfUriUri">
            <summary>设置 SvnClient.RemoteMove(ICollection`1&lt;Uri&gt; sourceUris, Uri toUri) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.RemoteMoveICollectionOfUriUriSvnCommitResultOut">
            <summary>设置 SvnClient.RemoteMove(ICollection`1&lt;Uri&gt; sourceUris, Uri toUri, SvnCommitResult&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.RemoteMoveICollectionOfUriUriSvnMoveArgs">
            <summary>设置 SvnClient.RemoteMove(ICollection`1&lt;Uri&gt; sourceUris, Uri toUri, SvnMoveArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.RemoteMoveICollectionOfUriUriSvnMoveArgsSvnCommitResultOut">
            <summary>设置 SvnClient.RemoteMove(ICollection`1&lt;Uri&gt; sourceUris, Uri toUri, SvnMoveArgs args, SvnCommitResult&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.RemoteMoveUriUri">
            <summary>设置 SvnClient.RemoteMove(Uri sourceUri, Uri toUri) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.RemoteMoveUriUriSvnCommitResultOut">
            <summary>设置 SvnClient.RemoteMove(Uri sourceUri, Uri toUri, SvnCommitResult&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.RemoteMoveUriUriSvnMoveArgs">
            <summary>设置 SvnClient.RemoteMove(Uri sourceUri, Uri toUri, SvnMoveArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.RemoteMoveUriUriSvnMoveArgsSvnCommitResultOut">
            <summary>设置 SvnClient.RemoteMove(Uri sourceUri, Uri toUri, SvnMoveArgs args, SvnCommitResult&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.RemoteSetPropertyUriStringICollectionOfByte">
            <summary>设置 SvnClient.RemoteSetProperty(Uri target, String propertyName, ICollection`1&lt;Byte&gt; bytes) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.RemoteSetPropertyUriStringICollectionOfByteSvnSetPropertyArgs">
            <summary>设置 SvnClient.RemoteSetProperty(Uri target, String propertyName, ICollection`1&lt;Byte&gt; bytes, SvnSetPropertyArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.RemoteSetPropertyUriStringString">
            <summary>设置 SvnClient.RemoteSetProperty(Uri target, String propertyName, String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.RemoteSetPropertyUriStringStringSvnSetPropertyArgs">
            <summary>设置 SvnClient.RemoteSetProperty(Uri target, String propertyName, String value, SvnSetPropertyArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.RemoteUnlockICollectionOfUri">
            <summary>设置 SvnClient.RemoteUnlock(ICollection`1&lt;Uri&gt; targets) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.RemoteUnlockICollectionOfUriSvnUnlockArgs">
            <summary>设置 SvnClient.RemoteUnlock(ICollection`1&lt;Uri&gt; targets, SvnUnlockArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.RemoteUnlockUri">
            <summary>设置 SvnClient.RemoteUnlock(Uri target) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.RemoteUnlockUriSvnUnlockArgs">
            <summary>设置 SvnClient.RemoteUnlock(Uri target, SvnUnlockArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.RemoveFromChangeListICollectionOfString">
            <summary>设置 SvnClient.RemoveFromChangeList(ICollection`1&lt;String&gt; targets) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.RemoveFromChangeListICollectionOfStringSvnRemoveFromChangeListArgs">
            <summary>设置 SvnClient.RemoveFromChangeList(ICollection`1&lt;String&gt; targets, SvnRemoveFromChangeListArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.RemoveFromChangeListString">
            <summary>设置 SvnClient.RemoveFromChangeList(String target) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.RemoveFromChangeListStringSvnRemoveFromChangeListArgs">
            <summary>设置 SvnClient.RemoveFromChangeList(String target, SvnRemoveFromChangeListArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.ReplayRevisionsSvnTargetSvnRevisionRangeSvnDeltaEditor">
            <summary>设置 SvnClient.ReplayRevisions(SvnTarget target, SvnRevisionRange range, SvnDeltaEditor editor) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.ReplayRevisionsSvnTargetSvnRevisionRangeSvnDeltaEditorSvnReplayRevisionArgs">
            <summary>设置 SvnClient.ReplayRevisions(SvnTarget target, SvnRevisionRange range, SvnDeltaEditor editor, SvnReplayRevisionArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.RepositoryOperationUriSvnRepositoryOperationArgsSvnRepositoryOperationBuilder">
            <summary>设置 SvnClient.RepositoryOperation(Uri anchor, SvnRepositoryOperationArgs args, SvnRepositoryOperationBuilder builder) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.RepositoryOperationUriSvnRepositoryOperationArgsSvnRepositoryOperationBuilderSvnCommitResultOut">
            <summary>设置 SvnClient.RepositoryOperation(Uri anchor, SvnRepositoryOperationArgs args, SvnRepositoryOperationBuilder builder, SvnCommitResult&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.RepositoryOperationUriSvnRepositoryOperationBuilder">
            <summary>设置 SvnClient.RepositoryOperation(Uri anchor, SvnRepositoryOperationBuilder builder) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.RepositoryOperationUriSvnRepositoryOperationBuilderSvnCommitResultOut">
            <summary>设置 SvnClient.RepositoryOperation(Uri anchor, SvnRepositoryOperationBuilder builder, SvnCommitResult&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.ResolveStringSvnAccept">
            <summary>设置 SvnClient.Resolve(String path, SvnAccept choice) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.ResolveStringSvnAcceptSvnResolveArgs">
            <summary>设置 SvnClient.Resolve(String path, SvnAccept choice, SvnResolveArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.ResolvedString">
            <summary>设置 SvnClient.Resolved(String path) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.RevertICollectionOfString">
            <summary>设置 SvnClient.Revert(ICollection`1&lt;String&gt; paths) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.RevertICollectionOfStringSvnRevertArgs">
            <summary>设置 SvnClient.Revert(ICollection`1&lt;String&gt; paths, SvnRevertArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.RevertString">
            <summary>设置 SvnClient.Revert(String path) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.RevertStringSvnRevertArgs">
            <summary>设置 SvnClient.Revert(String path, SvnRevertArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.SetPropertyStringStringICollectionOfByte">
            <summary>设置 SvnClient.SetProperty(String target, String propertyName, ICollection`1&lt;Byte&gt; bytes) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.SetPropertyStringStringICollectionOfByteSvnSetPropertyArgs">
            <summary>设置 SvnClient.SetProperty(String target, String propertyName, ICollection`1&lt;Byte&gt; bytes, SvnSetPropertyArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.SetPropertyStringStringString">
            <summary>设置 SvnClient.SetProperty(String target, String propertyName, String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.SetPropertyStringStringStringSvnSetPropertyArgs">
            <summary>设置 SvnClient.SetProperty(String target, String propertyName, String value, SvnSetPropertyArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.SetPropertyUriStringICollectionOfByte">
            <summary>设置 SvnClient.SetProperty(Uri target, String propertyName, ICollection`1&lt;Byte&gt; bytes) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.SetPropertyUriStringICollectionOfByteSvnSetPropertyArgs">
            <summary>设置 SvnClient.SetProperty(Uri target, String propertyName, ICollection`1&lt;Byte&gt; bytes, SvnSetPropertyArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.SetPropertyUriStringString">
            <summary>设置 SvnClient.SetProperty(Uri target, String propertyName, String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.SetPropertyUriStringStringSvnSetPropertyArgs">
            <summary>设置 SvnClient.SetProperty(Uri target, String propertyName, String value, SvnSetPropertyArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.SetRevisionPropertySvnUriTargetStringICollectionOfByte">
            <summary>设置 SvnClient.SetRevisionProperty(SvnUriTarget target, String propertyName, ICollection`1&lt;Byte&gt; bytes) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.SetRevisionPropertySvnUriTargetStringString">
            <summary>设置 SvnClient.SetRevisionProperty(SvnUriTarget target, String propertyName, String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.SetRevisionPropertySvnUriTargetStringSvnSetRevisionPropertyArgsICollectionOfByte">
            <summary>设置 SvnClient.SetRevisionProperty(SvnUriTarget target, String propertyName, SvnSetRevisionPropertyArgs args, ICollection`1&lt;Byte&gt; bytes) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.SetRevisionPropertySvnUriTargetStringSvnSetRevisionPropertyArgsString">
            <summary>设置 SvnClient.SetRevisionProperty(SvnUriTarget target, String propertyName, SvnSetRevisionPropertyArgs args, String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.SetRevisionPropertyUriSvnRevisionStringICollectionOfByte">
            <summary>设置 SvnClient.SetRevisionProperty(Uri target, SvnRevision revision, String propertyName, ICollection`1&lt;Byte&gt; bytes) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.SetRevisionPropertyUriSvnRevisionStringICollectionOfByteSvnSetRevisionPropertyArgs">
            <summary>设置 SvnClient.SetRevisionProperty(Uri target, SvnRevision revision, String propertyName, ICollection`1&lt;Byte&gt; bytes, SvnSetRevisionPropertyArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.SetRevisionPropertyUriSvnRevisionStringString">
            <summary>设置 SvnClient.SetRevisionProperty(Uri target, SvnRevision revision, String propertyName, String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.SetRevisionPropertyUriSvnRevisionStringStringSvnSetRevisionPropertyArgs">
            <summary>设置 SvnClient.SetRevisionProperty(Uri target, SvnRevision revision, String propertyName, String value, SvnSetRevisionPropertyArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.SharpSvnVersionGet">
            <summary>设置 SvnClient.get_SharpSvnVersion() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.StaticConstructor">
            <summary>设置 SvnClient.SvnClient() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.StatusStringEventHandlerOfSvnStatusEventArgs">
            <summary>设置 SvnClient.Status(String path, EventHandler`1&lt;SvnStatusEventArgs&gt; statusHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.StatusStringSvnStatusArgsEventHandlerOfSvnStatusEventArgs">
            <summary>设置 SvnClient.Status(String path, SvnStatusArgs args, EventHandler`1&lt;SvnStatusEventArgs&gt; statusHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.SvnErrorAddEventHandlerOfSvnErrorEventArgs">
            <summary>设置 SvnClient.add_SvnError(EventHandler`1&lt;SvnErrorEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.SvnErrorRaiseObjectSvnErrorEventArgs">
            <summary>设置 SvnClient.raise_SvnError(Object sender, SvnErrorEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.SvnErrorRemoveEventHandlerOfSvnErrorEventArgs">
            <summary>设置 SvnClient.remove_SvnError(EventHandler`1&lt;SvnErrorEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.SvnLibrariesGet">
            <summary>设置 SvnClient.get_SvnLibraries() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.SwitchStringSvnUriTarget">
            <summary>设置 SvnClient.Switch(String path, SvnUriTarget target) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.SwitchStringSvnUriTargetSvnSwitchArgs">
            <summary>设置 SvnClient.Switch(String path, SvnUriTarget target, SvnSwitchArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.SwitchStringSvnUriTargetSvnSwitchArgsSvnUpdateResultOut">
            <summary>设置 SvnClient.Switch(String path, SvnUriTarget target, SvnSwitchArgs args, SvnUpdateResult&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.SwitchStringSvnUriTargetSvnUpdateResultOut">
            <summary>设置 SvnClient.Switch(String path, SvnUriTarget target, SvnUpdateResult&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.TryGetAllInheritedPropertiesStringSvnPropertyCollectionOut">
            <summary>设置 SvnClient.TryGetAllInheritedProperties(String path, SvnPropertyCollection&amp; properties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.TryGetInheritedPropertyStringStringStringOut">
            <summary>设置 SvnClient.TryGetInheritedProperty(String path, String propertyName, String&amp; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.TryGetPropertySvnTargetStringStringOut">
            <summary>设置 SvnClient.TryGetProperty(SvnTarget target, String propertyName, String&amp; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.TryGetRepositoryIdStringGuidOut">
            <summary>设置 SvnClient.TryGetRepositoryId(String path, Guid&amp; id) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.TryGetRepositoryIdUriGuidOut">
            <summary>设置 SvnClient.TryGetRepositoryId(Uri uri, Guid&amp; id) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.TryGetRepositoryStringUriOutGuidOut">
            <summary>设置 SvnClient.TryGetRepository(String path, Uri&amp; repositoryUrl, Guid&amp; id) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.TryGetRepositoryUriUriOutGuidOut">
            <summary>设置 SvnClient.TryGetRepository(Uri uri, Uri&amp; repositoryUrl, Guid&amp; id) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.UnlockICollectionOfString">
            <summary>设置 SvnClient.Unlock(ICollection`1&lt;String&gt; targets) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.UnlockICollectionOfStringSvnUnlockArgs">
            <summary>设置 SvnClient.Unlock(ICollection`1&lt;String&gt; targets, SvnUnlockArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.UnlockString">
            <summary>设置 SvnClient.Unlock(String target) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.UnlockStringSvnUnlockArgs">
            <summary>设置 SvnClient.Unlock(String target, SvnUnlockArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.UpdateICollectionOfString">
            <summary>设置 SvnClient.Update(ICollection`1&lt;String&gt; paths) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.UpdateICollectionOfStringSvnUpdateArgs">
            <summary>设置 SvnClient.Update(ICollection`1&lt;String&gt; paths, SvnUpdateArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.UpdateICollectionOfStringSvnUpdateArgsSvnUpdateResultOut">
            <summary>设置 SvnClient.Update(ICollection`1&lt;String&gt; paths, SvnUpdateArgs args, SvnUpdateResult&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.UpdateICollectionOfStringSvnUpdateResultOut">
            <summary>设置 SvnClient.Update(ICollection`1&lt;String&gt; paths, SvnUpdateResult&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.UpdateString">
            <summary>设置 SvnClient.Update(String path) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.UpdateStringSvnUpdateArgs">
            <summary>设置 SvnClient.Update(String path, SvnUpdateArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.UpdateStringSvnUpdateArgsSvnUpdateResultOut">
            <summary>设置 SvnClient.Update(String path, SvnUpdateArgs args, SvnUpdateResult&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.UpdateStringSvnUpdateResultOut">
            <summary>设置 SvnClient.Update(String path, SvnUpdateResult&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.UpgradeString">
            <summary>设置 SvnClient.Upgrade(String path) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.UpgradeStringSvnUpgradeArgs">
            <summary>设置 SvnClient.Upgrade(String path, SvnUpgradeArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.VersionGet">
            <summary>设置 SvnClient.get_Version() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.WriteSvnTargetStream">
            <summary>设置 SvnClient.Write(SvnTarget target, Stream output) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.WriteSvnTargetStreamSvnPropertyCollectionOut">
            <summary>设置 SvnClient.Write(SvnTarget target, Stream output, SvnPropertyCollection&amp; properties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.WriteSvnTargetStreamSvnWriteArgs">
            <summary>设置 SvnClient.Write(SvnTarget target, Stream output, SvnWriteArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.WriteSvnTargetStreamSvnWriteArgsSvnPropertyCollectionOut">
            <summary>设置 SvnClient.Write(SvnTarget target, Stream output, SvnWriteArgs args, SvnPropertyCollection&amp; properties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient._SvnClient">
            <summary>设置 SvnClient.~SvnClient() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnClient.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClient.AllInstances.CopyOf1ICollectionOfM0String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{SharpSvn.SvnClient,System.Collections.Generic.ICollection{``0},System.String,System.Boolean})">
            <summary>设置 SvnClient.Copy(ICollection`1&lt;!!0&gt; sources, String toPath) 的 填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClient.AllInstances.CopyOf1ICollectionOfM0StringSvnCopyArgs``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{SharpSvn.SvnClient,System.Collections.Generic.ICollection{``0},System.String,SharpSvn.SvnCopyArgs,System.Boolean})">
            <summary>设置 SvnClient.Copy(ICollection`1&lt;!!0&gt; sources, String toPath, SvnCopyArgs args) 的 填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClient.AllInstances.MergeOf1StringSvnTargetICollectionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{SharpSvn.SvnClient,System.String,SharpSvn.SvnTarget,System.Collections.Generic.ICollection{``0},System.Boolean})">
            <summary>设置 SvnClient.Merge(String targetPath, SvnTarget source, ICollection`1&lt;!!0&gt; mergeRange) 的 填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClient.AllInstances.MergeOf1StringSvnTargetICollectionOfM0SvnMergeArgs``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{SharpSvn.SvnClient,System.String,SharpSvn.SvnTarget,System.Collections.Generic.ICollection{``0},SharpSvn.SvnMergeArgs,System.Boolean})">
            <summary>设置 SvnClient.Merge(String targetPath, SvnTarget source, ICollection`1&lt;!!0&gt; mergeRange, SvnMergeArgs args) 的 填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClient.AllInstances.RemoteCopyOf1ICollectionOfM0Uri``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{SharpSvn.SvnClient,System.Collections.Generic.ICollection{``0},System.Uri,System.Boolean})">
            <summary>设置 SvnClient.RemoteCopy(ICollection`1&lt;!!0&gt; sources, Uri toUri) 的 填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClient.AllInstances.RemoteCopyOf1ICollectionOfM0UriSvnCommitResultOut``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{SharpSvn.SvnClient,System.Collections.Generic.ICollection{``0},System.Uri,SharpSvn.SvnCommitResult,System.Boolean})">
            <summary>设置 SvnClient.RemoteCopy(ICollection`1&lt;!!0&gt; sources, Uri toUri, SvnCommitResult&amp; result) 的 填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClient.AllInstances.RemoteCopyOf1ICollectionOfM0UriSvnCopyArgs``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{SharpSvn.SvnClient,System.Collections.Generic.ICollection{``0},System.Uri,SharpSvn.SvnCopyArgs,System.Boolean})">
            <summary>设置 SvnClient.RemoteCopy(ICollection`1&lt;!!0&gt; sources, Uri toUri, SvnCopyArgs args) 的 填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClient.AllInstances.RemoteCopyOf1ICollectionOfM0UriSvnCopyArgsSvnCommitResultOut``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{SharpSvn.SvnClient,System.Collections.Generic.ICollection{``0},System.Uri,SharpSvn.SvnCopyArgs,SharpSvn.SvnCommitResult,System.Boolean})">
            <summary>设置 SvnClient.RemoteCopy(ICollection`1&lt;!!0&gt; sources, Uri toUri, SvnCopyArgs args, SvnCommitResult&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.AddString">
            <summary>设置 SvnClient.Add(String path) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.AddStringSvnAddArgs">
            <summary>设置 SvnClient.Add(String path, SvnAddArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.AddStringSvnDepth">
            <summary>设置 SvnClient.Add(String path, SvnDepth depth) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.AddToChangeListICollectionOfStringString">
            <summary>设置 SvnClient.AddToChangeList(ICollection`1&lt;String&gt; targets, String changeList) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.AddToChangeListICollectionOfStringStringSvnAddToChangeListArgs">
            <summary>设置 SvnClient.AddToChangeList(ICollection`1&lt;String&gt; targets, String changeList, SvnAddToChangeListArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.AddToChangeListStringString">
            <summary>设置 SvnClient.AddToChangeList(String target, String changeList) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.AddToChangeListStringStringSvnAddToChangeListArgs">
            <summary>设置 SvnClient.AddToChangeList(String target, String changeList, SvnAddToChangeListArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.BlameSvnTargetEventHandlerOfSvnBlameEventArgs">
            <summary>设置 SvnClient.Blame(SvnTarget target, EventHandler`1&lt;SvnBlameEventArgs&gt; blameHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.BlameSvnTargetSvnBlameArgsEventHandlerOfSvnBlameEventArgs">
            <summary>设置 SvnClient.Blame(SvnTarget target, SvnBlameArgs args, EventHandler`1&lt;SvnBlameEventArgs&gt; blameHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.CancelAddEventHandlerOfSvnCancelEventArgs">
            <summary>设置 SvnClient.add_Cancel(EventHandler`1&lt;SvnCancelEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.CancelRaiseObjectSvnCancelEventArgs">
            <summary>设置 SvnClient.raise_Cancel(Object sender, SvnCancelEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.CancelRemoveEventHandlerOfSvnCancelEventArgs">
            <summary>设置 SvnClient.remove_Cancel(EventHandler`1&lt;SvnCancelEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.CheckOutSvnUriTargetString">
            <summary>设置 SvnClient.CheckOut(SvnUriTarget url, String path) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.CheckOutSvnUriTargetStringSvnCheckOutArgs">
            <summary>设置 SvnClient.CheckOut(SvnUriTarget url, String path, SvnCheckOutArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.CheckOutSvnUriTargetStringSvnCheckOutArgsSvnUpdateResultOut">
            <summary>设置 SvnClient.CheckOut(SvnUriTarget url, String path, SvnCheckOutArgs args, SvnUpdateResult&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.CheckOutSvnUriTargetStringSvnUpdateResultOut">
            <summary>设置 SvnClient.CheckOut(SvnUriTarget url, String path, SvnUpdateResult&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.CleanUpString">
            <summary>设置 SvnClient.CleanUp(String path) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.CleanUpStringSvnCleanUpArgs">
            <summary>设置 SvnClient.CleanUp(String path, SvnCleanUpArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.CommitICollectionOfString">
            <summary>设置 SvnClient.Commit(ICollection`1&lt;String&gt; paths) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.CommitICollectionOfStringSvnCommitArgs">
            <summary>设置 SvnClient.Commit(ICollection`1&lt;String&gt; paths, SvnCommitArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.CommitICollectionOfStringSvnCommitArgsSvnCommitResultOut">
            <summary>设置 SvnClient.Commit(ICollection`1&lt;String&gt; paths, SvnCommitArgs args, SvnCommitResult&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.CommitICollectionOfStringSvnCommitResultOut">
            <summary>设置 SvnClient.Commit(ICollection`1&lt;String&gt; paths, SvnCommitResult&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.CommitString">
            <summary>设置 SvnClient.Commit(String path) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.CommitStringSvnCommitArgs">
            <summary>设置 SvnClient.Commit(String path, SvnCommitArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.CommitStringSvnCommitArgsSvnCommitResultOut">
            <summary>设置 SvnClient.Commit(String path, SvnCommitArgs args, SvnCommitResult&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.CommitStringSvnCommitResultOut">
            <summary>设置 SvnClient.Commit(String path, SvnCommitResult&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.CommittedAddEventHandlerOfSvnCommittedEventArgs">
            <summary>设置 SvnClient.add_Committed(EventHandler`1&lt;SvnCommittedEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.CommittedRaiseObjectSvnCommittedEventArgs">
            <summary>设置 SvnClient.raise_Committed(Object sender, SvnCommittedEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.CommittedRemoveEventHandlerOfSvnCommittedEventArgs">
            <summary>设置 SvnClient.remove_Committed(EventHandler`1&lt;SvnCommittedEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.CommittingAddEventHandlerOfSvnCommittingEventArgs">
            <summary>设置 SvnClient.add_Committing(EventHandler`1&lt;SvnCommittingEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.CommittingRaiseObjectSvnCommittingEventArgs">
            <summary>设置 SvnClient.raise_Committing(Object sender, SvnCommittingEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.CommittingRemoveEventHandlerOfSvnCommittingEventArgs">
            <summary>设置 SvnClient.remove_Committing(EventHandler`1&lt;SvnCommittingEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.ConfigurationGet">
            <summary>设置 SvnClient.get_Configuration() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.ConflictAddEventHandlerOfSvnConflictEventArgs">
            <summary>设置 SvnClient.add_Conflict(EventHandler`1&lt;SvnConflictEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.ConflictRaiseObjectSvnConflictEventArgs">
            <summary>设置 SvnClient.raise_Conflict(Object sender, SvnConflictEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.ConflictRemoveEventHandlerOfSvnConflictEventArgs">
            <summary>设置 SvnClient.remove_Conflict(EventHandler`1&lt;SvnConflictEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.CopySvnTargetString">
            <summary>设置 SvnClient.Copy(SvnTarget source, String toPath) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.CopySvnTargetStringSvnCopyArgs">
            <summary>设置 SvnClient.Copy(SvnTarget source, String toPath, SvnCopyArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.CreateDirectoriesICollectionOfString">
            <summary>设置 SvnClient.CreateDirectories(ICollection`1&lt;String&gt; paths) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.CreateDirectoriesICollectionOfStringSvnCreateDirectoryArgs">
            <summary>设置 SvnClient.CreateDirectories(ICollection`1&lt;String&gt; paths, SvnCreateDirectoryArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.CreateDirectoryString">
            <summary>设置 SvnClient.CreateDirectory(String path) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.CreateDirectoryStringSvnCreateDirectoryArgs">
            <summary>设置 SvnClient.CreateDirectory(String path, SvnCreateDirectoryArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.CropWorkingCopyStringSvnDepth">
            <summary>设置 SvnClient.CropWorkingCopy(String path, SvnDepth toDepth) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.CropWorkingCopyStringSvnDepthSvnCropWorkingCopyArgs">
            <summary>设置 SvnClient.CropWorkingCopy(String path, SvnDepth toDepth, SvnCropWorkingCopyArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.DeleteICollectionOfString">
            <summary>设置 SvnClient.Delete(ICollection`1&lt;String&gt; paths) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.DeleteICollectionOfStringSvnDeleteArgs">
            <summary>设置 SvnClient.Delete(ICollection`1&lt;String&gt; paths, SvnDeleteArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.DeletePropertyStringString">
            <summary>设置 SvnClient.DeleteProperty(String target, String propertyName) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.DeletePropertyStringStringSvnSetPropertyArgs">
            <summary>设置 SvnClient.DeleteProperty(String target, String propertyName, SvnSetPropertyArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.DeletePropertyUriString">
            <summary>设置 SvnClient.DeleteProperty(Uri target, String propertyName) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.DeletePropertyUriStringSvnSetPropertyArgs">
            <summary>设置 SvnClient.DeleteProperty(Uri target, String propertyName, SvnSetPropertyArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.DeleteRevisionPropertySvnUriTargetString">
            <summary>设置 SvnClient.DeleteRevisionProperty(SvnUriTarget target, String propertyName) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.DeleteRevisionPropertySvnUriTargetStringSvnSetRevisionPropertyArgs">
            <summary>设置 SvnClient.DeleteRevisionProperty(SvnUriTarget target, String propertyName, SvnSetRevisionPropertyArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.DeleteRevisionPropertyUriSvnRevisionString">
            <summary>设置 SvnClient.DeleteRevisionProperty(Uri target, SvnRevision revision, String propertyName) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.DeleteRevisionPropertyUriSvnRevisionStringSvnSetRevisionPropertyArgs">
            <summary>设置 SvnClient.DeleteRevisionProperty(Uri target, SvnRevision revision, String propertyName, SvnSetRevisionPropertyArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.DeleteString">
            <summary>设置 SvnClient.Delete(String path) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.DeleteStringSvnDeleteArgs">
            <summary>设置 SvnClient.Delete(String path, SvnDeleteArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.DiffMergeStringSvnTargetSvnTarget">
            <summary>设置 SvnClient.DiffMerge(String targetPath, SvnTarget mergeFrom, SvnTarget mergeTo) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.DiffMergeStringSvnTargetSvnTargetSvnDiffMergeArgs">
            <summary>设置 SvnClient.DiffMerge(String targetPath, SvnTarget mergeFrom, SvnTarget mergeTo, SvnDiffMergeArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.DiffSummarySvnTargetSvnTargetEventHandlerOfSvnDiffSummaryEventArgs">
            <summary>设置 SvnClient.DiffSummary(SvnTarget from, SvnTarget to, EventHandler`1&lt;SvnDiffSummaryEventArgs&gt; summaryHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.DiffSummarySvnTargetSvnTargetSvnDiffSummaryArgsEventHandlerOfSvnDiffSummaryEventArgs">
            <summary>设置 SvnClient.DiffSummary(SvnTarget from, SvnTarget to, SvnDiffSummaryArgs args, EventHandler`1&lt;SvnDiffSummaryEventArgs&gt; summaryHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.DiffSvnTargetSvnRevisionRangeStream">
            <summary>设置 SvnClient.Diff(SvnTarget source, SvnRevisionRange range, Stream result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.DiffSvnTargetSvnRevisionRangeSvnDiffArgsStream">
            <summary>设置 SvnClient.Diff(SvnTarget source, SvnRevisionRange range, SvnDiffArgs args, Stream result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.DiffSvnTargetSvnTargetStream">
            <summary>设置 SvnClient.Diff(SvnTarget from, SvnTarget to, Stream result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.DiffSvnTargetSvnTargetSvnDiffArgsStream">
            <summary>设置 SvnClient.Diff(SvnTarget from, SvnTarget to, SvnDiffArgs args, Stream result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.DisposeBoolean">
            <summary>设置 SvnClient.Dispose(Boolean ) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.ExportSvnTargetString">
            <summary>设置 SvnClient.Export(SvnTarget from, String toPath) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.ExportSvnTargetStringSvnExportArgs">
            <summary>设置 SvnClient.Export(SvnTarget from, String toPath, SvnExportArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.ExportSvnTargetStringSvnExportArgsSvnUpdateResultOut">
            <summary>设置 SvnClient.Export(SvnTarget from, String toPath, SvnExportArgs args, SvnUpdateResult&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.ExportSvnTargetStringSvnUpdateResultOut">
            <summary>设置 SvnClient.Export(SvnTarget from, String toPath, SvnUpdateResult&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.FileVersionsSvnTargetEventHandlerOfSvnFileVersionEventArgs">
            <summary>设置 SvnClient.FileVersions(SvnTarget target, EventHandler`1&lt;SvnFileVersionEventArgs&gt; versionHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.FileVersionsSvnTargetSvnFileVersionsArgsEventHandlerOfSvnFileVersionEventArgs">
            <summary>设置 SvnClient.FileVersions(SvnTarget target, SvnFileVersionsArgs args, EventHandler`1&lt;SvnFileVersionEventArgs&gt; versionHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.GetAppliedMergeInfoSvnTargetSvnAppliedMergeInfoOut">
            <summary>设置 SvnClient.GetAppliedMergeInfo(SvnTarget target, SvnAppliedMergeInfo&amp; mergeInfo) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.GetAppliedMergeInfoSvnTargetSvnGetAppliedMergeInfoArgsSvnAppliedMergeInfoOut">
            <summary>设置 SvnClient.GetAppliedMergeInfo(SvnTarget target, SvnGetAppliedMergeInfoArgs args, SvnAppliedMergeInfo&amp; mergeInfo) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.GetBlameSvnTargetCollectionOfSvnBlameEventArgsOut">
            <summary>设置 SvnClient.GetBlame(SvnTarget target, Collection`1&lt;SvnBlameEventArgs&gt;&amp; list) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.GetBlameSvnTargetSvnBlameArgsCollectionOfSvnBlameEventArgsOut">
            <summary>设置 SvnClient.GetBlame(SvnTarget target, SvnBlameArgs args, Collection`1&lt;SvnBlameEventArgs&gt;&amp; list) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.GetCapabilitiesSvnTargetIEnumerableOfSvnCapabilityCollectionOfSvnCapabilityOut">
            <summary>设置 SvnClient.GetCapabilities(SvnTarget target, IEnumerable`1&lt;SvnCapability&gt; retrieve, Collection`1&lt;SvnCapability&gt;&amp; capabilities) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.GetCapabilitiesSvnTargetSvnGetCapabilitiesArgsCollectionOfSvnCapabilityOut">
            <summary>设置 SvnClient.GetCapabilities(SvnTarget target, SvnGetCapabilitiesArgs args, Collection`1&lt;SvnCapability&gt;&amp; capabilities) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.GetChangeListStringCollectionOfSvnListChangeListEventArgsOut">
            <summary>设置 SvnClient.GetChangeList(String rootPath, Collection`1&lt;SvnListChangeListEventArgs&gt;&amp; list) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.GetChangeListStringSvnListChangeListArgsCollectionOfSvnListChangeListEventArgsOut">
            <summary>设置 SvnClient.GetChangeList(String rootPath, SvnListChangeListArgs args, Collection`1&lt;SvnListChangeListEventArgs&gt;&amp; list) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.GetDiffSummarySvnTargetSvnTargetCollectionOfSvnDiffSummaryEventArgsOut">
            <summary>设置 SvnClient.GetDiffSummary(SvnTarget from, SvnTarget to, Collection`1&lt;SvnDiffSummaryEventArgs&gt;&amp; list) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.GetDiffSummarySvnTargetSvnTargetSvnDiffSummaryArgsCollectionOfSvnDiffSummaryEventArgsOut">
            <summary>设置 SvnClient.GetDiffSummary(SvnTarget from, SvnTarget to, SvnDiffSummaryArgs args, Collection`1&lt;SvnDiffSummaryEventArgs&gt;&amp; list) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.GetFileVersionsSvnTargetCollectionOfSvnFileVersionEventArgsOut">
            <summary>设置 SvnClient.GetFileVersions(SvnTarget target, Collection`1&lt;SvnFileVersionEventArgs&gt;&amp; list) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.GetFileVersionsSvnTargetSvnFileVersionsArgsCollectionOfSvnFileVersionEventArgsOut">
            <summary>设置 SvnClient.GetFileVersions(SvnTarget target, SvnFileVersionsArgs args, Collection`1&lt;SvnFileVersionEventArgs&gt;&amp; list) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.GetInfoSvnTargetSvnInfoArgsCollectionOfSvnInfoEventArgsOut">
            <summary>设置 SvnClient.GetInfo(SvnTarget target, SvnInfoArgs args, Collection`1&lt;SvnInfoEventArgs&gt;&amp; info) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.GetInfoSvnTargetSvnInfoEventArgsOut">
            <summary>设置 SvnClient.GetInfo(SvnTarget target, SvnInfoEventArgs&amp; info) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.GetInheritedPropertyListStringCollectionOfSvnInheritedPropertyListEventArgsOut">
            <summary>设置 SvnClient.GetInheritedPropertyList(String path, Collection`1&lt;SvnInheritedPropertyListEventArgs&gt;&amp; listHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.GetInheritedPropertyListStringSvnInheritedPropertyListArgsCollectionOfSvnInheritedPropertyListEventArgsOut">
            <summary>设置 SvnClient.GetInheritedPropertyList(String path, SvnInheritedPropertyListArgs args, Collection`1&lt;SvnInheritedPropertyListEventArgs&gt;&amp; listHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.GetListSvnTargetCollectionOfSvnListEventArgsOut">
            <summary>设置 SvnClient.GetList(SvnTarget target, Collection`1&lt;SvnListEventArgs&gt;&amp; list) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.GetListSvnTargetSvnListArgsCollectionOfSvnListEventArgsOut">
            <summary>设置 SvnClient.GetList(SvnTarget target, SvnListArgs args, Collection`1&lt;SvnListEventArgs&gt;&amp; list) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.GetLogICollectionOfStringSvnLogArgsCollectionOfSvnLogEventArgsOut">
            <summary>设置 SvnClient.GetLog(ICollection`1&lt;String&gt; targetPaths, SvnLogArgs args, Collection`1&lt;SvnLogEventArgs&gt;&amp; logItems) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.GetLogICollectionOfUriSvnLogArgsCollectionOfSvnLogEventArgsOut">
            <summary>设置 SvnClient.GetLog(ICollection`1&lt;Uri&gt; targets, SvnLogArgs args, Collection`1&lt;SvnLogEventArgs&gt;&amp; logItems) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.GetLogStringCollectionOfSvnLogEventArgsOut">
            <summary>设置 SvnClient.GetLog(String targetPath, Collection`1&lt;SvnLogEventArgs&gt;&amp; logItems) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.GetLogStringSvnLogArgsCollectionOfSvnLogEventArgsOut">
            <summary>设置 SvnClient.GetLog(String targetPath, SvnLogArgs args, Collection`1&lt;SvnLogEventArgs&gt;&amp; logItems) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.GetLogUriCollectionOfSvnLogEventArgsOut">
            <summary>设置 SvnClient.GetLog(Uri target, Collection`1&lt;SvnLogEventArgs&gt;&amp; logItems) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.GetLogUriSvnLogArgsCollectionOfSvnLogEventArgsOut">
            <summary>设置 SvnClient.GetLog(Uri target, SvnLogArgs args, Collection`1&lt;SvnLogEventArgs&gt;&amp; logItems) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.GetMergesEligibleSvnTargetSvnTargetCollectionOfSvnMergesEligibleEventArgsOut">
            <summary>设置 SvnClient.GetMergesEligible(SvnTarget target, SvnTarget source, Collection`1&lt;SvnMergesEligibleEventArgs&gt;&amp; list) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.GetMergesEligibleSvnTargetSvnTargetSvnMergesEligibleArgsCollectionOfSvnMergesEligibleEventArgsOut">
            <summary>设置 SvnClient.GetMergesEligible(SvnTarget target, SvnTarget source, SvnMergesEligibleArgs args, Collection`1&lt;SvnMergesEligibleEventArgs&gt;&amp; list) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.GetMergesMergedSvnTargetSvnTargetCollectionOfSvnMergesMergedEventArgsOut">
            <summary>设置 SvnClient.GetMergesMerged(SvnTarget target, SvnTarget source, Collection`1&lt;SvnMergesMergedEventArgs&gt;&amp; list) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.GetMergesMergedSvnTargetSvnTargetSvnMergesMergedArgsCollectionOfSvnMergesMergedEventArgsOut">
            <summary>设置 SvnClient.GetMergesMerged(SvnTarget target, SvnTarget source, SvnMergesMergedArgs args, Collection`1&lt;SvnMergesMergedEventArgs&gt;&amp; list) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.GetPropertyListSvnTargetCollectionOfSvnPropertyListEventArgsOut">
            <summary>设置 SvnClient.GetPropertyList(SvnTarget target, Collection`1&lt;SvnPropertyListEventArgs&gt;&amp; list) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.GetPropertyListSvnTargetSvnPropertyListArgsCollectionOfSvnPropertyListEventArgsOut">
            <summary>设置 SvnClient.GetPropertyList(SvnTarget target, SvnPropertyListArgs args, Collection`1&lt;SvnPropertyListEventArgs&gt;&amp; list) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.GetPropertySvnTargetStringStringOut">
            <summary>设置 SvnClient.GetProperty(SvnTarget target, String propertyName, String&amp; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.GetPropertySvnTargetStringSvnGetPropertyArgsSvnTargetPropertyCollectionOut">
            <summary>设置 SvnClient.GetProperty(SvnTarget target, String propertyName, SvnGetPropertyArgs args, SvnTargetPropertyCollection&amp; properties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.GetPropertySvnTargetStringSvnPropertyValueOut">
            <summary>设置 SvnClient.GetProperty(SvnTarget target, String propertyName, SvnPropertyValue&amp; bytes) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.GetRepositoryIdFromUriUriGuidOut">
            <summary>设置 SvnClient.GetRepositoryIdFromUri(Uri uri, Guid&amp; id) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.GetRepositoryRootString">
            <summary>设置 SvnClient.GetRepositoryRoot(String target) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.GetRepositoryRootUri">
            <summary>设置 SvnClient.GetRepositoryRoot(Uri uri) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.GetRevisionPropertyListSvnUriTargetSvnPropertyCollectionOut">
            <summary>设置 SvnClient.GetRevisionPropertyList(SvnUriTarget target, SvnPropertyCollection&amp; list) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.GetRevisionPropertyListSvnUriTargetSvnRevisionPropertyListArgsSvnPropertyCollectionOut">
            <summary>设置 SvnClient.GetRevisionPropertyList(SvnUriTarget target, SvnRevisionPropertyListArgs args, SvnPropertyCollection&amp; list) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.GetRevisionPropertyListUriSvnRevisionSvnPropertyCollectionOut">
            <summary>设置 SvnClient.GetRevisionPropertyList(Uri target, SvnRevision revision, SvnPropertyCollection&amp; list) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.GetRevisionPropertyListUriSvnRevisionSvnRevisionPropertyListArgsSvnPropertyCollectionOut">
            <summary>设置 SvnClient.GetRevisionPropertyList(Uri target, SvnRevision revision, SvnRevisionPropertyListArgs args, SvnPropertyCollection&amp; list) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.GetRevisionPropertySvnUriTargetStringStringOut">
            <summary>设置 SvnClient.GetRevisionProperty(SvnUriTarget target, String propertyName, String&amp; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.GetRevisionPropertySvnUriTargetStringSvnGetRevisionPropertyArgsStringOut">
            <summary>设置 SvnClient.GetRevisionProperty(SvnUriTarget target, String propertyName, SvnGetRevisionPropertyArgs args, String&amp; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.GetRevisionPropertySvnUriTargetStringSvnGetRevisionPropertyArgsSvnPropertyValueOut">
            <summary>设置 SvnClient.GetRevisionProperty(SvnUriTarget target, String propertyName, SvnGetRevisionPropertyArgs args, SvnPropertyValue&amp; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.GetRevisionPropertySvnUriTargetStringSvnPropertyValueOut">
            <summary>设置 SvnClient.GetRevisionProperty(SvnUriTarget target, String propertyName, SvnPropertyValue&amp; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.GetRevisionPropertyUriSvnRevisionStringStringOut">
            <summary>设置 SvnClient.GetRevisionProperty(Uri target, SvnRevision revision, String propertyName, String&amp; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.GetRevisionPropertyUriSvnRevisionStringSvnGetRevisionPropertyArgsStringOut">
            <summary>设置 SvnClient.GetRevisionProperty(Uri target, SvnRevision revision, String propertyName, SvnGetRevisionPropertyArgs args, String&amp; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.GetRevisionPropertyUriSvnRevisionStringSvnGetRevisionPropertyArgsSvnPropertyValueOut">
            <summary>设置 SvnClient.GetRevisionProperty(Uri target, SvnRevision revision, String propertyName, SvnGetRevisionPropertyArgs args, SvnPropertyValue&amp; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.GetRevisionPropertyUriSvnRevisionStringSvnPropertyValueOut">
            <summary>设置 SvnClient.GetRevisionProperty(Uri target, SvnRevision revision, String propertyName, SvnPropertyValue&amp; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.GetStatusStringCollectionOfSvnStatusEventArgsOut">
            <summary>设置 SvnClient.GetStatus(String path, Collection`1&lt;SvnStatusEventArgs&gt;&amp; statuses) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.GetStatusStringSvnStatusArgsCollectionOfSvnStatusEventArgsOut">
            <summary>设置 SvnClient.GetStatus(String path, SvnStatusArgs args, Collection`1&lt;SvnStatusEventArgs&gt;&amp; statuses) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.GetSuggestedMergeSourcesSvnTargetSvnGetSuggestedMergeSourcesArgsSvnMergeSourcesCollectionOut">
            <summary>设置 SvnClient.GetSuggestedMergeSources(SvnTarget target, SvnGetSuggestedMergeSourcesArgs args, SvnMergeSourcesCollection&amp; mergeSources) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.GetSuggestedMergeSourcesSvnTargetSvnMergeSourcesCollectionOut">
            <summary>设置 SvnClient.GetSuggestedMergeSources(SvnTarget target, SvnMergeSourcesCollection&amp; mergeSources) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.GetUriFromWorkingCopyString">
            <summary>设置 SvnClient.GetUriFromWorkingCopy(String path) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.GetWorkingCopyRootString">
            <summary>设置 SvnClient.GetWorkingCopyRoot(String path) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.HandleClientCancelSvnCancelEventArgs">
            <summary>设置 SvnClient.HandleClientCancel(SvnCancelEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.HandleClientCommittedSvnCommittedEventArgs">
            <summary>设置 SvnClient.HandleClientCommitted(SvnCommittedEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.HandleClientCommittingSvnCommittingEventArgs">
            <summary>设置 SvnClient.HandleClientCommitting(SvnCommittingEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.HandleClientConflictSvnConflictEventArgs">
            <summary>设置 SvnClient.HandleClientConflict(SvnConflictEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.HandleClientErrorSvnErrorEventArgs">
            <summary>设置 SvnClient.HandleClientError(SvnErrorEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.HandleClientNotifySvnNotifyEventArgs">
            <summary>设置 SvnClient.HandleClientNotify(SvnNotifyEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.HandleClientProgressSvnProgressEventArgs">
            <summary>设置 SvnClient.HandleClientProgress(SvnProgressEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.HandleProcessingSvnProcessingEventArgs">
            <summary>设置 SvnClient.HandleProcessing(SvnProcessingEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.ImportStringUri">
            <summary>设置 SvnClient.Import(String path, Uri target) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.ImportStringUriSvnCommitResultOut">
            <summary>设置 SvnClient.Import(String path, Uri target, SvnCommitResult&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.ImportStringUriSvnImportArgs">
            <summary>设置 SvnClient.Import(String path, Uri target, SvnImportArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.ImportStringUriSvnImportArgsSvnCommitResultOut">
            <summary>设置 SvnClient.Import(String path, Uri target, SvnImportArgs args, SvnCommitResult&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.InfoSvnTargetEventHandlerOfSvnInfoEventArgs">
            <summary>设置 SvnClient.Info(SvnTarget target, EventHandler`1&lt;SvnInfoEventArgs&gt; infoHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.InfoSvnTargetSvnInfoArgsEventHandlerOfSvnInfoEventArgs">
            <summary>设置 SvnClient.Info(SvnTarget target, SvnInfoArgs args, EventHandler`1&lt;SvnInfoEventArgs&gt; infoHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.InheritedPropertyListStringEventHandlerOfSvnInheritedPropertyListEventArgs">
            <summary>设置 SvnClient.InheritedPropertyList(String path, EventHandler`1&lt;SvnInheritedPropertyListEventArgs&gt; handler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.InheritedPropertyListStringSvnInheritedPropertyListArgsEventHandlerOfSvnInheritedPropertyListEventArgs">
            <summary>设置 SvnClient.InheritedPropertyList(String path, SvnInheritedPropertyListArgs args, EventHandler`1&lt;SvnInheritedPropertyListEventArgs&gt; handler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.Initialize">
            <summary>设置 SvnClient.Initialize() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.InternalLogICollectionOfStringUriSvnRevisionSvnLogArgsEventHandlerOfSvnLogEventArgs">
            <summary>设置 SvnClient.InternalLog(ICollection`1&lt;String&gt; targets, Uri logRoot, SvnRevision altPegRev, SvnLogArgs args, EventHandler`1&lt;SvnLogEventArgs&gt; logHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.ListChangeListStringEventHandlerOfSvnListChangeListEventArgs">
            <summary>设置 SvnClient.ListChangeList(String rootPath, EventHandler`1&lt;SvnListChangeListEventArgs&gt; changeListHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.ListChangeListStringSvnListChangeListArgsEventHandlerOfSvnListChangeListEventArgs">
            <summary>设置 SvnClient.ListChangeList(String rootPath, SvnListChangeListArgs args, EventHandler`1&lt;SvnListChangeListEventArgs&gt; changeListHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.ListMergesEligibleSvnTargetSvnTargetEventHandlerOfSvnMergesEligibleEventArgs">
            <summary>设置 SvnClient.ListMergesEligible(SvnTarget target, SvnTarget source, EventHandler`1&lt;SvnMergesEligibleEventArgs&gt; handler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.ListMergesEligibleSvnTargetSvnTargetSvnMergesEligibleArgsEventHandlerOfSvnMergesEligibleEventArgs">
            <summary>设置 SvnClient.ListMergesEligible(SvnTarget target, SvnTarget source, SvnMergesEligibleArgs args, EventHandler`1&lt;SvnMergesEligibleEventArgs&gt; handler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.ListMergesMergedSvnTargetSvnTargetEventHandlerOfSvnMergesMergedEventArgs">
            <summary>设置 SvnClient.ListMergesMerged(SvnTarget target, SvnTarget source, EventHandler`1&lt;SvnMergesMergedEventArgs&gt; handler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.ListMergesMergedSvnTargetSvnTargetSvnMergesMergedArgsEventHandlerOfSvnMergesMergedEventArgs">
            <summary>设置 SvnClient.ListMergesMerged(SvnTarget target, SvnTarget source, SvnMergesMergedArgs args, EventHandler`1&lt;SvnMergesMergedEventArgs&gt; handler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.ListSvnTargetEventHandlerOfSvnListEventArgs">
            <summary>设置 SvnClient.List(SvnTarget target, EventHandler`1&lt;SvnListEventArgs&gt; listHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.ListSvnTargetSvnListArgsEventHandlerOfSvnListEventArgs">
            <summary>设置 SvnClient.List(SvnTarget target, SvnListArgs args, EventHandler`1&lt;SvnListEventArgs&gt; listHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.LockICollectionOfStringString">
            <summary>设置 SvnClient.Lock(ICollection`1&lt;String&gt; targets, String comment) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.LockICollectionOfStringSvnLockArgs">
            <summary>设置 SvnClient.Lock(ICollection`1&lt;String&gt; targets, SvnLockArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.LockStringString">
            <summary>设置 SvnClient.Lock(String target, String comment) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.LockStringSvnLockArgs">
            <summary>设置 SvnClient.Lock(String target, SvnLockArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.LogICollectionOfStringSvnLogArgsEventHandlerOfSvnLogEventArgs">
            <summary>设置 SvnClient.Log(ICollection`1&lt;String&gt; targetPaths, SvnLogArgs args, EventHandler`1&lt;SvnLogEventArgs&gt; logHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.LogICollectionOfUriSvnLogArgsEventHandlerOfSvnLogEventArgs">
            <summary>设置 SvnClient.Log(ICollection`1&lt;Uri&gt; targets, SvnLogArgs args, EventHandler`1&lt;SvnLogEventArgs&gt; logHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.LogStringEventHandlerOfSvnLogEventArgs">
            <summary>设置 SvnClient.Log(String targetPath, EventHandler`1&lt;SvnLogEventArgs&gt; logHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.LogStringSvnLogArgsEventHandlerOfSvnLogEventArgs">
            <summary>设置 SvnClient.Log(String targetPath, SvnLogArgs args, EventHandler`1&lt;SvnLogEventArgs&gt; logHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.LogUriEventHandlerOfSvnLogEventArgs">
            <summary>设置 SvnClient.Log(Uri target, EventHandler`1&lt;SvnLogEventArgs&gt; logHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.LogUriSvnLogArgsEventHandlerOfSvnLogEventArgs">
            <summary>设置 SvnClient.Log(Uri target, SvnLogArgs args, EventHandler`1&lt;SvnLogEventArgs&gt; logHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.MergeStringSvnTargetSvnRevisionRange">
            <summary>设置 SvnClient.Merge(String targetPath, SvnTarget source, SvnRevisionRange mergeRange) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.MergeStringSvnTargetSvnRevisionRangeSvnMergeArgs">
            <summary>设置 SvnClient.Merge(String targetPath, SvnTarget source, SvnRevisionRange mergeRange, SvnMergeArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.MoveICollectionOfStringString">
            <summary>设置 SvnClient.Move(ICollection`1&lt;String&gt; sourcePaths, String toPath) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.MoveICollectionOfStringStringSvnMoveArgs">
            <summary>设置 SvnClient.Move(ICollection`1&lt;String&gt; sourcePaths, String toPath, SvnMoveArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.MoveStringString">
            <summary>设置 SvnClient.Move(String sourcePath, String toPath) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.MoveStringStringSvnMoveArgs">
            <summary>设置 SvnClient.Move(String sourcePath, String toPath, SvnMoveArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.NotifyAddEventHandlerOfSvnNotifyEventArgs">
            <summary>设置 SvnClient.add_Notify(EventHandler`1&lt;SvnNotifyEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.NotifyRaiseObjectSvnNotifyEventArgs">
            <summary>设置 SvnClient.raise_Notify(Object sender, SvnNotifyEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.NotifyRemoveEventHandlerOfSvnNotifyEventArgs">
            <summary>设置 SvnClient.remove_Notify(EventHandler`1&lt;SvnNotifyEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClient.OnCancel(SvnCancelEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.OnCommittedSvnCommittedEventArgs">
            <summary>设置 SvnClient.OnCommitted(SvnCommittedEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.OnCommittingSvnCommittingEventArgs">
            <summary>设置 SvnClient.OnCommitting(SvnCommittingEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.OnConflictSvnConflictEventArgs">
            <summary>设置 SvnClient.OnConflict(SvnConflictEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClient.OnNotify(SvnNotifyEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.OnProcessingSvnProcessingEventArgs">
            <summary>设置 SvnClient.OnProcessing(SvnProcessingEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClient.OnProgress(SvnProgressEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClient.OnSvnError(SvnErrorEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.PatchStringString">
            <summary>设置 SvnClient.Patch(String patchFile, String targetDir) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.PatchStringStringSvnPatchArgs">
            <summary>设置 SvnClient.Patch(String patchFile, String targetDir, SvnPatchArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.ProcessingAddEventHandlerOfSvnProcessingEventArgs">
            <summary>设置 SvnClient.add_Processing(EventHandler`1&lt;SvnProcessingEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.ProcessingRaiseObjectSvnProcessingEventArgs">
            <summary>设置 SvnClient.raise_Processing(Object sender, SvnProcessingEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.ProcessingRemoveEventHandlerOfSvnProcessingEventArgs">
            <summary>设置 SvnClient.remove_Processing(EventHandler`1&lt;SvnProcessingEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.ProgressAddEventHandlerOfSvnProgressEventArgs">
            <summary>设置 SvnClient.add_Progress(EventHandler`1&lt;SvnProgressEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.ProgressRaiseObjectSvnProgressEventArgs">
            <summary>设置 SvnClient.raise_Progress(Object sender, SvnProgressEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.ProgressRemoveEventHandlerOfSvnProgressEventArgs">
            <summary>设置 SvnClient.remove_Progress(EventHandler`1&lt;SvnProgressEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.PropertyListSvnTargetEventHandlerOfSvnPropertyListEventArgs">
            <summary>设置 SvnClient.PropertyList(SvnTarget target, EventHandler`1&lt;SvnPropertyListEventArgs&gt; listHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.PropertyListSvnTargetSvnPropertyListArgsEventHandlerOfSvnPropertyListEventArgs">
            <summary>设置 SvnClient.PropertyList(SvnTarget target, SvnPropertyListArgs args, EventHandler`1&lt;SvnPropertyListEventArgs&gt; listHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.ReintegrationMergeStringSvnTarget">
            <summary>设置 SvnClient.ReintegrationMerge(String targetPath, SvnTarget source) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.ReintegrationMergeStringSvnTargetSvnReintegrationMergeArgs">
            <summary>设置 SvnClient.ReintegrationMerge(String targetPath, SvnTarget source, SvnReintegrationMergeArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.RelocateStringUriUri">
            <summary>设置 SvnClient.Relocate(String path, Uri from, Uri to) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.RelocateStringUriUriSvnRelocateArgs">
            <summary>设置 SvnClient.Relocate(String path, Uri from, Uri to, SvnRelocateArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.RemoteCopySvnTargetUri">
            <summary>设置 SvnClient.RemoteCopy(SvnTarget source, Uri toUri) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.RemoteCopySvnTargetUriSvnCommitResultOut">
            <summary>设置 SvnClient.RemoteCopy(SvnTarget source, Uri toUri, SvnCommitResult&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.RemoteCopySvnTargetUriSvnCopyArgs">
            <summary>设置 SvnClient.RemoteCopy(SvnTarget source, Uri toUri, SvnCopyArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.RemoteCopySvnTargetUriSvnCopyArgsSvnCommitResultOut">
            <summary>设置 SvnClient.RemoteCopy(SvnTarget source, Uri toUri, SvnCopyArgs args, SvnCommitResult&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.RemoteCreateDirectoriesICollectionOfUriSvnCreateDirectoryArgs">
            <summary>设置 SvnClient.RemoteCreateDirectories(ICollection`1&lt;Uri&gt; uris, SvnCreateDirectoryArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.RemoteCreateDirectoriesICollectionOfUriSvnCreateDirectoryArgsSvnCommitResultOut">
            <summary>设置 SvnClient.RemoteCreateDirectories(ICollection`1&lt;Uri&gt; uris, SvnCreateDirectoryArgs args, SvnCommitResult&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.RemoteCreateDirectoryUri">
            <summary>设置 SvnClient.RemoteCreateDirectory(Uri uri) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.RemoteCreateDirectoryUriSvnCreateDirectoryArgs">
            <summary>设置 SvnClient.RemoteCreateDirectory(Uri uri, SvnCreateDirectoryArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.RemoteCreateDirectoryUriSvnCreateDirectoryArgsSvnCommitResultOut">
            <summary>设置 SvnClient.RemoteCreateDirectory(Uri uri, SvnCreateDirectoryArgs args, SvnCommitResult&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.RemoteDeleteICollectionOfUri">
            <summary>设置 SvnClient.RemoteDelete(ICollection`1&lt;Uri&gt; uris) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.RemoteDeleteICollectionOfUriSvnDeleteArgs">
            <summary>设置 SvnClient.RemoteDelete(ICollection`1&lt;Uri&gt; uris, SvnDeleteArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.RemoteDeleteICollectionOfUriSvnDeleteArgsSvnCommitResultOut">
            <summary>设置 SvnClient.RemoteDelete(ICollection`1&lt;Uri&gt; uris, SvnDeleteArgs args, SvnCommitResult&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.RemoteDeletePropertyUriString">
            <summary>设置 SvnClient.RemoteDeleteProperty(Uri target, String propertyName) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.RemoteDeletePropertyUriStringSvnSetPropertyArgs">
            <summary>设置 SvnClient.RemoteDeleteProperty(Uri target, String propertyName, SvnSetPropertyArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.RemoteDeleteUri">
            <summary>设置 SvnClient.RemoteDelete(Uri uri) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.RemoteDeleteUriSvnDeleteArgs">
            <summary>设置 SvnClient.RemoteDelete(Uri uri, SvnDeleteArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.RemoteDeleteUriSvnDeleteArgsSvnCommitResultOut">
            <summary>设置 SvnClient.RemoteDelete(Uri uri, SvnDeleteArgs args, SvnCommitResult&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.RemoteImportStringUri">
            <summary>设置 SvnClient.RemoteImport(String path, Uri target) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.RemoteImportStringUriSvnCommitResultOut">
            <summary>设置 SvnClient.RemoteImport(String path, Uri target, SvnCommitResult&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.RemoteImportStringUriSvnImportArgs">
            <summary>设置 SvnClient.RemoteImport(String path, Uri target, SvnImportArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.RemoteImportStringUriSvnImportArgsSvnCommitResultOut">
            <summary>设置 SvnClient.RemoteImport(String path, Uri target, SvnImportArgs args, SvnCommitResult&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.RemoteLockICollectionOfUriString">
            <summary>设置 SvnClient.RemoteLock(ICollection`1&lt;Uri&gt; targets, String comment) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.RemoteLockICollectionOfUriSvnLockArgs">
            <summary>设置 SvnClient.RemoteLock(ICollection`1&lt;Uri&gt; targets, SvnLockArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.RemoteLockUriString">
            <summary>设置 SvnClient.RemoteLock(Uri target, String comment) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.RemoteLockUriSvnLockArgs">
            <summary>设置 SvnClient.RemoteLock(Uri target, SvnLockArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.RemoteMoveICollectionOfUriUri">
            <summary>设置 SvnClient.RemoteMove(ICollection`1&lt;Uri&gt; sourceUris, Uri toUri) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.RemoteMoveICollectionOfUriUriSvnCommitResultOut">
            <summary>设置 SvnClient.RemoteMove(ICollection`1&lt;Uri&gt; sourceUris, Uri toUri, SvnCommitResult&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.RemoteMoveICollectionOfUriUriSvnMoveArgs">
            <summary>设置 SvnClient.RemoteMove(ICollection`1&lt;Uri&gt; sourceUris, Uri toUri, SvnMoveArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.RemoteMoveICollectionOfUriUriSvnMoveArgsSvnCommitResultOut">
            <summary>设置 SvnClient.RemoteMove(ICollection`1&lt;Uri&gt; sourceUris, Uri toUri, SvnMoveArgs args, SvnCommitResult&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.RemoteMoveUriUri">
            <summary>设置 SvnClient.RemoteMove(Uri sourceUri, Uri toUri) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.RemoteMoveUriUriSvnCommitResultOut">
            <summary>设置 SvnClient.RemoteMove(Uri sourceUri, Uri toUri, SvnCommitResult&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.RemoteMoveUriUriSvnMoveArgs">
            <summary>设置 SvnClient.RemoteMove(Uri sourceUri, Uri toUri, SvnMoveArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.RemoteMoveUriUriSvnMoveArgsSvnCommitResultOut">
            <summary>设置 SvnClient.RemoteMove(Uri sourceUri, Uri toUri, SvnMoveArgs args, SvnCommitResult&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.RemoteSetPropertyUriStringICollectionOfByte">
            <summary>设置 SvnClient.RemoteSetProperty(Uri target, String propertyName, ICollection`1&lt;Byte&gt; bytes) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.RemoteSetPropertyUriStringICollectionOfByteSvnSetPropertyArgs">
            <summary>设置 SvnClient.RemoteSetProperty(Uri target, String propertyName, ICollection`1&lt;Byte&gt; bytes, SvnSetPropertyArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.RemoteSetPropertyUriStringString">
            <summary>设置 SvnClient.RemoteSetProperty(Uri target, String propertyName, String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.RemoteSetPropertyUriStringStringSvnSetPropertyArgs">
            <summary>设置 SvnClient.RemoteSetProperty(Uri target, String propertyName, String value, SvnSetPropertyArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.RemoteUnlockICollectionOfUri">
            <summary>设置 SvnClient.RemoteUnlock(ICollection`1&lt;Uri&gt; targets) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.RemoteUnlockICollectionOfUriSvnUnlockArgs">
            <summary>设置 SvnClient.RemoteUnlock(ICollection`1&lt;Uri&gt; targets, SvnUnlockArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.RemoteUnlockUri">
            <summary>设置 SvnClient.RemoteUnlock(Uri target) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.RemoteUnlockUriSvnUnlockArgs">
            <summary>设置 SvnClient.RemoteUnlock(Uri target, SvnUnlockArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.RemoveFromChangeListICollectionOfString">
            <summary>设置 SvnClient.RemoveFromChangeList(ICollection`1&lt;String&gt; targets) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.RemoveFromChangeListICollectionOfStringSvnRemoveFromChangeListArgs">
            <summary>设置 SvnClient.RemoveFromChangeList(ICollection`1&lt;String&gt; targets, SvnRemoveFromChangeListArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.RemoveFromChangeListString">
            <summary>设置 SvnClient.RemoveFromChangeList(String target) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.RemoveFromChangeListStringSvnRemoveFromChangeListArgs">
            <summary>设置 SvnClient.RemoveFromChangeList(String target, SvnRemoveFromChangeListArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.ReplayRevisionsSvnTargetSvnRevisionRangeSvnDeltaEditor">
            <summary>设置 SvnClient.ReplayRevisions(SvnTarget target, SvnRevisionRange range, SvnDeltaEditor editor) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.ReplayRevisionsSvnTargetSvnRevisionRangeSvnDeltaEditorSvnReplayRevisionArgs">
            <summary>设置 SvnClient.ReplayRevisions(SvnTarget target, SvnRevisionRange range, SvnDeltaEditor editor, SvnReplayRevisionArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.RepositoryOperationUriSvnRepositoryOperationArgsSvnRepositoryOperationBuilder">
            <summary>设置 SvnClient.RepositoryOperation(Uri anchor, SvnRepositoryOperationArgs args, SvnRepositoryOperationBuilder builder) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.RepositoryOperationUriSvnRepositoryOperationArgsSvnRepositoryOperationBuilderSvnCommitResultOut">
            <summary>设置 SvnClient.RepositoryOperation(Uri anchor, SvnRepositoryOperationArgs args, SvnRepositoryOperationBuilder builder, SvnCommitResult&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.RepositoryOperationUriSvnRepositoryOperationBuilder">
            <summary>设置 SvnClient.RepositoryOperation(Uri anchor, SvnRepositoryOperationBuilder builder) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.RepositoryOperationUriSvnRepositoryOperationBuilderSvnCommitResultOut">
            <summary>设置 SvnClient.RepositoryOperation(Uri anchor, SvnRepositoryOperationBuilder builder, SvnCommitResult&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.ResolveStringSvnAccept">
            <summary>设置 SvnClient.Resolve(String path, SvnAccept choice) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.ResolveStringSvnAcceptSvnResolveArgs">
            <summary>设置 SvnClient.Resolve(String path, SvnAccept choice, SvnResolveArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.ResolvedString">
            <summary>设置 SvnClient.Resolved(String path) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.RevertICollectionOfString">
            <summary>设置 SvnClient.Revert(ICollection`1&lt;String&gt; paths) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.RevertICollectionOfStringSvnRevertArgs">
            <summary>设置 SvnClient.Revert(ICollection`1&lt;String&gt; paths, SvnRevertArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.RevertString">
            <summary>设置 SvnClient.Revert(String path) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.RevertStringSvnRevertArgs">
            <summary>设置 SvnClient.Revert(String path, SvnRevertArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.SetPropertyStringStringICollectionOfByte">
            <summary>设置 SvnClient.SetProperty(String target, String propertyName, ICollection`1&lt;Byte&gt; bytes) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.SetPropertyStringStringICollectionOfByteSvnSetPropertyArgs">
            <summary>设置 SvnClient.SetProperty(String target, String propertyName, ICollection`1&lt;Byte&gt; bytes, SvnSetPropertyArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.SetPropertyStringStringString">
            <summary>设置 SvnClient.SetProperty(String target, String propertyName, String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.SetPropertyStringStringStringSvnSetPropertyArgs">
            <summary>设置 SvnClient.SetProperty(String target, String propertyName, String value, SvnSetPropertyArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.SetPropertyUriStringICollectionOfByte">
            <summary>设置 SvnClient.SetProperty(Uri target, String propertyName, ICollection`1&lt;Byte&gt; bytes) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.SetPropertyUriStringICollectionOfByteSvnSetPropertyArgs">
            <summary>设置 SvnClient.SetProperty(Uri target, String propertyName, ICollection`1&lt;Byte&gt; bytes, SvnSetPropertyArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.SetPropertyUriStringString">
            <summary>设置 SvnClient.SetProperty(Uri target, String propertyName, String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.SetPropertyUriStringStringSvnSetPropertyArgs">
            <summary>设置 SvnClient.SetProperty(Uri target, String propertyName, String value, SvnSetPropertyArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.SetRevisionPropertySvnUriTargetStringICollectionOfByte">
            <summary>设置 SvnClient.SetRevisionProperty(SvnUriTarget target, String propertyName, ICollection`1&lt;Byte&gt; bytes) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.SetRevisionPropertySvnUriTargetStringString">
            <summary>设置 SvnClient.SetRevisionProperty(SvnUriTarget target, String propertyName, String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.SetRevisionPropertySvnUriTargetStringSvnSetRevisionPropertyArgsICollectionOfByte">
            <summary>设置 SvnClient.SetRevisionProperty(SvnUriTarget target, String propertyName, SvnSetRevisionPropertyArgs args, ICollection`1&lt;Byte&gt; bytes) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.SetRevisionPropertySvnUriTargetStringSvnSetRevisionPropertyArgsString">
            <summary>设置 SvnClient.SetRevisionProperty(SvnUriTarget target, String propertyName, SvnSetRevisionPropertyArgs args, String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.SetRevisionPropertyUriSvnRevisionStringICollectionOfByte">
            <summary>设置 SvnClient.SetRevisionProperty(Uri target, SvnRevision revision, String propertyName, ICollection`1&lt;Byte&gt; bytes) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.SetRevisionPropertyUriSvnRevisionStringICollectionOfByteSvnSetRevisionPropertyArgs">
            <summary>设置 SvnClient.SetRevisionProperty(Uri target, SvnRevision revision, String propertyName, ICollection`1&lt;Byte&gt; bytes, SvnSetRevisionPropertyArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.SetRevisionPropertyUriSvnRevisionStringString">
            <summary>设置 SvnClient.SetRevisionProperty(Uri target, SvnRevision revision, String propertyName, String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.SetRevisionPropertyUriSvnRevisionStringStringSvnSetRevisionPropertyArgs">
            <summary>设置 SvnClient.SetRevisionProperty(Uri target, SvnRevision revision, String propertyName, String value, SvnSetRevisionPropertyArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.StatusStringEventHandlerOfSvnStatusEventArgs">
            <summary>设置 SvnClient.Status(String path, EventHandler`1&lt;SvnStatusEventArgs&gt; statusHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.StatusStringSvnStatusArgsEventHandlerOfSvnStatusEventArgs">
            <summary>设置 SvnClient.Status(String path, SvnStatusArgs args, EventHandler`1&lt;SvnStatusEventArgs&gt; statusHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.SvnErrorAddEventHandlerOfSvnErrorEventArgs">
            <summary>设置 SvnClient.add_SvnError(EventHandler`1&lt;SvnErrorEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.SvnErrorRaiseObjectSvnErrorEventArgs">
            <summary>设置 SvnClient.raise_SvnError(Object sender, SvnErrorEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.SvnErrorRemoveEventHandlerOfSvnErrorEventArgs">
            <summary>设置 SvnClient.remove_SvnError(EventHandler`1&lt;SvnErrorEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.SwitchStringSvnUriTarget">
            <summary>设置 SvnClient.Switch(String path, SvnUriTarget target) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.SwitchStringSvnUriTargetSvnSwitchArgs">
            <summary>设置 SvnClient.Switch(String path, SvnUriTarget target, SvnSwitchArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.SwitchStringSvnUriTargetSvnSwitchArgsSvnUpdateResultOut">
            <summary>设置 SvnClient.Switch(String path, SvnUriTarget target, SvnSwitchArgs args, SvnUpdateResult&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.SwitchStringSvnUriTargetSvnUpdateResultOut">
            <summary>设置 SvnClient.Switch(String path, SvnUriTarget target, SvnUpdateResult&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.TryGetAllInheritedPropertiesStringSvnPropertyCollectionOut">
            <summary>设置 SvnClient.TryGetAllInheritedProperties(String path, SvnPropertyCollection&amp; properties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.TryGetInheritedPropertyStringStringStringOut">
            <summary>设置 SvnClient.TryGetInheritedProperty(String path, String propertyName, String&amp; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.TryGetPropertySvnTargetStringStringOut">
            <summary>设置 SvnClient.TryGetProperty(SvnTarget target, String propertyName, String&amp; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.TryGetRepositoryIdStringGuidOut">
            <summary>设置 SvnClient.TryGetRepositoryId(String path, Guid&amp; id) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.TryGetRepositoryIdUriGuidOut">
            <summary>设置 SvnClient.TryGetRepositoryId(Uri uri, Guid&amp; id) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.TryGetRepositoryStringUriOutGuidOut">
            <summary>设置 SvnClient.TryGetRepository(String path, Uri&amp; repositoryUrl, Guid&amp; id) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.TryGetRepositoryUriUriOutGuidOut">
            <summary>设置 SvnClient.TryGetRepository(Uri uri, Uri&amp; repositoryUrl, Guid&amp; id) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.UnlockICollectionOfString">
            <summary>设置 SvnClient.Unlock(ICollection`1&lt;String&gt; targets) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.UnlockICollectionOfStringSvnUnlockArgs">
            <summary>设置 SvnClient.Unlock(ICollection`1&lt;String&gt; targets, SvnUnlockArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.UnlockString">
            <summary>设置 SvnClient.Unlock(String target) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.UnlockStringSvnUnlockArgs">
            <summary>设置 SvnClient.Unlock(String target, SvnUnlockArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.UpdateICollectionOfString">
            <summary>设置 SvnClient.Update(ICollection`1&lt;String&gt; paths) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.UpdateICollectionOfStringSvnUpdateArgs">
            <summary>设置 SvnClient.Update(ICollection`1&lt;String&gt; paths, SvnUpdateArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.UpdateICollectionOfStringSvnUpdateArgsSvnUpdateResultOut">
            <summary>设置 SvnClient.Update(ICollection`1&lt;String&gt; paths, SvnUpdateArgs args, SvnUpdateResult&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.UpdateICollectionOfStringSvnUpdateResultOut">
            <summary>设置 SvnClient.Update(ICollection`1&lt;String&gt; paths, SvnUpdateResult&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.UpdateString">
            <summary>设置 SvnClient.Update(String path) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.UpdateStringSvnUpdateArgs">
            <summary>设置 SvnClient.Update(String path, SvnUpdateArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.UpdateStringSvnUpdateArgsSvnUpdateResultOut">
            <summary>设置 SvnClient.Update(String path, SvnUpdateArgs args, SvnUpdateResult&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.UpdateStringSvnUpdateResultOut">
            <summary>设置 SvnClient.Update(String path, SvnUpdateResult&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.UpgradeString">
            <summary>设置 SvnClient.Upgrade(String path) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.UpgradeStringSvnUpgradeArgs">
            <summary>设置 SvnClient.Upgrade(String path, SvnUpgradeArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.WriteSvnTargetStream">
            <summary>设置 SvnClient.Write(SvnTarget target, Stream output) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.WriteSvnTargetStreamSvnPropertyCollectionOut">
            <summary>设置 SvnClient.Write(SvnTarget target, Stream output, SvnPropertyCollection&amp; properties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.WriteSvnTargetStreamSvnWriteArgs">
            <summary>设置 SvnClient.Write(SvnTarget target, Stream output, SvnWriteArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances.WriteSvnTargetStreamSvnWriteArgsSvnPropertyCollectionOut">
            <summary>设置 SvnClient.Write(SvnTarget target, Stream output, SvnWriteArgs args, SvnPropertyCollection&amp; properties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClient.AllInstances._SvnClient">
            <summary>设置 SvnClient.~SvnClient() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnClientApiException">
            <summary>SharpSvn.SvnClientApiException 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientApiException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientApiException.#ctor(SharpSvn.SvnClientApiException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientApiException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientApiException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientApiException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientApiException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientApiException.Constructor">
            <summary>设置 SvnClientApiException.SvnClientApiException() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientApiException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 SvnClientApiException.SvnClientApiException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientApiException.ConstructorString">
            <summary>设置 SvnClientApiException.SvnClientApiException(String message) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientApiException.ConstructorStringException">
            <summary>设置 SvnClientApiException.SvnClientApiException(String message, Exception inner) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnClientApiException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnClientArgs">
            <summary>SharpSvn.SvnClientArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientArgs.#ctor(SharpSvn.SvnClientArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.AddExpectedErrorSvnErrorCategory">
            <summary>设置 SvnClientArgs.AddExpectedError(SvnErrorCategory errorCategory) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.AddExpectedErrorSvnErrorCategoryArray">
            <summary>设置 SvnClientArgs.AddExpectedError(SvnErrorCategory[] errorCategories) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.AddExpectedErrorSvnErrorCode">
            <summary>设置 SvnClientArgs.AddExpectedError(SvnErrorCode errorCode) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.AddExpectedErrorSvnErrorCodeArray">
            <summary>设置 SvnClientArgs.AddExpectedError(SvnErrorCode[] errorCodes) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.CancelAddEventHandlerOfSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.add_Cancel(EventHandler`1&lt;SvnCancelEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.CancelRaiseObjectSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.raise_Cancel(Object sender, SvnCancelEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.CancelRemoveEventHandlerOfSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.remove_Cancel(EventHandler`1&lt;SvnCancelEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.Constructor">
            <summary>设置 SvnClientArgs.SvnClientArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.HandleResultSvnClientContextSvnException">
            <summary>设置 SvnClientArgs.HandleResult(SvnClientContext client, SvnException error) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.HandleResultSvnClientContextSvnExceptionObject">
            <summary>设置 SvnClientArgs.HandleResult(SvnClientContext client, SvnException error, Object targets) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.IsLastInvocationCanceledGet">
            <summary>设置 SvnClientArgs.get_IsLastInvocationCanceled() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.LastExceptionGet">
            <summary>设置 SvnClientArgs.get_LastException() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.LastExceptionSetSvnException">
            <summary>设置 SvnClientArgs.set_LastException(SvnException value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.NotifyAddEventHandlerOfSvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.add_Notify(EventHandler`1&lt;SvnNotifyEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.NotifyRaiseObjectSvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.raise_Notify(Object sender, SvnNotifyEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.NotifyRemoveEventHandlerOfSvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.remove_Notify(EventHandler`1&lt;SvnNotifyEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.Prepare">
            <summary>设置 SvnClientArgs.Prepare() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.ProgressAddEventHandlerOfSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.add_Progress(EventHandler`1&lt;SvnProgressEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.ProgressRaiseObjectSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.raise_Progress(Object sender, SvnProgressEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.ProgressRemoveEventHandlerOfSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.remove_Progress(EventHandler`1&lt;SvnProgressEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.RaiseOnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.RaiseOnCancel(SvnCancelEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.RaiseOnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.RaiseOnNotify(SvnNotifyEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.RaiseOnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.RaiseOnProgress(SvnProgressEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.RaiseOnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.RaiseOnSvnError(SvnErrorEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.StaticConstructor">
            <summary>设置 SvnClientArgs.SvnClientArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.SvnErrorAddEventHandlerOfSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.add_SvnError(EventHandler`1&lt;SvnErrorEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.SvnErrorRaiseObjectSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.raise_SvnError(Object sender, SvnErrorEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.SvnErrorRemoveEventHandlerOfSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.remove_SvnError(EventHandler`1&lt;SvnErrorEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.ThrowOnCancelGet">
            <summary>设置 SvnClientArgs.get_ThrowOnCancel() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.ThrowOnCancelSetBoolean">
            <summary>设置 SvnClientArgs.set_ThrowOnCancel(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.ThrowOnErrorGet">
            <summary>设置 SvnClientArgs.get_ThrowOnError() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.ThrowOnErrorSetBoolean">
            <summary>设置 SvnClientArgs.set_ThrowOnError(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.ThrowOnWarningGet">
            <summary>设置 SvnClientArgs.get_ThrowOnWarning() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.ThrowOnWarningSetBoolean">
            <summary>设置 SvnClientArgs.set_ThrowOnWarning(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.WarningsGet">
            <summary>设置 SvnClientArgs.get_Warnings() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnClientArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.AllInstances.AddExpectedErrorSvnErrorCategory">
            <summary>设置 SvnClientArgs.AddExpectedError(SvnErrorCategory errorCategory) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.AllInstances.AddExpectedErrorSvnErrorCategoryArray">
            <summary>设置 SvnClientArgs.AddExpectedError(SvnErrorCategory[] errorCategories) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.AllInstances.AddExpectedErrorSvnErrorCode">
            <summary>设置 SvnClientArgs.AddExpectedError(SvnErrorCode errorCode) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.AllInstances.AddExpectedErrorSvnErrorCodeArray">
            <summary>设置 SvnClientArgs.AddExpectedError(SvnErrorCode[] errorCodes) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.AllInstances.CancelAddEventHandlerOfSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.add_Cancel(EventHandler`1&lt;SvnCancelEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.AllInstances.CancelRaiseObjectSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.raise_Cancel(Object sender, SvnCancelEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.AllInstances.CancelRemoveEventHandlerOfSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.remove_Cancel(EventHandler`1&lt;SvnCancelEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.AllInstances.HandleResultSvnClientContextSvnException">
            <summary>设置 SvnClientArgs.HandleResult(SvnClientContext client, SvnException error) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.AllInstances.HandleResultSvnClientContextSvnExceptionObject">
            <summary>设置 SvnClientArgs.HandleResult(SvnClientContext client, SvnException error, Object targets) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.AllInstances.IsLastInvocationCanceledGet">
            <summary>设置 SvnClientArgs.get_IsLastInvocationCanceled() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.AllInstances.LastExceptionGet">
            <summary>设置 SvnClientArgs.get_LastException() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.AllInstances.LastExceptionSetSvnException">
            <summary>设置 SvnClientArgs.set_LastException(SvnException value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.AllInstances.NotifyAddEventHandlerOfSvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.add_Notify(EventHandler`1&lt;SvnNotifyEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.AllInstances.NotifyRaiseObjectSvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.raise_Notify(Object sender, SvnNotifyEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.AllInstances.NotifyRemoveEventHandlerOfSvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.remove_Notify(EventHandler`1&lt;SvnNotifyEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.AllInstances.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.AllInstances.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.AllInstances.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.AllInstances.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.AllInstances.Prepare">
            <summary>设置 SvnClientArgs.Prepare() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.AllInstances.ProgressAddEventHandlerOfSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.add_Progress(EventHandler`1&lt;SvnProgressEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.AllInstances.ProgressRaiseObjectSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.raise_Progress(Object sender, SvnProgressEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.AllInstances.ProgressRemoveEventHandlerOfSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.remove_Progress(EventHandler`1&lt;SvnProgressEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.AllInstances.RaiseOnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.RaiseOnCancel(SvnCancelEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.AllInstances.RaiseOnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.RaiseOnNotify(SvnNotifyEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.AllInstances.RaiseOnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.RaiseOnProgress(SvnProgressEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.AllInstances.RaiseOnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.RaiseOnSvnError(SvnErrorEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.AllInstances.SvnErrorAddEventHandlerOfSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.add_SvnError(EventHandler`1&lt;SvnErrorEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.AllInstances.SvnErrorRaiseObjectSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.raise_SvnError(Object sender, SvnErrorEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.AllInstances.SvnErrorRemoveEventHandlerOfSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.remove_SvnError(EventHandler`1&lt;SvnErrorEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.AllInstances.ThrowOnCancelGet">
            <summary>设置 SvnClientArgs.get_ThrowOnCancel() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.AllInstances.ThrowOnCancelSetBoolean">
            <summary>设置 SvnClientArgs.set_ThrowOnCancel(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.AllInstances.ThrowOnErrorGet">
            <summary>设置 SvnClientArgs.get_ThrowOnError() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.AllInstances.ThrowOnErrorSetBoolean">
            <summary>设置 SvnClientArgs.set_ThrowOnError(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.AllInstances.ThrowOnWarningGet">
            <summary>设置 SvnClientArgs.get_ThrowOnWarning() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.AllInstances.ThrowOnWarningSetBoolean">
            <summary>设置 SvnClientArgs.set_ThrowOnWarning(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgs.AllInstances.WarningsGet">
            <summary>设置 SvnClientArgs.get_Warnings() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnClientArgsWithCommit">
            <summary>SharpSvn.SvnClientArgsWithCommit 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientArgsWithCommit.#ctor(SharpSvn.SvnClientArgsWithCommit)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientArgsWithCommit.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientArgsWithCommit.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgsWithCommit.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgsWithCommit.CommittedAddEventHandlerOfSvnCommittedEventArgs">
            <summary>设置 SvnClientArgsWithCommit.add_Committed(EventHandler`1&lt;SvnCommittedEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgsWithCommit.CommittedRaiseObjectSvnCommittedEventArgs">
            <summary>设置 SvnClientArgsWithCommit.raise_Committed(Object sender, SvnCommittedEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgsWithCommit.CommittedRemoveEventHandlerOfSvnCommittedEventArgs">
            <summary>设置 SvnClientArgsWithCommit.remove_Committed(EventHandler`1&lt;SvnCommittedEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgsWithCommit.CommittingAddEventHandlerOfSvnCommittingEventArgs">
            <summary>设置 SvnClientArgsWithCommit.add_Committing(EventHandler`1&lt;SvnCommittingEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgsWithCommit.CommittingRaiseObjectSvnCommittingEventArgs">
            <summary>设置 SvnClientArgsWithCommit.raise_Committing(Object sender, SvnCommittingEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgsWithCommit.CommittingRemoveEventHandlerOfSvnCommittingEventArgs">
            <summary>设置 SvnClientArgsWithCommit.remove_Committing(EventHandler`1&lt;SvnCommittingEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgsWithCommit.Constructor">
            <summary>设置 SvnClientArgsWithCommit.SvnClientArgsWithCommit() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgsWithCommit.LogMessageGet">
            <summary>设置 SvnClientArgsWithCommit.get_LogMessage() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgsWithCommit.LogMessageSetString">
            <summary>设置 SvnClientArgsWithCommit.set_LogMessage(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgsWithCommit.LogPropertiesGet">
            <summary>设置 SvnClientArgsWithCommit.get_LogProperties() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgsWithCommit.OnCommittedSvnCommittedEventArgs">
            <summary>设置 SvnClientArgsWithCommit.OnCommitted(SvnCommittedEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgsWithCommit.OnCommittingSvnCommittingEventArgs">
            <summary>设置 SvnClientArgsWithCommit.OnCommitting(SvnCommittingEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgsWithCommit.RaiseOnCommittedSvnCommittedEventArgs">
            <summary>设置 SvnClientArgsWithCommit.RaiseOnCommitted(SvnCommittedEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgsWithCommit.RaiseOnCommittingSvnCommittingEventArgs">
            <summary>设置 SvnClientArgsWithCommit.RaiseOnCommitting(SvnCommittingEventArgs e) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnClientArgsWithCommit.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgsWithCommit.AllInstances.CommittedAddEventHandlerOfSvnCommittedEventArgs">
            <summary>设置 SvnClientArgsWithCommit.add_Committed(EventHandler`1&lt;SvnCommittedEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgsWithCommit.AllInstances.CommittedRaiseObjectSvnCommittedEventArgs">
            <summary>设置 SvnClientArgsWithCommit.raise_Committed(Object sender, SvnCommittedEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgsWithCommit.AllInstances.CommittedRemoveEventHandlerOfSvnCommittedEventArgs">
            <summary>设置 SvnClientArgsWithCommit.remove_Committed(EventHandler`1&lt;SvnCommittedEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgsWithCommit.AllInstances.CommittingAddEventHandlerOfSvnCommittingEventArgs">
            <summary>设置 SvnClientArgsWithCommit.add_Committing(EventHandler`1&lt;SvnCommittingEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgsWithCommit.AllInstances.CommittingRaiseObjectSvnCommittingEventArgs">
            <summary>设置 SvnClientArgsWithCommit.raise_Committing(Object sender, SvnCommittingEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgsWithCommit.AllInstances.CommittingRemoveEventHandlerOfSvnCommittingEventArgs">
            <summary>设置 SvnClientArgsWithCommit.remove_Committing(EventHandler`1&lt;SvnCommittingEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgsWithCommit.AllInstances.LogMessageGet">
            <summary>设置 SvnClientArgsWithCommit.get_LogMessage() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgsWithCommit.AllInstances.LogMessageSetString">
            <summary>设置 SvnClientArgsWithCommit.set_LogMessage(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgsWithCommit.AllInstances.LogPropertiesGet">
            <summary>设置 SvnClientArgsWithCommit.get_LogProperties() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgsWithCommit.AllInstances.OnCommittedSvnCommittedEventArgs">
            <summary>设置 SvnClientArgsWithCommit.OnCommitted(SvnCommittedEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgsWithCommit.AllInstances.OnCommittingSvnCommittingEventArgs">
            <summary>设置 SvnClientArgsWithCommit.OnCommitting(SvnCommittingEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgsWithCommit.AllInstances.RaiseOnCommittedSvnCommittedEventArgs">
            <summary>设置 SvnClientArgsWithCommit.RaiseOnCommitted(SvnCommittedEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgsWithCommit.AllInstances.RaiseOnCommittingSvnCommittingEventArgs">
            <summary>设置 SvnClientArgsWithCommit.RaiseOnCommitting(SvnCommittingEventArgs e) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnClientArgsWithConflict">
            <summary>SharpSvn.SvnClientArgsWithConflict 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientArgsWithConflict.#ctor(SharpSvn.SvnClientArgsWithConflict)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientArgsWithConflict.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientArgsWithConflict.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgsWithConflict.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgsWithConflict.ConflictAddEventHandlerOfSvnConflictEventArgs">
            <summary>设置 SvnClientArgsWithConflict.add_Conflict(EventHandler`1&lt;SvnConflictEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgsWithConflict.ConflictRaiseObjectSvnConflictEventArgs">
            <summary>设置 SvnClientArgsWithConflict.raise_Conflict(Object sender, SvnConflictEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgsWithConflict.ConflictRemoveEventHandlerOfSvnConflictEventArgs">
            <summary>设置 SvnClientArgsWithConflict.remove_Conflict(EventHandler`1&lt;SvnConflictEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgsWithConflict.Constructor">
            <summary>设置 SvnClientArgsWithConflict.SvnClientArgsWithConflict() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgsWithConflict.OnConflictSvnConflictEventArgs">
            <summary>设置 SvnClientArgsWithConflict.OnConflict(SvnConflictEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgsWithConflict.RaiseConflictSvnConflictEventArgs">
            <summary>设置 SvnClientArgsWithConflict.RaiseConflict(SvnConflictEventArgs e) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnClientArgsWithConflict.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgsWithConflict.AllInstances.ConflictAddEventHandlerOfSvnConflictEventArgs">
            <summary>设置 SvnClientArgsWithConflict.add_Conflict(EventHandler`1&lt;SvnConflictEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgsWithConflict.AllInstances.ConflictRaiseObjectSvnConflictEventArgs">
            <summary>设置 SvnClientArgsWithConflict.raise_Conflict(Object sender, SvnConflictEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgsWithConflict.AllInstances.ConflictRemoveEventHandlerOfSvnConflictEventArgs">
            <summary>设置 SvnClientArgsWithConflict.remove_Conflict(EventHandler`1&lt;SvnConflictEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgsWithConflict.AllInstances.OnConflictSvnConflictEventArgs">
            <summary>设置 SvnClientArgsWithConflict.OnConflict(SvnConflictEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientArgsWithConflict.AllInstances.RaiseConflictSvnConflictEventArgs">
            <summary>设置 SvnClientArgsWithConflict.RaiseConflict(SvnConflictEventArgs e) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnClientBinaryFileException">
            <summary>SharpSvn.SvnClientBinaryFileException 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientBinaryFileException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientBinaryFileException.#ctor(SharpSvn.SvnClientBinaryFileException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientBinaryFileException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientBinaryFileException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientBinaryFileException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientBinaryFileException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientBinaryFileException.Constructor">
            <summary>设置 SvnClientBinaryFileException.SvnClientBinaryFileException() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientBinaryFileException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 SvnClientBinaryFileException.SvnClientBinaryFileException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientBinaryFileException.ConstructorString">
            <summary>设置 SvnClientBinaryFileException.SvnClientBinaryFileException(String message) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientBinaryFileException.ConstructorStringException">
            <summary>设置 SvnClientBinaryFileException.SvnClientBinaryFileException(String message, Exception inner) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnClientBinaryFileException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnClientConfiguration">
            <summary>SharpSvn.SvnClientConfiguration 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientConfiguration.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientConfiguration.#ctor(SharpSvn.SvnClientConfiguration)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientConfiguration.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientConfiguration.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientConfiguration.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientConfiguration.ConstructorSvnClient">
            <summary>设置 SvnClientConfiguration.SvnClientConfiguration(SvnClient client) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientConfiguration.EnableSharpPlinkGet">
            <summary>设置 SvnClientConfiguration.get_EnableSharpPlink() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientConfiguration.EnableSharpPlinkSetBoolean">
            <summary>设置 SvnClientConfiguration.set_EnableSharpPlink(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientConfiguration.GlobalIgnorePatternGet">
            <summary>设置 SvnClientConfiguration.get_GlobalIgnorePattern() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientConfiguration.KeepAllExtensionsOnConflictGet">
            <summary>设置 SvnClientConfiguration.get_KeepAllExtensionsOnConflict() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientConfiguration.KeepAllExtensionsOnConflictSetSvnOverride">
            <summary>设置 SvnClientConfiguration.set_KeepAllExtensionsOnConflict(SvnOverride value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientConfiguration.LoadSvnMimeTypesGet">
            <summary>设置 SvnClientConfiguration.get_LoadSvnMimeTypes() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientConfiguration.LoadSvnMimeTypesSetBoolean">
            <summary>设置 SvnClientConfiguration.set_LoadSvnMimeTypes(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientConfiguration.LogMessageRequiredGet">
            <summary>设置 SvnClientConfiguration.get_LogMessageRequired() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientConfiguration.LogMessageRequiredSetBoolean">
            <summary>设置 SvnClientConfiguration.set_LogMessageRequired(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientConfiguration.SetOptionStringStringStringString">
            <summary>设置 SvnClientConfiguration.SetOption(String file, String section, String option, String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientConfiguration.UseSubversionDiffGet">
            <summary>设置 SvnClientConfiguration.get_UseSubversionDiff() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientConfiguration.UseSubversionDiffSetBoolean">
            <summary>设置 SvnClientConfiguration.set_UseSubversionDiff(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnClientConfiguration.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientConfiguration.AllInstances.EnableSharpPlinkGet">
            <summary>设置 SvnClientConfiguration.get_EnableSharpPlink() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientConfiguration.AllInstances.EnableSharpPlinkSetBoolean">
            <summary>设置 SvnClientConfiguration.set_EnableSharpPlink(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientConfiguration.AllInstances.GlobalIgnorePatternGet">
            <summary>设置 SvnClientConfiguration.get_GlobalIgnorePattern() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientConfiguration.AllInstances.KeepAllExtensionsOnConflictGet">
            <summary>设置 SvnClientConfiguration.get_KeepAllExtensionsOnConflict() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientConfiguration.AllInstances.KeepAllExtensionsOnConflictSetSvnOverride">
            <summary>设置 SvnClientConfiguration.set_KeepAllExtensionsOnConflict(SvnOverride value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientConfiguration.AllInstances.LoadSvnMimeTypesGet">
            <summary>设置 SvnClientConfiguration.get_LoadSvnMimeTypes() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientConfiguration.AllInstances.LoadSvnMimeTypesSetBoolean">
            <summary>设置 SvnClientConfiguration.set_LoadSvnMimeTypes(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientConfiguration.AllInstances.LogMessageRequiredGet">
            <summary>设置 SvnClientConfiguration.get_LogMessageRequired() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientConfiguration.AllInstances.LogMessageRequiredSetBoolean">
            <summary>设置 SvnClientConfiguration.set_LogMessageRequired(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientConfiguration.AllInstances.SetOptionStringStringStringString">
            <summary>设置 SvnClientConfiguration.SetOption(String file, String section, String option, String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientConfiguration.AllInstances.UseSubversionDiffGet">
            <summary>设置 SvnClientConfiguration.get_UseSubversionDiff() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientConfiguration.AllInstances.UseSubversionDiffSetBoolean">
            <summary>设置 SvnClientConfiguration.set_UseSubversionDiff(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnClientConfigurationException">
            <summary>SharpSvn.SvnClientConfigurationException 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientConfigurationException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientConfigurationException.#ctor(SharpSvn.SvnClientConfigurationException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientConfigurationException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientConfigurationException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientConfigurationException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientConfigurationException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientConfigurationException.Constructor">
            <summary>设置 SvnClientConfigurationException.SvnClientConfigurationException() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientConfigurationException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 SvnClientConfigurationException.SvnClientConfigurationException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientConfigurationException.ConstructorString">
            <summary>设置 SvnClientConfigurationException.SvnClientConfigurationException(String message) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientConfigurationException.ConstructorStringException">
            <summary>设置 SvnClientConfigurationException.SvnClientConfigurationException(String message, Exception inner) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnClientConfigurationException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnClientContext">
            <summary>SharpSvn.SvnClientContext 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientContext.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientContext.#ctor(SharpSvn.SvnClientContext)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientContext.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientContext.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientContext.Bind(System.ComponentModel.IComponent)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientContext.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientContext.ApplyCustomRemoteConfig">
            <summary>设置 SvnClientContext.ApplyCustomRemoteConfig() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientContext.ApplyCustomSsh">
            <summary>设置 SvnClientContext.ApplyCustomSsh() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientContext.ApplyMimeTypes">
            <summary>设置 SvnClientContext.ApplyMimeTypes() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientContext.ApplyOverrideFlags">
            <summary>设置 SvnClientContext.ApplyOverrideFlags() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientContext.ApplyUserDiffConfig">
            <summary>设置 SvnClientContext.ApplyUserDiffConfig() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientContext.AuthenticationGet">
            <summary>设置 SvnClientContext.get_Authentication() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientContext.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientContext.CurrentCommandArgsGet">
            <summary>设置 SvnClientContext.get_CurrentCommandArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientContext.Dispose">
            <summary>设置 SvnClientContext.Dispose() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientContext.DisposeBoolean">
            <summary>设置 SvnClientContext.Dispose(Boolean ) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientContext.DisposedAddEventHandler">
            <summary>设置 SvnClientContext.add_Disposed(EventHandler e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientContext.DisposedRemoveEventHandler">
            <summary>设置 SvnClientContext.remove_Disposed(EventHandler e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientContext.HandleClientCancelSvnCancelEventArgs">
            <summary>设置 SvnClientContext.HandleClientCancel(SvnCancelEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientContext.HandleClientCommittedSvnCommittedEventArgs">
            <summary>设置 SvnClientContext.HandleClientCommitted(SvnCommittedEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientContext.HandleClientCommittingSvnCommittingEventArgs">
            <summary>设置 SvnClientContext.HandleClientCommitting(SvnCommittingEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientContext.HandleClientErrorSvnErrorEventArgs">
            <summary>设置 SvnClientContext.HandleClientError(SvnErrorEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientContext.HandleClientNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientContext.HandleClientNotify(SvnNotifyEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientContext.HandleClientProgressSvnProgressEventArgs">
            <summary>设置 SvnClientContext.HandleClientProgress(SvnProgressEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientContext.HandleProcessingSvnProcessingEventArgs">
            <summary>设置 SvnClientContext.HandleProcessing(SvnProcessingEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientContext.IsCommandRunningGet">
            <summary>设置 SvnClientContext.get_IsCommandRunning() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientContext.IsDisposedGet">
            <summary>设置 SvnClientContext.get_IsDisposed() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientContext.KeepSessionGet">
            <summary>设置 SvnClientContext.get_KeepSession() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientContext.KeepSessionSetBoolean">
            <summary>设置 SvnClientContext.set_KeepSession(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientContext.LoadConfigurationDefault">
            <summary>设置 SvnClientContext.LoadConfigurationDefault() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientContext.LoadConfigurationString">
            <summary>设置 SvnClientContext.LoadConfiguration(String path) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientContext.LoadConfigurationStringBoolean">
            <summary>设置 SvnClientContext.LoadConfiguration(String path, Boolean ensurePath) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientContext.LoadTortoiseSvnHooks">
            <summary>设置 SvnClientContext.LoadTortoiseSvnHooks() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientContext.MergeConfigurationString">
            <summary>设置 SvnClientContext.MergeConfiguration(String path) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientContext.NopEventHandlerObjectEventArgs">
            <summary>设置 SvnClientContext.NopEventHandler(Object sender, EventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientContext.PlinkPathGet">
            <summary>设置 SvnClientContext.get_PlinkPath() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientContext.SetConfigurationOptionStringStringStringString">
            <summary>设置 SvnClientContext.SetConfigurationOption(String file, String section, String option, String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientContext.SiteGet">
            <summary>设置 SvnClientContext.get_Site() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientContext.SiteSetISite">
            <summary>设置 SvnClientContext.set_Site(ISite value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientContext.StaticConstructor">
            <summary>设置 SvnClientContext.SvnClientContext() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientContext.UseDefaultConfiguration">
            <summary>设置 SvnClientContext.UseDefaultConfiguration() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientContext._SvnClientContext">
            <summary>设置 SvnClientContext.~SvnClientContext() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnClientContext.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientContext.AllInstances.ApplyCustomRemoteConfig">
            <summary>设置 SvnClientContext.ApplyCustomRemoteConfig() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientContext.AllInstances.ApplyCustomSsh">
            <summary>设置 SvnClientContext.ApplyCustomSsh() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientContext.AllInstances.ApplyMimeTypes">
            <summary>设置 SvnClientContext.ApplyMimeTypes() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientContext.AllInstances.ApplyOverrideFlags">
            <summary>设置 SvnClientContext.ApplyOverrideFlags() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientContext.AllInstances.ApplyUserDiffConfig">
            <summary>设置 SvnClientContext.ApplyUserDiffConfig() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientContext.AllInstances.AuthenticationGet">
            <summary>设置 SvnClientContext.get_Authentication() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientContext.AllInstances.CurrentCommandArgsGet">
            <summary>设置 SvnClientContext.get_CurrentCommandArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientContext.AllInstances.Dispose">
            <summary>设置 SvnClientContext.Dispose() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientContext.AllInstances.DisposeBoolean">
            <summary>设置 SvnClientContext.Dispose(Boolean ) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientContext.AllInstances.DisposedAddEventHandler">
            <summary>设置 SvnClientContext.add_Disposed(EventHandler e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientContext.AllInstances.DisposedRemoveEventHandler">
            <summary>设置 SvnClientContext.remove_Disposed(EventHandler e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientContext.AllInstances.HandleClientCancelSvnCancelEventArgs">
            <summary>设置 SvnClientContext.HandleClientCancel(SvnCancelEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientContext.AllInstances.HandleClientCommittedSvnCommittedEventArgs">
            <summary>设置 SvnClientContext.HandleClientCommitted(SvnCommittedEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientContext.AllInstances.HandleClientCommittingSvnCommittingEventArgs">
            <summary>设置 SvnClientContext.HandleClientCommitting(SvnCommittingEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientContext.AllInstances.HandleClientErrorSvnErrorEventArgs">
            <summary>设置 SvnClientContext.HandleClientError(SvnErrorEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientContext.AllInstances.HandleClientNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientContext.HandleClientNotify(SvnNotifyEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientContext.AllInstances.HandleClientProgressSvnProgressEventArgs">
            <summary>设置 SvnClientContext.HandleClientProgress(SvnProgressEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientContext.AllInstances.HandleProcessingSvnProcessingEventArgs">
            <summary>设置 SvnClientContext.HandleProcessing(SvnProcessingEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientContext.AllInstances.IsCommandRunningGet">
            <summary>设置 SvnClientContext.get_IsCommandRunning() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientContext.AllInstances.IsDisposedGet">
            <summary>设置 SvnClientContext.get_IsDisposed() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientContext.AllInstances.KeepSessionGet">
            <summary>设置 SvnClientContext.get_KeepSession() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientContext.AllInstances.KeepSessionSetBoolean">
            <summary>设置 SvnClientContext.set_KeepSession(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientContext.AllInstances.LoadConfigurationDefault">
            <summary>设置 SvnClientContext.LoadConfigurationDefault() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientContext.AllInstances.LoadConfigurationString">
            <summary>设置 SvnClientContext.LoadConfiguration(String path) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientContext.AllInstances.LoadConfigurationStringBoolean">
            <summary>设置 SvnClientContext.LoadConfiguration(String path, Boolean ensurePath) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientContext.AllInstances.LoadTortoiseSvnHooks">
            <summary>设置 SvnClientContext.LoadTortoiseSvnHooks() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientContext.AllInstances.MergeConfigurationString">
            <summary>设置 SvnClientContext.MergeConfiguration(String path) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientContext.AllInstances.NopEventHandlerObjectEventArgs">
            <summary>设置 SvnClientContext.NopEventHandler(Object sender, EventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientContext.AllInstances.SetConfigurationOptionStringStringStringString">
            <summary>设置 SvnClientContext.SetConfigurationOption(String file, String section, String option, String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientContext.AllInstances.SiteGet">
            <summary>设置 SvnClientContext.get_Site() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientContext.AllInstances.SiteSetISite">
            <summary>设置 SvnClientContext.set_Site(ISite value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientContext.AllInstances.UseDefaultConfiguration">
            <summary>设置 SvnClientContext.UseDefaultConfiguration() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientContext.AllInstances._SvnClientContext">
            <summary>设置 SvnClientContext.~SvnClientContext() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnClientException">
            <summary>SharpSvn.SvnClientException 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientException.#ctor(SharpSvn.SvnClientException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientException.Constructor">
            <summary>设置 SvnClientException.SvnClientException() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 SvnClientException.SvnClientException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientException.ConstructorString">
            <summary>设置 SvnClientException.SvnClientException(String message) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientException.ConstructorStringException">
            <summary>设置 SvnClientException.SvnClientException(String message, Exception inner) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnClientException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnClientHookException">
            <summary>SharpSvn.SvnClientHookException 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientHookException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientHookException.#ctor(SharpSvn.SvnClientHookException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientHookException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientHookException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientHookException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientHookException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientHookException.Constructor">
            <summary>设置 SvnClientHookException.SvnClientHookException() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientHookException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 SvnClientHookException.SvnClientHookException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientHookException.ConstructorString">
            <summary>设置 SvnClientHookException.SvnClientHookException(String message) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientHookException.ConstructorStringException">
            <summary>设置 SvnClientHookException.SvnClientHookException(String message, Exception inner) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnClientHookException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnClientMissingLockTokenException">
            <summary>SharpSvn.SvnClientMissingLockTokenException 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientMissingLockTokenException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientMissingLockTokenException.#ctor(SharpSvn.SvnClientMissingLockTokenException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientMissingLockTokenException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientMissingLockTokenException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientMissingLockTokenException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientMissingLockTokenException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientMissingLockTokenException.Constructor">
            <summary>设置 SvnClientMissingLockTokenException.SvnClientMissingLockTokenException() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientMissingLockTokenException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 SvnClientMissingLockTokenException.SvnClientMissingLockTokenException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientMissingLockTokenException.ConstructorString">
            <summary>设置 SvnClientMissingLockTokenException.SvnClientMissingLockTokenException(String message) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientMissingLockTokenException.ConstructorStringException">
            <summary>设置 SvnClientMissingLockTokenException.SvnClientMissingLockTokenException(String message, Exception inner) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnClientMissingLockTokenException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnClientNoVersionedParentException">
            <summary>SharpSvn.SvnClientNoVersionedParentException 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientNoVersionedParentException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientNoVersionedParentException.#ctor(SharpSvn.SvnClientNoVersionedParentException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientNoVersionedParentException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientNoVersionedParentException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientNoVersionedParentException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientNoVersionedParentException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientNoVersionedParentException.Constructor">
            <summary>设置 SvnClientNoVersionedParentException.SvnClientNoVersionedParentException() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientNoVersionedParentException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 SvnClientNoVersionedParentException.SvnClientNoVersionedParentException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientNoVersionedParentException.ConstructorString">
            <summary>设置 SvnClientNoVersionedParentException.SvnClientNoVersionedParentException(String message) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientNoVersionedParentException.ConstructorStringException">
            <summary>设置 SvnClientNoVersionedParentException.SvnClientNoVersionedParentException(String message, Exception inner) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnClientNoVersionedParentException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnClientNoVersionedPathException">
            <summary>SharpSvn.SvnClientNoVersionedPathException 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientNoVersionedPathException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientNoVersionedPathException.#ctor(SharpSvn.SvnClientNoVersionedPathException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientNoVersionedPathException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientNoVersionedPathException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientNoVersionedPathException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientNoVersionedPathException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientNoVersionedPathException.Constructor">
            <summary>设置 SvnClientNoVersionedPathException.SvnClientNoVersionedPathException() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientNoVersionedPathException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 SvnClientNoVersionedPathException.SvnClientNoVersionedPathException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientNoVersionedPathException.ConstructorString">
            <summary>设置 SvnClientNoVersionedPathException.SvnClientNoVersionedPathException(String message) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientNoVersionedPathException.ConstructorStringException">
            <summary>设置 SvnClientNoVersionedPathException.SvnClientNoVersionedPathException(String message, Exception inner) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnClientNoVersionedPathException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnClientNodeKindException">
            <summary>SharpSvn.SvnClientNodeKindException 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientNodeKindException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientNodeKindException.#ctor(SharpSvn.SvnClientNodeKindException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientNodeKindException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientNodeKindException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientNodeKindException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientNodeKindException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientNodeKindException.Constructor">
            <summary>设置 SvnClientNodeKindException.SvnClientNodeKindException() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientNodeKindException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 SvnClientNodeKindException.SvnClientNodeKindException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientNodeKindException.ConstructorString">
            <summary>设置 SvnClientNodeKindException.SvnClientNodeKindException(String message) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientNodeKindException.ConstructorStringException">
            <summary>设置 SvnClientNodeKindException.SvnClientNodeKindException(String message, Exception inner) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnClientNodeKindException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnClientNotReadyToMergeException">
            <summary>SharpSvn.SvnClientNotReadyToMergeException 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientNotReadyToMergeException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientNotReadyToMergeException.#ctor(SharpSvn.SvnClientNotReadyToMergeException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientNotReadyToMergeException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientNotReadyToMergeException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientNotReadyToMergeException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientNotReadyToMergeException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientNotReadyToMergeException.Constructor">
            <summary>设置 SvnClientNotReadyToMergeException.SvnClientNotReadyToMergeException() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientNotReadyToMergeException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 SvnClientNotReadyToMergeException.SvnClientNotReadyToMergeException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientNotReadyToMergeException.ConstructorString">
            <summary>设置 SvnClientNotReadyToMergeException.SvnClientNotReadyToMergeException(String message) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientNotReadyToMergeException.ConstructorStringException">
            <summary>设置 SvnClientNotReadyToMergeException.SvnClientNotReadyToMergeException(String message, Exception inner) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnClientNotReadyToMergeException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnClientReporter">
            <summary>SharpSvn.SvnClientReporter 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientReporter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientReporter.#ctor(SharpSvn.SvnClientReporter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientReporter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientReporter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientReporter.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientReporter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientReporter.ConstructorSvnClientArgsStringBuilder">
            <summary>设置 SvnClientReporter.SvnClientReporter(SvnClientArgs clientArgs, StringBuilder sb) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientReporter.ConstructorSvnClientArgsStringBuilderIFormatProvider">
            <summary>设置 SvnClientReporter.SvnClientReporter(SvnClientArgs clientArgs, StringBuilder sb, IFormatProvider formatProvider) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientReporter.ConstructorSvnClientArgsTextWriter">
            <summary>设置 SvnClientReporter.SvnClientReporter(SvnClientArgs clientArgs, TextWriter to) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientReporter.ConstructorSvnClientStringBuilder">
            <summary>设置 SvnClientReporter.SvnClientReporter(SvnClient client, StringBuilder sb) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientReporter.ConstructorSvnClientStringBuilderIFormatProvider">
            <summary>设置 SvnClientReporter.SvnClientReporter(SvnClient client, StringBuilder sb, IFormatProvider formatProvider) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientReporter.ConstructorSvnClientTextWriter">
            <summary>设置 SvnClientReporter.SvnClientReporter(SvnClient client, TextWriter to) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientReporter.CurrentCommandTypeGet">
            <summary>设置 SvnClientReporter.get_CurrentCommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientReporter.Dispose">
            <summary>设置 SvnClientReporter.Dispose() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientReporter.DisposeBoolean">
            <summary>设置 SvnClientReporter.Dispose(Boolean ) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientReporter.HandleNotifyObjectSvnNotifyEventArgs">
            <summary>设置 SvnClientReporter.HandleNotify(Object sender, SvnNotifyEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientReporter.HandleProcessingObjectSvnProcessingEventArgs">
            <summary>设置 SvnClientReporter.HandleProcessing(Object sender, SvnProcessingEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientReporter.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientReporter.OnNotify(SvnNotifyEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientReporter.OnProcessingSvnProcessingEventArgs">
            <summary>设置 SvnClientReporter.OnProcessing(SvnProcessingEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientReporter.SuppressFinalLineGet">
            <summary>设置 SvnClientReporter.get_SuppressFinalLine() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientReporter.SuppressFinalLineSetBoolean">
            <summary>设置 SvnClientReporter.set_SuppressFinalLine(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientReporter.WriteLineString">
            <summary>设置 SvnClientReporter.WriteLine(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientReporter.WriteProgressString">
            <summary>设置 SvnClientReporter.WriteProgress(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientReporter.WriteString">
            <summary>设置 SvnClientReporter.Write(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientReporter._SvnClientReporter">
            <summary>设置 SvnClientReporter.~SvnClientReporter() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnClientReporter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientReporter.AllInstances.CurrentCommandTypeGet">
            <summary>设置 SvnClientReporter.get_CurrentCommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientReporter.AllInstances.Dispose">
            <summary>设置 SvnClientReporter.Dispose() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientReporter.AllInstances.DisposeBoolean">
            <summary>设置 SvnClientReporter.Dispose(Boolean ) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientReporter.AllInstances.HandleNotifyObjectSvnNotifyEventArgs">
            <summary>设置 SvnClientReporter.HandleNotify(Object sender, SvnNotifyEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientReporter.AllInstances.HandleProcessingObjectSvnProcessingEventArgs">
            <summary>设置 SvnClientReporter.HandleProcessing(Object sender, SvnProcessingEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientReporter.AllInstances.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientReporter.OnNotify(SvnNotifyEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientReporter.AllInstances.OnProcessingSvnProcessingEventArgs">
            <summary>设置 SvnClientReporter.OnProcessing(SvnProcessingEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientReporter.AllInstances.SuppressFinalLineGet">
            <summary>设置 SvnClientReporter.get_SuppressFinalLine() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientReporter.AllInstances.SuppressFinalLineSetBoolean">
            <summary>设置 SvnClientReporter.set_SuppressFinalLine(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientReporter.AllInstances.WriteLineString">
            <summary>设置 SvnClientReporter.WriteLine(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientReporter.AllInstances.WriteProgressString">
            <summary>设置 SvnClientReporter.WriteProgress(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientReporter.AllInstances.WriteString">
            <summary>设置 SvnClientReporter.Write(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientReporter.AllInstances._SvnClientReporter">
            <summary>设置 SvnClientReporter.~SvnClientReporter() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnClientUnrelatedResourcesException">
            <summary>SharpSvn.SvnClientUnrelatedResourcesException 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientUnrelatedResourcesException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientUnrelatedResourcesException.#ctor(SharpSvn.SvnClientUnrelatedResourcesException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientUnrelatedResourcesException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientUnrelatedResourcesException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnClientUnrelatedResourcesException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientUnrelatedResourcesException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientUnrelatedResourcesException.Constructor">
            <summary>设置 SvnClientUnrelatedResourcesException.SvnClientUnrelatedResourcesException() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientUnrelatedResourcesException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 SvnClientUnrelatedResourcesException.SvnClientUnrelatedResourcesException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientUnrelatedResourcesException.ConstructorString">
            <summary>设置 SvnClientUnrelatedResourcesException.SvnClientUnrelatedResourcesException(String message) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnClientUnrelatedResourcesException.ConstructorStringException">
            <summary>设置 SvnClientUnrelatedResourcesException.SvnClientUnrelatedResourcesException(String message, Exception inner) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnClientUnrelatedResourcesException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnCommandLineArgumentCollection">
            <summary>SharpSvn.SvnCommandLineArgumentCollection 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnCommandLineArgumentCollection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnCommandLineArgumentCollection.#ctor(SharpSvn.SvnCommandLineArgumentCollection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnCommandLineArgumentCollection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnCommandLineArgumentCollection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnCommandLineArgumentCollection.Bind(System.Collections.ICollection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnCommandLineArgumentCollection.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnCommandLineArgumentCollection.Bind(System.Collections.IList)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnCommandLineArgumentCollection.Bind(System.Collections.Generic.ICollection{System.String})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnCommandLineArgumentCollection.Bind(System.Collections.Generic.IEnumerable{System.String})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnCommandLineArgumentCollection.Bind(System.Collections.Generic.IList{System.String})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnCommandLineArgumentCollection.Bind(System.Collections.Generic.IReadOnlyCollection{System.String})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnCommandLineArgumentCollection.Bind(System.Collections.Generic.IReadOnlyList{System.String})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommandLineArgumentCollection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommandLineArgumentCollection.Constructor">
            <summary>设置 SvnCommandLineArgumentCollection.SvnCommandLineArgumentCollection() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnCommandLineArgumentCollection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnCommandResult">
            <summary>SharpSvn.SvnCommandResult 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnCommandResult.#ctor(SharpSvn.SvnCommandResult)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnCommandResult.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnCommandResult.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommandResult.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommandResult.Constructor">
            <summary>设置 SvnCommandResult.SvnCommandResult() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnCommandResult.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnCommitArgs">
            <summary>SharpSvn.SvnCommitArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnCommitArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnCommitArgs.#ctor(SharpSvn.SvnCommitArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnCommitArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnCommitArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommitArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommitArgs.ChangeListsGet">
            <summary>设置 SvnCommitArgs.get_ChangeLists() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommitArgs.CommandTypeGet">
            <summary>设置 SvnCommitArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommitArgs.Constructor">
            <summary>设置 SvnCommitArgs.SvnCommitArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommitArgs.DepthGet">
            <summary>设置 SvnCommitArgs.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommitArgs.DepthSetSvnDepth">
            <summary>设置 SvnCommitArgs.set_Depth(SvnDepth value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommitArgs.IncludeDirectoryExternalsGet">
            <summary>设置 SvnCommitArgs.get_IncludeDirectoryExternals() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommitArgs.IncludeDirectoryExternalsSetBoolean">
            <summary>设置 SvnCommitArgs.set_IncludeDirectoryExternals(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommitArgs.IncludeFileExternalsGet">
            <summary>设置 SvnCommitArgs.get_IncludeFileExternals() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommitArgs.IncludeFileExternalsSetBoolean">
            <summary>设置 SvnCommitArgs.set_IncludeFileExternals(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommitArgs.KeepChangeListsGet">
            <summary>设置 SvnCommitArgs.get_KeepChangeLists() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommitArgs.KeepChangeListsSetBoolean">
            <summary>设置 SvnCommitArgs.set_KeepChangeLists(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommitArgs.KeepLocksGet">
            <summary>设置 SvnCommitArgs.get_KeepLocks() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommitArgs.KeepLocksSetBoolean">
            <summary>设置 SvnCommitArgs.set_KeepLocks(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommitArgs.RunTortoiseHooksGet">
            <summary>设置 SvnCommitArgs.get_RunTortoiseHooks() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommitArgs.RunTortoiseHooksSetBoolean">
            <summary>设置 SvnCommitArgs.set_RunTortoiseHooks(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnCommitArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommitArgs.AllInstances.ChangeListsGet">
            <summary>设置 SvnCommitArgs.get_ChangeLists() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommitArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnCommitArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommitArgs.AllInstances.DepthGet">
            <summary>设置 SvnCommitArgs.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommitArgs.AllInstances.DepthSetSvnDepth">
            <summary>设置 SvnCommitArgs.set_Depth(SvnDepth value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommitArgs.AllInstances.IncludeDirectoryExternalsGet">
            <summary>设置 SvnCommitArgs.get_IncludeDirectoryExternals() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommitArgs.AllInstances.IncludeDirectoryExternalsSetBoolean">
            <summary>设置 SvnCommitArgs.set_IncludeDirectoryExternals(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommitArgs.AllInstances.IncludeFileExternalsGet">
            <summary>设置 SvnCommitArgs.get_IncludeFileExternals() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommitArgs.AllInstances.IncludeFileExternalsSetBoolean">
            <summary>设置 SvnCommitArgs.set_IncludeFileExternals(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommitArgs.AllInstances.KeepChangeListsGet">
            <summary>设置 SvnCommitArgs.get_KeepChangeLists() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommitArgs.AllInstances.KeepChangeListsSetBoolean">
            <summary>设置 SvnCommitArgs.set_KeepChangeLists(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommitArgs.AllInstances.KeepLocksGet">
            <summary>设置 SvnCommitArgs.get_KeepLocks() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommitArgs.AllInstances.KeepLocksSetBoolean">
            <summary>设置 SvnCommitArgs.set_KeepLocks(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommitArgs.AllInstances.RunTortoiseHooksGet">
            <summary>设置 SvnCommitArgs.get_RunTortoiseHooks() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommitArgs.AllInstances.RunTortoiseHooksSetBoolean">
            <summary>设置 SvnCommitArgs.set_RunTortoiseHooks(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnCommitItem">
            <summary>SharpSvn.SvnCommitItem 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnCommitItem.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnCommitItem.#ctor(SharpSvn.SvnCommitItem)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnCommitItem.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnCommitItem.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommitItem.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommitItem.CommitTypeGet">
            <summary>设置 SvnCommitItem.get_CommitType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommitItem.CopyFromRevisionGet">
            <summary>设置 SvnCommitItem.get_CopyFromRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommitItem.CopyFromUriGet">
            <summary>设置 SvnCommitItem.get_CopyFromUri() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommitItem.Detach">
            <summary>设置 SvnCommitItem.Detach() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommitItem.DetachBoolean">
            <summary>设置 SvnCommitItem.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommitItem.FullPathGet">
            <summary>设置 SvnCommitItem.get_FullPath() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommitItem.GetHashCode">
            <summary>设置 SvnCommitItem.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommitItem.MovedFromGet">
            <summary>设置 SvnCommitItem.get_MovedFrom() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommitItem.NodeKindGet">
            <summary>设置 SvnCommitItem.get_NodeKind() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommitItem.PathGet">
            <summary>设置 SvnCommitItem.get_Path() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommitItem.RevisionGet">
            <summary>设置 SvnCommitItem.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommitItem.UriGet">
            <summary>设置 SvnCommitItem.get_Uri() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnCommitItem.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommitItem.AllInstances.CommitTypeGet">
            <summary>设置 SvnCommitItem.get_CommitType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommitItem.AllInstances.CopyFromRevisionGet">
            <summary>设置 SvnCommitItem.get_CopyFromRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommitItem.AllInstances.CopyFromUriGet">
            <summary>设置 SvnCommitItem.get_CopyFromUri() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommitItem.AllInstances.Detach">
            <summary>设置 SvnCommitItem.Detach() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommitItem.AllInstances.DetachBoolean">
            <summary>设置 SvnCommitItem.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommitItem.AllInstances.FullPathGet">
            <summary>设置 SvnCommitItem.get_FullPath() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommitItem.AllInstances.GetHashCode01">
            <summary>设置 SvnCommitItem.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommitItem.AllInstances.MovedFromGet">
            <summary>设置 SvnCommitItem.get_MovedFrom() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommitItem.AllInstances.NodeKindGet">
            <summary>设置 SvnCommitItem.get_NodeKind() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommitItem.AllInstances.PathGet">
            <summary>设置 SvnCommitItem.get_Path() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommitItem.AllInstances.RevisionGet">
            <summary>设置 SvnCommitItem.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommitItem.AllInstances.UriGet">
            <summary>设置 SvnCommitItem.get_Uri() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnCommitResult">
            <summary>SharpSvn.SvnCommitResult 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnCommitResult.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnCommitResult.#ctor(SharpSvn.SvnCommitResult)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnCommitResult.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnCommitResult.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommitResult.AuthorGet">
            <summary>设置 SvnCommitResult.get_Author() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommitResult.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommitResult.GetHashCode">
            <summary>设置 SvnCommitResult.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommitResult.PostCommitErrorGet">
            <summary>设置 SvnCommitResult.get_PostCommitError() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommitResult.RepositoryRootGet">
            <summary>设置 SvnCommitResult.get_RepositoryRoot() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommitResult.RevisionGet">
            <summary>设置 SvnCommitResult.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommitResult.TimeGet">
            <summary>设置 SvnCommitResult.get_Time() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnCommitResult.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommitResult.AllInstances.AuthorGet">
            <summary>设置 SvnCommitResult.get_Author() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommitResult.AllInstances.GetHashCode01">
            <summary>设置 SvnCommitResult.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommitResult.AllInstances.PostCommitErrorGet">
            <summary>设置 SvnCommitResult.get_PostCommitError() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommitResult.AllInstances.RepositoryRootGet">
            <summary>设置 SvnCommitResult.get_RepositoryRoot() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommitResult.AllInstances.RevisionGet">
            <summary>设置 SvnCommitResult.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommitResult.AllInstances.TimeGet">
            <summary>设置 SvnCommitResult.get_Time() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnCommittedEventArgs">
            <summary>SharpSvn.SvnCommittedEventArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnCommittedEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnCommittedEventArgs.#ctor(SharpSvn.SvnCommittedEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnCommittedEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnCommittedEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommittedEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnCommittedEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnCommittingEventArgs">
            <summary>SharpSvn.SvnCommittingEventArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnCommittingEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnCommittingEventArgs.#ctor(SharpSvn.SvnCommittingEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnCommittingEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnCommittingEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommittingEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommittingEventArgs.CancelGet">
            <summary>设置 SvnCommittingEventArgs.get_Cancel() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommittingEventArgs.CancelSetBoolean">
            <summary>设置 SvnCommittingEventArgs.set_Cancel(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommittingEventArgs.CurrentCommandTypeGet">
            <summary>设置 SvnCommittingEventArgs.get_CurrentCommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommittingEventArgs.DetachBoolean">
            <summary>设置 SvnCommittingEventArgs.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommittingEventArgs.ItemsGet">
            <summary>设置 SvnCommittingEventArgs.get_Items() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommittingEventArgs.LogMessageGet">
            <summary>设置 SvnCommittingEventArgs.get_LogMessage() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommittingEventArgs.LogMessageSetString">
            <summary>设置 SvnCommittingEventArgs.set_LogMessage(String value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnCommittingEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommittingEventArgs.AllInstances.CancelGet">
            <summary>设置 SvnCommittingEventArgs.get_Cancel() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommittingEventArgs.AllInstances.CancelSetBoolean">
            <summary>设置 SvnCommittingEventArgs.set_Cancel(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommittingEventArgs.AllInstances.CurrentCommandTypeGet">
            <summary>设置 SvnCommittingEventArgs.get_CurrentCommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommittingEventArgs.AllInstances.DetachBoolean">
            <summary>设置 SvnCommittingEventArgs.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommittingEventArgs.AllInstances.ItemsGet">
            <summary>设置 SvnCommittingEventArgs.get_Items() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommittingEventArgs.AllInstances.LogMessageGet">
            <summary>设置 SvnCommittingEventArgs.get_LogMessage() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCommittingEventArgs.AllInstances.LogMessageSetString">
            <summary>设置 SvnCommittingEventArgs.set_LogMessage(String value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnConfigNames">
            <summary>SharpSvn.SvnConfigNames 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnConfigNames.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnConfigNames.#ctor(SharpSvn.SvnConfigNames)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnConfigNames.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnConfigNames.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConfigNames.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConfigNames.Constructor">
            <summary>设置 SvnConfigNames.SvnConfigNames() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConfigNames.StaticConstructor">
            <summary>设置 SvnConfigNames.SvnConfigNames() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnConfigNames.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnConflictData">
            <summary>SharpSvn.SvnConflictData 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnConflictData.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnConflictData.#ctor(SharpSvn.SvnConflictData)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnConflictData.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnConflictData.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictData.BaseFileGet">
            <summary>设置 SvnConflictData.get_BaseFile() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictData.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictData.ConflictActionGet">
            <summary>设置 SvnConflictData.get_ConflictAction() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictData.ConflictReasonGet">
            <summary>设置 SvnConflictData.get_ConflictReason() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictData.ConflictTypeGet">
            <summary>设置 SvnConflictData.get_ConflictType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictData.Detach">
            <summary>设置 SvnConflictData.Detach() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictData.DetachBoolean">
            <summary>设置 SvnConflictData.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictData.FullPathGet">
            <summary>设置 SvnConflictData.get_FullPath() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictData.IsBinaryGet">
            <summary>设置 SvnConflictData.get_IsBinary() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictData.LeftSourceGet">
            <summary>设置 SvnConflictData.get_LeftSource() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictData.MergedFileGet">
            <summary>设置 SvnConflictData.get_MergedFile() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictData.MergedFileSetString">
            <summary>设置 SvnConflictData.set_MergedFile(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictData.MimeTypeGet">
            <summary>设置 SvnConflictData.get_MimeType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictData.MyFileGet">
            <summary>设置 SvnConflictData.get_MyFile() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictData.NameGet">
            <summary>设置 SvnConflictData.get_Name() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictData.NodeKindGet">
            <summary>设置 SvnConflictData.get_NodeKind() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictData.OperationGet">
            <summary>设置 SvnConflictData.get_Operation() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictData.PropertyNameGet">
            <summary>设置 SvnConflictData.get_PropertyName() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictData.RightSourceGet">
            <summary>设置 SvnConflictData.get_RightSource() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictData.TheirFileGet">
            <summary>设置 SvnConflictData.get_TheirFile() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnConflictData.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictData.AllInstances.BaseFileGet">
            <summary>设置 SvnConflictData.get_BaseFile() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictData.AllInstances.ConflictActionGet">
            <summary>设置 SvnConflictData.get_ConflictAction() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictData.AllInstances.ConflictReasonGet">
            <summary>设置 SvnConflictData.get_ConflictReason() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictData.AllInstances.ConflictTypeGet">
            <summary>设置 SvnConflictData.get_ConflictType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictData.AllInstances.Detach">
            <summary>设置 SvnConflictData.Detach() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictData.AllInstances.DetachBoolean">
            <summary>设置 SvnConflictData.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictData.AllInstances.FullPathGet">
            <summary>设置 SvnConflictData.get_FullPath() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictData.AllInstances.IsBinaryGet">
            <summary>设置 SvnConflictData.get_IsBinary() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictData.AllInstances.LeftSourceGet">
            <summary>设置 SvnConflictData.get_LeftSource() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictData.AllInstances.MergedFileGet">
            <summary>设置 SvnConflictData.get_MergedFile() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictData.AllInstances.MergedFileSetString">
            <summary>设置 SvnConflictData.set_MergedFile(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictData.AllInstances.MimeTypeGet">
            <summary>设置 SvnConflictData.get_MimeType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictData.AllInstances.MyFileGet">
            <summary>设置 SvnConflictData.get_MyFile() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictData.AllInstances.NameGet">
            <summary>设置 SvnConflictData.get_Name() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictData.AllInstances.NodeKindGet">
            <summary>设置 SvnConflictData.get_NodeKind() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictData.AllInstances.OperationGet">
            <summary>设置 SvnConflictData.get_Operation() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictData.AllInstances.PropertyNameGet">
            <summary>设置 SvnConflictData.get_PropertyName() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictData.AllInstances.RightSourceGet">
            <summary>设置 SvnConflictData.get_RightSource() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictData.AllInstances.TheirFileGet">
            <summary>设置 SvnConflictData.get_TheirFile() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnConflictEventArgs">
            <summary>SharpSvn.SvnConflictEventArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnConflictEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnConflictEventArgs.#ctor(SharpSvn.SvnConflictEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnConflictEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnConflictEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictEventArgs.BaseFileGet">
            <summary>设置 SvnConflictEventArgs.get_BaseFile() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictEventArgs.ChoiceGet">
            <summary>设置 SvnConflictEventArgs.get_Choice() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictEventArgs.ChoiceSetSvnAccept">
            <summary>设置 SvnConflictEventArgs.set_Choice(SvnAccept value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictEventArgs.ConflictActionGet">
            <summary>设置 SvnConflictEventArgs.get_ConflictAction() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictEventArgs.ConflictGet">
            <summary>设置 SvnConflictEventArgs.get_Conflict() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictEventArgs.ConflictReasonGet">
            <summary>设置 SvnConflictEventArgs.get_ConflictReason() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictEventArgs.ConflictTypeGet">
            <summary>设置 SvnConflictEventArgs.get_ConflictType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictEventArgs.DetachBoolean">
            <summary>设置 SvnConflictEventArgs.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictEventArgs.IsBinaryGet">
            <summary>设置 SvnConflictEventArgs.get_IsBinary() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictEventArgs.MergedFileGet">
            <summary>设置 SvnConflictEventArgs.get_MergedFile() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictEventArgs.MergedFileSetString">
            <summary>设置 SvnConflictEventArgs.set_MergedFile(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictEventArgs.MimeTypeGet">
            <summary>设置 SvnConflictEventArgs.get_MimeType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictEventArgs.MyFileGet">
            <summary>设置 SvnConflictEventArgs.get_MyFile() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictEventArgs.NodeKindGet">
            <summary>设置 SvnConflictEventArgs.get_NodeKind() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictEventArgs.PathGet">
            <summary>设置 SvnConflictEventArgs.get_Path() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictEventArgs.PropertyNameGet">
            <summary>设置 SvnConflictEventArgs.get_PropertyName() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictEventArgs.TheirFileGet">
            <summary>设置 SvnConflictEventArgs.get_TheirFile() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnConflictEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictEventArgs.AllInstances.BaseFileGet">
            <summary>设置 SvnConflictEventArgs.get_BaseFile() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictEventArgs.AllInstances.ChoiceGet">
            <summary>设置 SvnConflictEventArgs.get_Choice() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictEventArgs.AllInstances.ChoiceSetSvnAccept">
            <summary>设置 SvnConflictEventArgs.set_Choice(SvnAccept value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictEventArgs.AllInstances.ConflictActionGet">
            <summary>设置 SvnConflictEventArgs.get_ConflictAction() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictEventArgs.AllInstances.ConflictGet">
            <summary>设置 SvnConflictEventArgs.get_Conflict() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictEventArgs.AllInstances.ConflictReasonGet">
            <summary>设置 SvnConflictEventArgs.get_ConflictReason() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictEventArgs.AllInstances.ConflictTypeGet">
            <summary>设置 SvnConflictEventArgs.get_ConflictType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictEventArgs.AllInstances.DetachBoolean">
            <summary>设置 SvnConflictEventArgs.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictEventArgs.AllInstances.IsBinaryGet">
            <summary>设置 SvnConflictEventArgs.get_IsBinary() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictEventArgs.AllInstances.MergedFileGet">
            <summary>设置 SvnConflictEventArgs.get_MergedFile() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictEventArgs.AllInstances.MergedFileSetString">
            <summary>设置 SvnConflictEventArgs.set_MergedFile(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictEventArgs.AllInstances.MimeTypeGet">
            <summary>设置 SvnConflictEventArgs.get_MimeType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictEventArgs.AllInstances.MyFileGet">
            <summary>设置 SvnConflictEventArgs.get_MyFile() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictEventArgs.AllInstances.NodeKindGet">
            <summary>设置 SvnConflictEventArgs.get_NodeKind() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictEventArgs.AllInstances.PathGet">
            <summary>设置 SvnConflictEventArgs.get_Path() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictEventArgs.AllInstances.PropertyNameGet">
            <summary>设置 SvnConflictEventArgs.get_PropertyName() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictEventArgs.AllInstances.TheirFileGet">
            <summary>设置 SvnConflictEventArgs.get_TheirFile() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnConflictSource">
            <summary>SharpSvn.SvnConflictSource 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnConflictSource.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnConflictSource.#ctor(SharpSvn.SvnConflictSource)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnConflictSource.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnConflictSource.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnConflictSource.Bind(SharpSvn.ISvnOrigin)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictSource.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictSource.Detach">
            <summary>设置 SvnConflictSource.Detach() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictSource.DetachBoolean">
            <summary>设置 SvnConflictSource.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictSource.ImplicitOpSvnConflictSourceSvnUriTarget">
            <summary>设置 SvnConflictSource.op_Implicit(SvnConflictSource value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictSource.NodeKindGet">
            <summary>设置 SvnConflictSource.get_NodeKind() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictSource.RawTargetGet">
            <summary>设置 SvnConflictSource.get_RawTarget() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictSource.RepositoryPathGet">
            <summary>设置 SvnConflictSource.get_RepositoryPath() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictSource.RepositoryRootGet">
            <summary>设置 SvnConflictSource.get_RepositoryRoot() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictSource.RevisionGet">
            <summary>设置 SvnConflictSource.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictSource.TargetGet">
            <summary>设置 SvnConflictSource.get_Target() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictSource.UriGet">
            <summary>设置 SvnConflictSource.get_Uri() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnConflictSource.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictSource.AllInstances.Detach">
            <summary>设置 SvnConflictSource.Detach() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictSource.AllInstances.DetachBoolean">
            <summary>设置 SvnConflictSource.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictSource.AllInstances.NodeKindGet">
            <summary>设置 SvnConflictSource.get_NodeKind() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictSource.AllInstances.RawTargetGet">
            <summary>设置 SvnConflictSource.get_RawTarget() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictSource.AllInstances.RepositoryPathGet">
            <summary>设置 SvnConflictSource.get_RepositoryPath() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictSource.AllInstances.RepositoryRootGet">
            <summary>设置 SvnConflictSource.get_RepositoryRoot() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictSource.AllInstances.RevisionGet">
            <summary>设置 SvnConflictSource.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictSource.AllInstances.TargetGet">
            <summary>设置 SvnConflictSource.get_Target() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnConflictSource.AllInstances.UriGet">
            <summary>设置 SvnConflictSource.get_Uri() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnCopyArgs">
            <summary>SharpSvn.SvnCopyArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnCopyArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnCopyArgs.#ctor(SharpSvn.SvnCopyArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnCopyArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnCopyArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCopyArgs.AlwaysCopyAsChildGet">
            <summary>设置 SvnCopyArgs.get_AlwaysCopyAsChild() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCopyArgs.AlwaysCopyAsChildSetBoolean">
            <summary>设置 SvnCopyArgs.set_AlwaysCopyAsChild(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCopyArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCopyArgs.CommandTypeGet">
            <summary>设置 SvnCopyArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCopyArgs.Constructor">
            <summary>设置 SvnCopyArgs.SvnCopyArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCopyArgs.CreateParentsGet">
            <summary>设置 SvnCopyArgs.get_CreateParents() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCopyArgs.CreateParentsSetBoolean">
            <summary>设置 SvnCopyArgs.set_CreateParents(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCopyArgs.IgnoreExternalsGet">
            <summary>设置 SvnCopyArgs.get_IgnoreExternals() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCopyArgs.IgnoreExternalsSetBoolean">
            <summary>设置 SvnCopyArgs.set_IgnoreExternals(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCopyArgs.MakeParentsGet">
            <summary>设置 SvnCopyArgs.get_MakeParents() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCopyArgs.MakeParentsSetBoolean">
            <summary>设置 SvnCopyArgs.set_MakeParents(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCopyArgs.RevisionGet">
            <summary>设置 SvnCopyArgs.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCopyArgs.RevisionSetSvnRevision">
            <summary>设置 SvnCopyArgs.set_Revision(SvnRevision value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnCopyArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCopyArgs.AllInstances.AlwaysCopyAsChildGet">
            <summary>设置 SvnCopyArgs.get_AlwaysCopyAsChild() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCopyArgs.AllInstances.AlwaysCopyAsChildSetBoolean">
            <summary>设置 SvnCopyArgs.set_AlwaysCopyAsChild(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCopyArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnCopyArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCopyArgs.AllInstances.CreateParentsGet">
            <summary>设置 SvnCopyArgs.get_CreateParents() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCopyArgs.AllInstances.CreateParentsSetBoolean">
            <summary>设置 SvnCopyArgs.set_CreateParents(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCopyArgs.AllInstances.IgnoreExternalsGet">
            <summary>设置 SvnCopyArgs.get_IgnoreExternals() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCopyArgs.AllInstances.IgnoreExternalsSetBoolean">
            <summary>设置 SvnCopyArgs.set_IgnoreExternals(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCopyArgs.AllInstances.MakeParentsGet">
            <summary>设置 SvnCopyArgs.get_MakeParents() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCopyArgs.AllInstances.MakeParentsSetBoolean">
            <summary>设置 SvnCopyArgs.set_MakeParents(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCopyArgs.AllInstances.RevisionGet">
            <summary>设置 SvnCopyArgs.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCopyArgs.AllInstances.RevisionSetSvnRevision">
            <summary>设置 SvnCopyArgs.set_Revision(SvnRevision value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnCreateDirectoryArgs">
            <summary>SharpSvn.SvnCreateDirectoryArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnCreateDirectoryArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnCreateDirectoryArgs.#ctor(SharpSvn.SvnCreateDirectoryArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnCreateDirectoryArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnCreateDirectoryArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCreateDirectoryArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCreateDirectoryArgs.CommandTypeGet">
            <summary>设置 SvnCreateDirectoryArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCreateDirectoryArgs.Constructor">
            <summary>设置 SvnCreateDirectoryArgs.SvnCreateDirectoryArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCreateDirectoryArgs.CreateParentsGet">
            <summary>设置 SvnCreateDirectoryArgs.get_CreateParents() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCreateDirectoryArgs.CreateParentsSetBoolean">
            <summary>设置 SvnCreateDirectoryArgs.set_CreateParents(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCreateDirectoryArgs.MakeParentsGet">
            <summary>设置 SvnCreateDirectoryArgs.get_MakeParents() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCreateDirectoryArgs.MakeParentsSetBoolean">
            <summary>设置 SvnCreateDirectoryArgs.set_MakeParents(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnCreateDirectoryArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCreateDirectoryArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnCreateDirectoryArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCreateDirectoryArgs.AllInstances.CreateParentsGet">
            <summary>设置 SvnCreateDirectoryArgs.get_CreateParents() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCreateDirectoryArgs.AllInstances.CreateParentsSetBoolean">
            <summary>设置 SvnCreateDirectoryArgs.set_CreateParents(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCreateDirectoryArgs.AllInstances.MakeParentsGet">
            <summary>设置 SvnCreateDirectoryArgs.get_MakeParents() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCreateDirectoryArgs.AllInstances.MakeParentsSetBoolean">
            <summary>设置 SvnCreateDirectoryArgs.set_MakeParents(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnCreateRepositoryArgs">
            <summary>SharpSvn.SvnCreateRepositoryArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnCreateRepositoryArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnCreateRepositoryArgs.#ctor(SharpSvn.SvnCreateRepositoryArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnCreateRepositoryArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnCreateRepositoryArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCreateRepositoryArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCreateRepositoryArgs.BerkeleyDBKeepTransactionLogsGet">
            <summary>设置 SvnCreateRepositoryArgs.get_BerkeleyDBKeepTransactionLogs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCreateRepositoryArgs.BerkeleyDBKeepTransactionLogsSetBoolean">
            <summary>设置 SvnCreateRepositoryArgs.set_BerkeleyDBKeepTransactionLogs(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCreateRepositoryArgs.BerkeleyDBNoFSyncAtCommitGet">
            <summary>设置 SvnCreateRepositoryArgs.get_BerkeleyDBNoFSyncAtCommit() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCreateRepositoryArgs.BerkeleyDBNoFSyncAtCommitSetBoolean">
            <summary>设置 SvnCreateRepositoryArgs.set_BerkeleyDBNoFSyncAtCommit(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCreateRepositoryArgs.CommandTypeGet">
            <summary>设置 SvnCreateRepositoryArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCreateRepositoryArgs.Constructor">
            <summary>设置 SvnCreateRepositoryArgs.SvnCreateRepositoryArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCreateRepositoryArgs.RepositoryCompatibilityGet">
            <summary>设置 SvnCreateRepositoryArgs.get_RepositoryCompatibility() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCreateRepositoryArgs.RepositoryCompatibilitySetSvnRepositoryCompatibility">
            <summary>设置 SvnCreateRepositoryArgs.set_RepositoryCompatibility(SvnRepositoryCompatibility value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCreateRepositoryArgs.RepositoryTypeGet">
            <summary>设置 SvnCreateRepositoryArgs.get_RepositoryType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCreateRepositoryArgs.RepositoryTypeSetSvnRepositoryFileSystem">
            <summary>设置 SvnCreateRepositoryArgs.set_RepositoryType(SvnRepositoryFileSystem value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCreateRepositoryArgs.RepositoryUuidGet">
            <summary>设置 SvnCreateRepositoryArgs.get_RepositoryUuid() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCreateRepositoryArgs.RepositoryUuidSetNullableOfGuid">
            <summary>设置 SvnCreateRepositoryArgs.set_RepositoryUuid(Nullable`1&lt;Guid&gt; value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnCreateRepositoryArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCreateRepositoryArgs.AllInstances.BerkeleyDBKeepTransactionLogsGet">
            <summary>设置 SvnCreateRepositoryArgs.get_BerkeleyDBKeepTransactionLogs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCreateRepositoryArgs.AllInstances.BerkeleyDBKeepTransactionLogsSetBoolean">
            <summary>设置 SvnCreateRepositoryArgs.set_BerkeleyDBKeepTransactionLogs(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCreateRepositoryArgs.AllInstances.BerkeleyDBNoFSyncAtCommitGet">
            <summary>设置 SvnCreateRepositoryArgs.get_BerkeleyDBNoFSyncAtCommit() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCreateRepositoryArgs.AllInstances.BerkeleyDBNoFSyncAtCommitSetBoolean">
            <summary>设置 SvnCreateRepositoryArgs.set_BerkeleyDBNoFSyncAtCommit(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCreateRepositoryArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnCreateRepositoryArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCreateRepositoryArgs.AllInstances.RepositoryCompatibilityGet">
            <summary>设置 SvnCreateRepositoryArgs.get_RepositoryCompatibility() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCreateRepositoryArgs.AllInstances.RepositoryCompatibilitySetSvnRepositoryCompatibility">
            <summary>设置 SvnCreateRepositoryArgs.set_RepositoryCompatibility(SvnRepositoryCompatibility value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCreateRepositoryArgs.AllInstances.RepositoryTypeGet">
            <summary>设置 SvnCreateRepositoryArgs.get_RepositoryType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCreateRepositoryArgs.AllInstances.RepositoryTypeSetSvnRepositoryFileSystem">
            <summary>设置 SvnCreateRepositoryArgs.set_RepositoryType(SvnRepositoryFileSystem value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCreateRepositoryArgs.AllInstances.RepositoryUuidGet">
            <summary>设置 SvnCreateRepositoryArgs.get_RepositoryUuid() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCreateRepositoryArgs.AllInstances.RepositoryUuidSetNullableOfGuid">
            <summary>设置 SvnCreateRepositoryArgs.set_RepositoryUuid(Nullable`1&lt;Guid&gt; value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnCropWorkingCopyArgs">
            <summary>SharpSvn.SvnCropWorkingCopyArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnCropWorkingCopyArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnCropWorkingCopyArgs.#ctor(SharpSvn.SvnCropWorkingCopyArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnCropWorkingCopyArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnCropWorkingCopyArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCropWorkingCopyArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCropWorkingCopyArgs.CommandTypeGet">
            <summary>设置 SvnCropWorkingCopyArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCropWorkingCopyArgs.Constructor">
            <summary>设置 SvnCropWorkingCopyArgs.SvnCropWorkingCopyArgs() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnCropWorkingCopyArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnCropWorkingCopyArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnCropWorkingCopyArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnDeleteArgs">
            <summary>SharpSvn.SvnDeleteArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnDeleteArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnDeleteArgs.#ctor(SharpSvn.SvnDeleteArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnDeleteArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnDeleteArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDeleteArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDeleteArgs.CommandTypeGet">
            <summary>设置 SvnDeleteArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDeleteArgs.Constructor">
            <summary>设置 SvnDeleteArgs.SvnDeleteArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDeleteArgs.ForceGet">
            <summary>设置 SvnDeleteArgs.get_Force() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDeleteArgs.ForceSetBoolean">
            <summary>设置 SvnDeleteArgs.set_Force(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDeleteArgs.KeepLocalGet">
            <summary>设置 SvnDeleteArgs.get_KeepLocal() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDeleteArgs.KeepLocalSetBoolean">
            <summary>设置 SvnDeleteArgs.set_KeepLocal(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnDeleteArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDeleteArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnDeleteArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDeleteArgs.AllInstances.ForceGet">
            <summary>设置 SvnDeleteArgs.get_Force() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDeleteArgs.AllInstances.ForceSetBoolean">
            <summary>设置 SvnDeleteArgs.set_Force(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDeleteArgs.AllInstances.KeepLocalGet">
            <summary>设置 SvnDeleteArgs.get_KeepLocal() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDeleteArgs.AllInstances.KeepLocalSetBoolean">
            <summary>设置 SvnDeleteArgs.set_KeepLocal(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnDeleteRepositoryArgs">
            <summary>SharpSvn.SvnDeleteRepositoryArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnDeleteRepositoryArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnDeleteRepositoryArgs.#ctor(SharpSvn.SvnDeleteRepositoryArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnDeleteRepositoryArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnDeleteRepositoryArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDeleteRepositoryArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDeleteRepositoryArgs.CommandTypeGet">
            <summary>设置 SvnDeleteRepositoryArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDeleteRepositoryArgs.Constructor">
            <summary>设置 SvnDeleteRepositoryArgs.SvnDeleteRepositoryArgs() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnDeleteRepositoryArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDeleteRepositoryArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnDeleteRepositoryArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnDiffArgs">
            <summary>SharpSvn.SvnDiffArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnDiffArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnDiffArgs.#ctor(SharpSvn.SvnDiffArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnDiffArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnDiffArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffArgs.ChangeListsGet">
            <summary>设置 SvnDiffArgs.get_ChangeLists() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffArgs.CommandTypeGet">
            <summary>设置 SvnDiffArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffArgs.Constructor">
            <summary>设置 SvnDiffArgs.SvnDiffArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffArgs.CopiesAsAddsGet">
            <summary>设置 SvnDiffArgs.get_CopiesAsAdds() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffArgs.CopiesAsAddsSetBoolean">
            <summary>设置 SvnDiffArgs.set_CopiesAsAdds(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffArgs.DepthGet">
            <summary>设置 SvnDiffArgs.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffArgs.DepthSetSvnDepth">
            <summary>设置 SvnDiffArgs.set_Depth(SvnDepth value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffArgs.DiffArgumentsGet">
            <summary>设置 SvnDiffArgs.get_DiffArguments() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffArgs.ErrorStreamGet">
            <summary>设置 SvnDiffArgs.get_ErrorStream() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffArgs.ErrorStreamSetStream">
            <summary>设置 SvnDiffArgs.set_ErrorStream(Stream value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffArgs.HeaderEncodingGet">
            <summary>设置 SvnDiffArgs.get_HeaderEncoding() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffArgs.HeaderEncodingSetString">
            <summary>设置 SvnDiffArgs.set_HeaderEncoding(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffArgs.IgnoreAncestryGet">
            <summary>设置 SvnDiffArgs.get_IgnoreAncestry() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffArgs.IgnoreAncestrySetBoolean">
            <summary>设置 SvnDiffArgs.set_IgnoreAncestry(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffArgs.IgnoreContentTypeGet">
            <summary>设置 SvnDiffArgs.get_IgnoreContentType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffArgs.IgnoreContentTypeSetBoolean">
            <summary>设置 SvnDiffArgs.set_IgnoreContentType(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffArgs.NoAddedGet">
            <summary>设置 SvnDiffArgs.get_NoAdded() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffArgs.NoAddedSetBoolean">
            <summary>设置 SvnDiffArgs.set_NoAdded(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffArgs.NoDeletedGet">
            <summary>设置 SvnDiffArgs.get_NoDeleted() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffArgs.NoDeletedSetBoolean">
            <summary>设置 SvnDiffArgs.set_NoDeleted(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffArgs.NoPropertiesGet">
            <summary>设置 SvnDiffArgs.get_NoProperties() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffArgs.NoPropertiesSetBoolean">
            <summary>设置 SvnDiffArgs.set_NoProperties(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffArgs.PropertiesOnlyGet">
            <summary>设置 SvnDiffArgs.get_PropertiesOnly() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffArgs.PropertiesOnlySetBoolean">
            <summary>设置 SvnDiffArgs.set_PropertiesOnly(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffArgs.RelativeToPathGet">
            <summary>设置 SvnDiffArgs.get_RelativeToPath() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffArgs.RelativeToPathSetString">
            <summary>设置 SvnDiffArgs.set_RelativeToPath(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffArgs.UseGitFormatGet">
            <summary>设置 SvnDiffArgs.get_UseGitFormat() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffArgs.UseGitFormatSetBoolean">
            <summary>设置 SvnDiffArgs.set_UseGitFormat(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnDiffArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffArgs.AllInstances.ChangeListsGet">
            <summary>设置 SvnDiffArgs.get_ChangeLists() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnDiffArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffArgs.AllInstances.CopiesAsAddsGet">
            <summary>设置 SvnDiffArgs.get_CopiesAsAdds() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffArgs.AllInstances.CopiesAsAddsSetBoolean">
            <summary>设置 SvnDiffArgs.set_CopiesAsAdds(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffArgs.AllInstances.DepthGet">
            <summary>设置 SvnDiffArgs.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffArgs.AllInstances.DepthSetSvnDepth">
            <summary>设置 SvnDiffArgs.set_Depth(SvnDepth value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffArgs.AllInstances.DiffArgumentsGet">
            <summary>设置 SvnDiffArgs.get_DiffArguments() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffArgs.AllInstances.ErrorStreamGet">
            <summary>设置 SvnDiffArgs.get_ErrorStream() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffArgs.AllInstances.ErrorStreamSetStream">
            <summary>设置 SvnDiffArgs.set_ErrorStream(Stream value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffArgs.AllInstances.HeaderEncodingGet">
            <summary>设置 SvnDiffArgs.get_HeaderEncoding() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffArgs.AllInstances.HeaderEncodingSetString">
            <summary>设置 SvnDiffArgs.set_HeaderEncoding(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffArgs.AllInstances.IgnoreAncestryGet">
            <summary>设置 SvnDiffArgs.get_IgnoreAncestry() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffArgs.AllInstances.IgnoreAncestrySetBoolean">
            <summary>设置 SvnDiffArgs.set_IgnoreAncestry(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffArgs.AllInstances.IgnoreContentTypeGet">
            <summary>设置 SvnDiffArgs.get_IgnoreContentType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffArgs.AllInstances.IgnoreContentTypeSetBoolean">
            <summary>设置 SvnDiffArgs.set_IgnoreContentType(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffArgs.AllInstances.NoAddedGet">
            <summary>设置 SvnDiffArgs.get_NoAdded() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffArgs.AllInstances.NoAddedSetBoolean">
            <summary>设置 SvnDiffArgs.set_NoAdded(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffArgs.AllInstances.NoDeletedGet">
            <summary>设置 SvnDiffArgs.get_NoDeleted() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffArgs.AllInstances.NoDeletedSetBoolean">
            <summary>设置 SvnDiffArgs.set_NoDeleted(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffArgs.AllInstances.NoPropertiesGet">
            <summary>设置 SvnDiffArgs.get_NoProperties() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffArgs.AllInstances.NoPropertiesSetBoolean">
            <summary>设置 SvnDiffArgs.set_NoProperties(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffArgs.AllInstances.PropertiesOnlyGet">
            <summary>设置 SvnDiffArgs.get_PropertiesOnly() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffArgs.AllInstances.PropertiesOnlySetBoolean">
            <summary>设置 SvnDiffArgs.set_PropertiesOnly(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffArgs.AllInstances.RelativeToPathGet">
            <summary>设置 SvnDiffArgs.get_RelativeToPath() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffArgs.AllInstances.RelativeToPathSetString">
            <summary>设置 SvnDiffArgs.set_RelativeToPath(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffArgs.AllInstances.UseGitFormatGet">
            <summary>设置 SvnDiffArgs.get_UseGitFormat() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffArgs.AllInstances.UseGitFormatSetBoolean">
            <summary>设置 SvnDiffArgs.set_UseGitFormat(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnDiffException">
            <summary>SharpSvn.SvnDiffException 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnDiffException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnDiffException.#ctor(SharpSvn.SvnDiffException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnDiffException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnDiffException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnDiffException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffException.Constructor">
            <summary>设置 SvnDiffException.SvnDiffException() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 SvnDiffException.SvnDiffException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffException.ConstructorString">
            <summary>设置 SvnDiffException.SvnDiffException(String message) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffException.ConstructorStringException">
            <summary>设置 SvnDiffException.SvnDiffException(String message, Exception inner) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnDiffException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnDiffMergeArgs">
            <summary>SharpSvn.SvnDiffMergeArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnDiffMergeArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnDiffMergeArgs.#ctor(SharpSvn.SvnDiffMergeArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnDiffMergeArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnDiffMergeArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffMergeArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffMergeArgs.CheckForMixedRevisionsGet">
            <summary>设置 SvnDiffMergeArgs.get_CheckForMixedRevisions() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffMergeArgs.CheckForMixedRevisionsSetBoolean">
            <summary>设置 SvnDiffMergeArgs.set_CheckForMixedRevisions(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffMergeArgs.CommandTypeGet">
            <summary>设置 SvnDiffMergeArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffMergeArgs.Constructor">
            <summary>设置 SvnDiffMergeArgs.SvnDiffMergeArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffMergeArgs.DepthGet">
            <summary>设置 SvnDiffMergeArgs.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffMergeArgs.DepthSetSvnDepth">
            <summary>设置 SvnDiffMergeArgs.set_Depth(SvnDepth value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffMergeArgs.DryRunGet">
            <summary>设置 SvnDiffMergeArgs.get_DryRun() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffMergeArgs.DryRunSetBoolean">
            <summary>设置 SvnDiffMergeArgs.set_DryRun(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffMergeArgs.ForceGet">
            <summary>设置 SvnDiffMergeArgs.get_Force() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffMergeArgs.ForceSetBoolean">
            <summary>设置 SvnDiffMergeArgs.set_Force(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffMergeArgs.IgnoreAncestryGet">
            <summary>设置 SvnDiffMergeArgs.get_IgnoreAncestry() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffMergeArgs.IgnoreAncestrySetBoolean">
            <summary>设置 SvnDiffMergeArgs.set_IgnoreAncestry(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffMergeArgs.IgnoreMergeInfoGet">
            <summary>设置 SvnDiffMergeArgs.get_IgnoreMergeInfo() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffMergeArgs.IgnoreMergeInfoSetNullableOfBoolean">
            <summary>设置 SvnDiffMergeArgs.set_IgnoreMergeInfo(Nullable`1&lt;Boolean&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffMergeArgs.RecordOnlyGet">
            <summary>设置 SvnDiffMergeArgs.get_RecordOnly() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffMergeArgs.RecordOnlySetBoolean">
            <summary>设置 SvnDiffMergeArgs.set_RecordOnly(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnDiffMergeArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffMergeArgs.AllInstances.CheckForMixedRevisionsGet">
            <summary>设置 SvnDiffMergeArgs.get_CheckForMixedRevisions() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffMergeArgs.AllInstances.CheckForMixedRevisionsSetBoolean">
            <summary>设置 SvnDiffMergeArgs.set_CheckForMixedRevisions(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffMergeArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnDiffMergeArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffMergeArgs.AllInstances.DepthGet">
            <summary>设置 SvnDiffMergeArgs.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffMergeArgs.AllInstances.DepthSetSvnDepth">
            <summary>设置 SvnDiffMergeArgs.set_Depth(SvnDepth value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffMergeArgs.AllInstances.DryRunGet">
            <summary>设置 SvnDiffMergeArgs.get_DryRun() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffMergeArgs.AllInstances.DryRunSetBoolean">
            <summary>设置 SvnDiffMergeArgs.set_DryRun(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffMergeArgs.AllInstances.ForceGet">
            <summary>设置 SvnDiffMergeArgs.get_Force() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffMergeArgs.AllInstances.ForceSetBoolean">
            <summary>设置 SvnDiffMergeArgs.set_Force(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffMergeArgs.AllInstances.IgnoreAncestryGet">
            <summary>设置 SvnDiffMergeArgs.get_IgnoreAncestry() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffMergeArgs.AllInstances.IgnoreAncestrySetBoolean">
            <summary>设置 SvnDiffMergeArgs.set_IgnoreAncestry(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffMergeArgs.AllInstances.IgnoreMergeInfoGet">
            <summary>设置 SvnDiffMergeArgs.get_IgnoreMergeInfo() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffMergeArgs.AllInstances.IgnoreMergeInfoSetNullableOfBoolean">
            <summary>设置 SvnDiffMergeArgs.set_IgnoreMergeInfo(Nullable`1&lt;Boolean&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffMergeArgs.AllInstances.RecordOnlyGet">
            <summary>设置 SvnDiffMergeArgs.get_RecordOnly() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffMergeArgs.AllInstances.RecordOnlySetBoolean">
            <summary>设置 SvnDiffMergeArgs.set_RecordOnly(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnDiffSummaryArgs">
            <summary>SharpSvn.SvnDiffSummaryArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnDiffSummaryArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnDiffSummaryArgs.#ctor(SharpSvn.SvnDiffSummaryArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnDiffSummaryArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnDiffSummaryArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffSummaryArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffSummaryArgs.ChangeListsGet">
            <summary>设置 SvnDiffSummaryArgs.get_ChangeLists() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffSummaryArgs.CommandTypeGet">
            <summary>设置 SvnDiffSummaryArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffSummaryArgs.Constructor">
            <summary>设置 SvnDiffSummaryArgs.SvnDiffSummaryArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffSummaryArgs.DepthGet">
            <summary>设置 SvnDiffSummaryArgs.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffSummaryArgs.DepthSetSvnDepth">
            <summary>设置 SvnDiffSummaryArgs.set_Depth(SvnDepth value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffSummaryArgs.DiffSummaryAddEventHandlerOfSvnDiffSummaryEventArgs">
            <summary>设置 SvnDiffSummaryArgs.add_DiffSummary(EventHandler`1&lt;SvnDiffSummaryEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffSummaryArgs.DiffSummaryRaiseObjectSvnDiffSummaryEventArgs">
            <summary>设置 SvnDiffSummaryArgs.raise_DiffSummary(Object sender, SvnDiffSummaryEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffSummaryArgs.DiffSummaryRemoveEventHandlerOfSvnDiffSummaryEventArgs">
            <summary>设置 SvnDiffSummaryArgs.remove_DiffSummary(EventHandler`1&lt;SvnDiffSummaryEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffSummaryArgs.IgnoreAncestryGet">
            <summary>设置 SvnDiffSummaryArgs.get_IgnoreAncestry() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffSummaryArgs.IgnoreAncestrySetBoolean">
            <summary>设置 SvnDiffSummaryArgs.set_IgnoreAncestry(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffSummaryArgs.OnDiffSummarySvnDiffSummaryEventArgs">
            <summary>设置 SvnDiffSummaryArgs.OnDiffSummary(SvnDiffSummaryEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffSummaryArgs.RaiseDiffSummarySvnDiffSummaryEventArgs">
            <summary>设置 SvnDiffSummaryArgs.RaiseDiffSummary(SvnDiffSummaryEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffSummaryArgs.SummaryHandlerAddEventHandlerOfSvnDiffSummaryEventArgs">
            <summary>设置 SvnDiffSummaryArgs.add_SummaryHandler(EventHandler`1&lt;SvnDiffSummaryEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffSummaryArgs.SummaryHandlerRemoveEventHandlerOfSvnDiffSummaryEventArgs">
            <summary>设置 SvnDiffSummaryArgs.remove_SummaryHandler(EventHandler`1&lt;SvnDiffSummaryEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnDiffSummaryArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffSummaryArgs.AllInstances.ChangeListsGet">
            <summary>设置 SvnDiffSummaryArgs.get_ChangeLists() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffSummaryArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnDiffSummaryArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffSummaryArgs.AllInstances.DepthGet">
            <summary>设置 SvnDiffSummaryArgs.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffSummaryArgs.AllInstances.DepthSetSvnDepth">
            <summary>设置 SvnDiffSummaryArgs.set_Depth(SvnDepth value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffSummaryArgs.AllInstances.DiffSummaryAddEventHandlerOfSvnDiffSummaryEventArgs">
            <summary>设置 SvnDiffSummaryArgs.add_DiffSummary(EventHandler`1&lt;SvnDiffSummaryEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffSummaryArgs.AllInstances.DiffSummaryRaiseObjectSvnDiffSummaryEventArgs">
            <summary>设置 SvnDiffSummaryArgs.raise_DiffSummary(Object sender, SvnDiffSummaryEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffSummaryArgs.AllInstances.DiffSummaryRemoveEventHandlerOfSvnDiffSummaryEventArgs">
            <summary>设置 SvnDiffSummaryArgs.remove_DiffSummary(EventHandler`1&lt;SvnDiffSummaryEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffSummaryArgs.AllInstances.IgnoreAncestryGet">
            <summary>设置 SvnDiffSummaryArgs.get_IgnoreAncestry() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffSummaryArgs.AllInstances.IgnoreAncestrySetBoolean">
            <summary>设置 SvnDiffSummaryArgs.set_IgnoreAncestry(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffSummaryArgs.AllInstances.OnDiffSummarySvnDiffSummaryEventArgs">
            <summary>设置 SvnDiffSummaryArgs.OnDiffSummary(SvnDiffSummaryEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffSummaryArgs.AllInstances.RaiseDiffSummarySvnDiffSummaryEventArgs">
            <summary>设置 SvnDiffSummaryArgs.RaiseDiffSummary(SvnDiffSummaryEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffSummaryArgs.AllInstances.SummaryHandlerAddEventHandlerOfSvnDiffSummaryEventArgs">
            <summary>设置 SvnDiffSummaryArgs.add_SummaryHandler(EventHandler`1&lt;SvnDiffSummaryEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffSummaryArgs.AllInstances.SummaryHandlerRemoveEventHandlerOfSvnDiffSummaryEventArgs">
            <summary>设置 SvnDiffSummaryArgs.remove_SummaryHandler(EventHandler`1&lt;SvnDiffSummaryEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnDiffSummaryEventArgs">
            <summary>SharpSvn.SvnDiffSummaryEventArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnDiffSummaryEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnDiffSummaryEventArgs.#ctor(SharpSvn.SvnDiffSummaryEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnDiffSummaryEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnDiffSummaryEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffSummaryEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffSummaryEventArgs.DetachBoolean">
            <summary>设置 SvnDiffSummaryEventArgs.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffSummaryEventArgs.DiffKindGet">
            <summary>设置 SvnDiffSummaryEventArgs.get_DiffKind() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffSummaryEventArgs.FromUriGet">
            <summary>设置 SvnDiffSummaryEventArgs.get_FromUri() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffSummaryEventArgs.GetHashCode">
            <summary>设置 SvnDiffSummaryEventArgs.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffSummaryEventArgs.NodeKindGet">
            <summary>设置 SvnDiffSummaryEventArgs.get_NodeKind() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffSummaryEventArgs.PathGet">
            <summary>设置 SvnDiffSummaryEventArgs.get_Path() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffSummaryEventArgs.PropertiesChangedGet">
            <summary>设置 SvnDiffSummaryEventArgs.get_PropertiesChanged() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffSummaryEventArgs.ToUriGet">
            <summary>设置 SvnDiffSummaryEventArgs.get_ToUri() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnDiffSummaryEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffSummaryEventArgs.AllInstances.DetachBoolean">
            <summary>设置 SvnDiffSummaryEventArgs.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffSummaryEventArgs.AllInstances.DiffKindGet">
            <summary>设置 SvnDiffSummaryEventArgs.get_DiffKind() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffSummaryEventArgs.AllInstances.FromUriGet">
            <summary>设置 SvnDiffSummaryEventArgs.get_FromUri() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffSummaryEventArgs.AllInstances.GetHashCode01">
            <summary>设置 SvnDiffSummaryEventArgs.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffSummaryEventArgs.AllInstances.NodeKindGet">
            <summary>设置 SvnDiffSummaryEventArgs.get_NodeKind() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffSummaryEventArgs.AllInstances.PathGet">
            <summary>设置 SvnDiffSummaryEventArgs.get_Path() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffSummaryEventArgs.AllInstances.PropertiesChangedGet">
            <summary>设置 SvnDiffSummaryEventArgs.get_PropertiesChanged() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiffSummaryEventArgs.AllInstances.ToUriGet">
            <summary>设置 SvnDiffSummaryEventArgs.get_ToUri() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnDirEntry">
            <summary>SharpSvn.SvnDirEntry 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnDirEntry.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnDirEntry.#ctor(SharpSvn.SvnDirEntry)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnDirEntry.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnDirEntry.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDirEntry.AuthorGet">
            <summary>设置 SvnDirEntry.get_Author() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDirEntry.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDirEntry.Detach">
            <summary>设置 SvnDirEntry.Detach() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDirEntry.DetachBoolean">
            <summary>设置 SvnDirEntry.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDirEntry.FileSizeGet">
            <summary>设置 SvnDirEntry.get_FileSize() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDirEntry.GetHashCode">
            <summary>设置 SvnDirEntry.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDirEntry.HasPropertiesGet">
            <summary>设置 SvnDirEntry.get_HasProperties() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDirEntry.NodeKindGet">
            <summary>设置 SvnDirEntry.get_NodeKind() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDirEntry.RevisionGet">
            <summary>设置 SvnDirEntry.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDirEntry.TimeGet">
            <summary>设置 SvnDirEntry.get_Time() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnDirEntry.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDirEntry.AllInstances.AuthorGet">
            <summary>设置 SvnDirEntry.get_Author() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDirEntry.AllInstances.Detach">
            <summary>设置 SvnDirEntry.Detach() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDirEntry.AllInstances.DetachBoolean">
            <summary>设置 SvnDirEntry.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDirEntry.AllInstances.FileSizeGet">
            <summary>设置 SvnDirEntry.get_FileSize() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDirEntry.AllInstances.GetHashCode01">
            <summary>设置 SvnDirEntry.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDirEntry.AllInstances.HasPropertiesGet">
            <summary>设置 SvnDirEntry.get_HasProperties() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDirEntry.AllInstances.NodeKindGet">
            <summary>设置 SvnDirEntry.get_NodeKind() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDirEntry.AllInstances.RevisionGet">
            <summary>设置 SvnDirEntry.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDirEntry.AllInstances.TimeGet">
            <summary>设置 SvnDirEntry.get_Time() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnDiskFullException">
            <summary>SharpSvn.SvnDiskFullException 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnDiskFullException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnDiskFullException.#ctor(SharpSvn.SvnDiskFullException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnDiskFullException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnDiskFullException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnDiskFullException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiskFullException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiskFullException.Constructor">
            <summary>设置 SvnDiskFullException.SvnDiskFullException() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiskFullException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 SvnDiskFullException.SvnDiskFullException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiskFullException.ConstructorString">
            <summary>设置 SvnDiskFullException.SvnDiskFullException(String message) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDiskFullException.ConstructorStringException">
            <summary>设置 SvnDiskFullException.SvnDiskFullException(String message, Exception inner) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnDiskFullException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnDumpRepositoryArgs">
            <summary>SharpSvn.SvnDumpRepositoryArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnDumpRepositoryArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnDumpRepositoryArgs.#ctor(SharpSvn.SvnDumpRepositoryArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnDumpRepositoryArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnDumpRepositoryArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDumpRepositoryArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDumpRepositoryArgs.CommandTypeGet">
            <summary>设置 SvnDumpRepositoryArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDumpRepositoryArgs.Constructor">
            <summary>设置 SvnDumpRepositoryArgs.SvnDumpRepositoryArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDumpRepositoryArgs.DeltasGet">
            <summary>设置 SvnDumpRepositoryArgs.get_Deltas() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDumpRepositoryArgs.DeltasSetBoolean">
            <summary>设置 SvnDumpRepositoryArgs.set_Deltas(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDumpRepositoryArgs.EndGet">
            <summary>设置 SvnDumpRepositoryArgs.get_End() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDumpRepositoryArgs.EndSetSvnRevision">
            <summary>设置 SvnDumpRepositoryArgs.set_End(SvnRevision value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDumpRepositoryArgs.IncrementalGet">
            <summary>设置 SvnDumpRepositoryArgs.get_Incremental() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDumpRepositoryArgs.IncrementalSetBoolean">
            <summary>设置 SvnDumpRepositoryArgs.set_Incremental(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDumpRepositoryArgs.StartGet">
            <summary>设置 SvnDumpRepositoryArgs.get_Start() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDumpRepositoryArgs.StartSetSvnRevision">
            <summary>设置 SvnDumpRepositoryArgs.set_Start(SvnRevision value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnDumpRepositoryArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDumpRepositoryArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnDumpRepositoryArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDumpRepositoryArgs.AllInstances.DeltasGet">
            <summary>设置 SvnDumpRepositoryArgs.get_Deltas() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDumpRepositoryArgs.AllInstances.DeltasSetBoolean">
            <summary>设置 SvnDumpRepositoryArgs.set_Deltas(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDumpRepositoryArgs.AllInstances.EndGet">
            <summary>设置 SvnDumpRepositoryArgs.get_End() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDumpRepositoryArgs.AllInstances.EndSetSvnRevision">
            <summary>设置 SvnDumpRepositoryArgs.set_End(SvnRevision value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDumpRepositoryArgs.AllInstances.IncrementalGet">
            <summary>设置 SvnDumpRepositoryArgs.get_Incremental() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDumpRepositoryArgs.AllInstances.IncrementalSetBoolean">
            <summary>设置 SvnDumpRepositoryArgs.set_Incremental(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDumpRepositoryArgs.AllInstances.StartGet">
            <summary>设置 SvnDumpRepositoryArgs.get_Start() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnDumpRepositoryArgs.AllInstances.StartSetSvnRevision">
            <summary>设置 SvnDumpRepositoryArgs.set_Start(SvnRevision value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnEntryException">
            <summary>SharpSvn.SvnEntryException 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnEntryException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnEntryException.#ctor(SharpSvn.SvnEntryException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnEntryException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnEntryException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnEntryException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnEntryException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnEntryException.Constructor">
            <summary>设置 SvnEntryException.SvnEntryException() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnEntryException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 SvnEntryException.SvnEntryException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnEntryException.ConstructorString">
            <summary>设置 SvnEntryException.SvnEntryException(String message) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnEntryException.ConstructorStringException">
            <summary>设置 SvnEntryException.SvnEntryException(String message, Exception inner) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnEntryException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnEntryNotFoundException">
            <summary>SharpSvn.SvnEntryNotFoundException 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnEntryNotFoundException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnEntryNotFoundException.#ctor(SharpSvn.SvnEntryNotFoundException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnEntryNotFoundException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnEntryNotFoundException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnEntryNotFoundException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnEntryNotFoundException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnEntryNotFoundException.Constructor">
            <summary>设置 SvnEntryNotFoundException.SvnEntryNotFoundException() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnEntryNotFoundException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 SvnEntryNotFoundException.SvnEntryNotFoundException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnEntryNotFoundException.ConstructorString">
            <summary>设置 SvnEntryNotFoundException.SvnEntryNotFoundException(String message) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnEntryNotFoundException.ConstructorStringException">
            <summary>设置 SvnEntryNotFoundException.SvnEntryNotFoundException(String message, Exception inner) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnEntryNotFoundException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnErrorEventArgs">
            <summary>SharpSvn.SvnErrorEventArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnErrorEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnErrorEventArgs.#ctor(SharpSvn.SvnErrorEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnErrorEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnErrorEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnErrorEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnErrorEventArgs.ConstructorSvnException">
            <summary>设置 SvnErrorEventArgs.SvnErrorEventArgs(SvnException exception) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnErrorEventArgs.ExceptionGet">
            <summary>设置 SvnErrorEventArgs.get_Exception() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnErrorEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnErrorEventArgs.AllInstances.ExceptionGet">
            <summary>设置 SvnErrorEventArgs.get_Exception() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnEventArgs">
            <summary>SharpSvn.SvnEventArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnEventArgs.#ctor(SharpSvn.SvnEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnEventArgs.Constructor">
            <summary>设置 SvnEventArgs.SvnEventArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnEventArgs.Detach">
            <summary>设置 SvnEventArgs.Detach() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnEventArgs.DetachBoolean">
            <summary>设置 SvnEventArgs.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnEventArgs.SafeGetHashCodeObject">
            <summary>设置 SvnEventArgs.SafeGetHashCode(Object value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnEventArgs.StaticConstructor">
            <summary>设置 SvnEventArgs.SvnEventArgs() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnEventArgs.AllInstances.Detach">
            <summary>设置 SvnEventArgs.Detach() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnEventArgs.AllInstances.DetachBoolean">
            <summary>设置 SvnEventArgs.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnException">
            <summary>SharpSvn.SvnException 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnException.#ctor(SharpSvn.SvnException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnException.GetCauseOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>设置 SvnException.GetCause() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnException.AprErrorCodeGet">
            <summary>设置 SvnException.get_AprErrorCode() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnException.Constructor">
            <summary>设置 SvnException.SvnException() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 SvnException.SvnException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnException.ConstructorString">
            <summary>设置 SvnException.SvnException(String message) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnException.ConstructorStringException">
            <summary>设置 SvnException.SvnException(String message, Exception inner) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnException.ConstructorStringStringInt32">
            <summary>设置 SvnException.SvnException(String message, String file, Int32 line) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnException.ContainsErrorSvnAprErrorCode">
            <summary>设置 SvnException.ContainsError(SvnAprErrorCode code) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnException.ContainsErrorSvnErrorCode">
            <summary>设置 SvnException.ContainsError(SvnErrorCode code) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnException.ContainsErrorSvnWindowsErrorCode">
            <summary>设置 SvnException.ContainsError(SvnWindowsErrorCode code) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnException.FileGet">
            <summary>设置 SvnException.get_File() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnException.GetCauseType">
            <summary>设置 SvnException.GetCause(Type exceptionType) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnException.LineGet">
            <summary>设置 SvnException.get_Line() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnException.OperatingSystemErrorCodeGet">
            <summary>设置 SvnException.get_OperatingSystemErrorCode() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnException.RootCauseGet">
            <summary>设置 SvnException.get_RootCause() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnException.SubversionErrorCodeGet">
            <summary>设置 SvnException.get_SubversionErrorCode() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnException.SvnErrorCategoryGet">
            <summary>设置 SvnException.get_SvnErrorCategory() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnException.SvnErrorCodeGet">
            <summary>设置 SvnException.get_SvnErrorCode() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnException.TargetsGet">
            <summary>设置 SvnException.get_Targets() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnException.TargetsSetObject">
            <summary>设置 SvnException.set_Targets(Object value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnException.WindowsErrorCodeGet">
            <summary>设置 SvnException.get_WindowsErrorCode() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnException.AllInstances.GetCauseOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{SharpSvn.SvnException,``0})">
            <summary>设置 SvnException.GetCause() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnException.AllInstances.AprErrorCodeGet">
            <summary>设置 SvnException.get_AprErrorCode() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnException.AllInstances.ContainsErrorSvnAprErrorCode">
            <summary>设置 SvnException.ContainsError(SvnAprErrorCode code) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnException.AllInstances.ContainsErrorSvnErrorCode">
            <summary>设置 SvnException.ContainsError(SvnErrorCode code) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnException.AllInstances.ContainsErrorSvnWindowsErrorCode">
            <summary>设置 SvnException.ContainsError(SvnWindowsErrorCode code) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnException.AllInstances.FileGet">
            <summary>设置 SvnException.get_File() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnException.AllInstances.GetCauseType">
            <summary>设置 SvnException.GetCause(Type exceptionType) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnException.AllInstances.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnException.AllInstances.LineGet">
            <summary>设置 SvnException.get_Line() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnException.AllInstances.OperatingSystemErrorCodeGet">
            <summary>设置 SvnException.get_OperatingSystemErrorCode() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnException.AllInstances.RootCauseGet">
            <summary>设置 SvnException.get_RootCause() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnException.AllInstances.SubversionErrorCodeGet">
            <summary>设置 SvnException.get_SubversionErrorCode() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnException.AllInstances.SvnErrorCategoryGet">
            <summary>设置 SvnException.get_SvnErrorCategory() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnException.AllInstances.SvnErrorCodeGet">
            <summary>设置 SvnException.get_SvnErrorCode() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnException.AllInstances.TargetsGet">
            <summary>设置 SvnException.get_Targets() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnException.AllInstances.TargetsSetObject">
            <summary>设置 SvnException.set_Targets(Object value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnException.AllInstances.WindowsErrorCodeGet">
            <summary>设置 SvnException.get_WindowsErrorCode() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnExportArgs">
            <summary>SharpSvn.SvnExportArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnExportArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnExportArgs.#ctor(SharpSvn.SvnExportArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnExportArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnExportArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnExportArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnExportArgs.CommandTypeGet">
            <summary>设置 SvnExportArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnExportArgs.Constructor">
            <summary>设置 SvnExportArgs.SvnExportArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnExportArgs.DepthGet">
            <summary>设置 SvnExportArgs.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnExportArgs.DepthSetSvnDepth">
            <summary>设置 SvnExportArgs.set_Depth(SvnDepth value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnExportArgs.IgnoreExternalsGet">
            <summary>设置 SvnExportArgs.get_IgnoreExternals() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnExportArgs.IgnoreExternalsSetBoolean">
            <summary>设置 SvnExportArgs.set_IgnoreExternals(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnExportArgs.IgnoreKeywordsGet">
            <summary>设置 SvnExportArgs.get_IgnoreKeywords() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnExportArgs.IgnoreKeywordsSetBoolean">
            <summary>设置 SvnExportArgs.set_IgnoreKeywords(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnExportArgs.LineStyleGet">
            <summary>设置 SvnExportArgs.get_LineStyle() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnExportArgs.LineStyleSetSvnLineStyle">
            <summary>设置 SvnExportArgs.set_LineStyle(SvnLineStyle value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnExportArgs.OverwriteGet">
            <summary>设置 SvnExportArgs.get_Overwrite() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnExportArgs.OverwriteSetBoolean">
            <summary>设置 SvnExportArgs.set_Overwrite(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnExportArgs.RevisionGet">
            <summary>设置 SvnExportArgs.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnExportArgs.RevisionSetSvnRevision">
            <summary>设置 SvnExportArgs.set_Revision(SvnRevision value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnExportArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnExportArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnExportArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnExportArgs.AllInstances.DepthGet">
            <summary>设置 SvnExportArgs.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnExportArgs.AllInstances.DepthSetSvnDepth">
            <summary>设置 SvnExportArgs.set_Depth(SvnDepth value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnExportArgs.AllInstances.IgnoreExternalsGet">
            <summary>设置 SvnExportArgs.get_IgnoreExternals() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnExportArgs.AllInstances.IgnoreExternalsSetBoolean">
            <summary>设置 SvnExportArgs.set_IgnoreExternals(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnExportArgs.AllInstances.IgnoreKeywordsGet">
            <summary>设置 SvnExportArgs.get_IgnoreKeywords() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnExportArgs.AllInstances.IgnoreKeywordsSetBoolean">
            <summary>设置 SvnExportArgs.set_IgnoreKeywords(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnExportArgs.AllInstances.LineStyleGet">
            <summary>设置 SvnExportArgs.get_LineStyle() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnExportArgs.AllInstances.LineStyleSetSvnLineStyle">
            <summary>设置 SvnExportArgs.set_LineStyle(SvnLineStyle value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnExportArgs.AllInstances.OverwriteGet">
            <summary>设置 SvnExportArgs.get_Overwrite() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnExportArgs.AllInstances.OverwriteSetBoolean">
            <summary>设置 SvnExportArgs.set_Overwrite(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnExportArgs.AllInstances.RevisionGet">
            <summary>设置 SvnExportArgs.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnExportArgs.AllInstances.RevisionSetSvnRevision">
            <summary>设置 SvnExportArgs.set_Revision(SvnRevision value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnExternalItem">
            <summary>SharpSvn.SvnExternalItem 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnExternalItem.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnExternalItem.#ctor(SharpSvn.SvnExternalItem)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnExternalItem.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnExternalItem.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnExternalItem.Bind(System.IEquatable{SharpSvn.SvnExternalItem})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnExternalItem.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnExternalItem.ConstructorStringString">
            <summary>设置 SvnExternalItem.SvnExternalItem(String targetName, String url) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnExternalItem.ConstructorStringStringSvnRevision">
            <summary>设置 SvnExternalItem.SvnExternalItem(String targetName, String url, SvnRevision pegRevision) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnExternalItem.ConstructorStringStringSvnRevisionSvnRevision">
            <summary>设置 SvnExternalItem.SvnExternalItem(String targetName, String url, SvnRevision revision, SvnRevision pegRevision) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnExternalItem.ConstructorStringUri">
            <summary>设置 SvnExternalItem.SvnExternalItem(String targetName, Uri uri) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnExternalItem.ConstructorStringUriSvnRevision">
            <summary>设置 SvnExternalItem.SvnExternalItem(String targetName, Uri uri, SvnRevision pegRevision) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnExternalItem.ConstructorStringUriSvnRevisionSvnRevision">
            <summary>设置 SvnExternalItem.SvnExternalItem(String targetName, Uri uri, SvnRevision revision, SvnRevision pegRevision) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnExternalItem.EqualsObject">
            <summary>设置 SvnExternalItem.Equals(Object other) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnExternalItem.EqualsSvnExternalItem">
            <summary>设置 SvnExternalItem.Equals(SvnExternalItem other) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnExternalItem.GetHashCode">
            <summary>设置 SvnExternalItem.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnExternalItem.OperationalRevisionGet">
            <summary>设置 SvnExternalItem.get_OperationalRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnExternalItem.ReferenceGet">
            <summary>设置 SvnExternalItem.get_Reference() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnExternalItem.RevisionGet">
            <summary>设置 SvnExternalItem.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnExternalItem.TargetGet">
            <summary>设置 SvnExternalItem.get_Target() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnExternalItem.ToString">
            <summary>设置 SvnExternalItem.ToString() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnExternalItem.ToStringBoolean">
            <summary>设置 SvnExternalItem.ToString(Boolean useCompatibleFormat) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnExternalItem.TryParseStringSvnExternalItemArrayOut">
            <summary>设置 SvnExternalItem.TryParse(String value, SvnExternalItem[]&amp; items) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnExternalItem.TryParseStringSvnExternalItemOut">
            <summary>设置 SvnExternalItem.TryParse(String value, SvnExternalItem&amp; item) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnExternalItem.WriteToStringBuilderBoolean">
            <summary>设置 SvnExternalItem.WriteTo(StringBuilder sb, Boolean useCompatibleFormat) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnExternalItem.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnExternalItem.AllInstances.EqualsObject">
            <summary>设置 SvnExternalItem.Equals(Object other) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnExternalItem.AllInstances.EqualsSvnExternalItem">
            <summary>设置 SvnExternalItem.Equals(SvnExternalItem other) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnExternalItem.AllInstances.GetHashCode01">
            <summary>设置 SvnExternalItem.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnExternalItem.AllInstances.OperationalRevisionGet">
            <summary>设置 SvnExternalItem.get_OperationalRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnExternalItem.AllInstances.ReferenceGet">
            <summary>设置 SvnExternalItem.get_Reference() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnExternalItem.AllInstances.RevisionGet">
            <summary>设置 SvnExternalItem.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnExternalItem.AllInstances.TargetGet">
            <summary>设置 SvnExternalItem.get_Target() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnExternalItem.AllInstances.ToString01">
            <summary>设置 SvnExternalItem.ToString() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnExternalItem.AllInstances.ToStringBoolean">
            <summary>设置 SvnExternalItem.ToString(Boolean useCompatibleFormat) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnExternalItem.AllInstances.WriteToStringBuilderBoolean">
            <summary>设置 SvnExternalItem.WriteTo(StringBuilder sb, Boolean useCompatibleFormat) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnFileSystemException">
            <summary>SharpSvn.SvnFileSystemException 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnFileSystemException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnFileSystemException.#ctor(SharpSvn.SvnFileSystemException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnFileSystemException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnFileSystemException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnFileSystemException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileSystemException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileSystemException.Constructor">
            <summary>设置 SvnFileSystemException.SvnFileSystemException() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileSystemException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 SvnFileSystemException.SvnFileSystemException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileSystemException.ConstructorString">
            <summary>设置 SvnFileSystemException.SvnFileSystemException(String message) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileSystemException.ConstructorStringException">
            <summary>设置 SvnFileSystemException.SvnFileSystemException(String message, Exception inner) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnFileSystemException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnFileSystemLockException">
            <summary>SharpSvn.SvnFileSystemLockException 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnFileSystemLockException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnFileSystemLockException.#ctor(SharpSvn.SvnFileSystemLockException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnFileSystemLockException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnFileSystemLockException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnFileSystemLockException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileSystemLockException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileSystemLockException.Constructor">
            <summary>设置 SvnFileSystemLockException.SvnFileSystemLockException() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileSystemLockException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 SvnFileSystemLockException.SvnFileSystemLockException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileSystemLockException.ConstructorString">
            <summary>设置 SvnFileSystemLockException.SvnFileSystemLockException(String message) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileSystemLockException.ConstructorStringException">
            <summary>设置 SvnFileSystemLockException.SvnFileSystemLockException(String message, Exception inner) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnFileSystemLockException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnFileSystemNodeTypeException">
            <summary>SharpSvn.SvnFileSystemNodeTypeException 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnFileSystemNodeTypeException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnFileSystemNodeTypeException.#ctor(SharpSvn.SvnFileSystemNodeTypeException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnFileSystemNodeTypeException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnFileSystemNodeTypeException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnFileSystemNodeTypeException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileSystemNodeTypeException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileSystemNodeTypeException.Constructor">
            <summary>设置 SvnFileSystemNodeTypeException.SvnFileSystemNodeTypeException() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileSystemNodeTypeException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 SvnFileSystemNodeTypeException.SvnFileSystemNodeTypeException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileSystemNodeTypeException.ConstructorString">
            <summary>设置 SvnFileSystemNodeTypeException.SvnFileSystemNodeTypeException(String message) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileSystemNodeTypeException.ConstructorStringException">
            <summary>设置 SvnFileSystemNodeTypeException.SvnFileSystemNodeTypeException(String message, Exception inner) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnFileSystemNodeTypeException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnFileSystemOutOfDateException">
            <summary>SharpSvn.SvnFileSystemOutOfDateException 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnFileSystemOutOfDateException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnFileSystemOutOfDateException.#ctor(SharpSvn.SvnFileSystemOutOfDateException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnFileSystemOutOfDateException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnFileSystemOutOfDateException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnFileSystemOutOfDateException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileSystemOutOfDateException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileSystemOutOfDateException.Constructor">
            <summary>设置 SvnFileSystemOutOfDateException.SvnFileSystemOutOfDateException() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileSystemOutOfDateException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 SvnFileSystemOutOfDateException.SvnFileSystemOutOfDateException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileSystemOutOfDateException.ConstructorString">
            <summary>设置 SvnFileSystemOutOfDateException.SvnFileSystemOutOfDateException(String message) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileSystemOutOfDateException.ConstructorStringException">
            <summary>设置 SvnFileSystemOutOfDateException.SvnFileSystemOutOfDateException(String message, Exception inner) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnFileSystemOutOfDateException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnFileVersionEventArgs">
            <summary>SharpSvn.SvnFileVersionEventArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnFileVersionEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnFileVersionEventArgs.#ctor(SharpSvn.SvnFileVersionEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnFileVersionEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnFileVersionEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionEventArgs.AuthorGet">
            <summary>设置 SvnFileVersionEventArgs.get_Author() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionEventArgs.DetachBoolean">
            <summary>设置 SvnFileVersionEventArgs.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionEventArgs.GetContentStream">
            <summary>设置 SvnFileVersionEventArgs.GetContentStream() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionEventArgs.GetContentStreamSvnFileVersionWriteArgs">
            <summary>设置 SvnFileVersionEventArgs.GetContentStream(SvnFileVersionWriteArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionEventArgs.HasContentChangesGet">
            <summary>设置 SvnFileVersionEventArgs.get_HasContentChanges() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionEventArgs.HasPropertyChangesGet">
            <summary>设置 SvnFileVersionEventArgs.get_HasPropertyChanges() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionEventArgs.LogMessageGet">
            <summary>设置 SvnFileVersionEventArgs.get_LogMessage() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionEventArgs.PathGet">
            <summary>设置 SvnFileVersionEventArgs.get_Path() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionEventArgs.PropertiesGet">
            <summary>设置 SvnFileVersionEventArgs.get_Properties() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionEventArgs.RepositoryRootGet">
            <summary>设置 SvnFileVersionEventArgs.get_RepositoryRoot() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionEventArgs.ResultOfMergeGet">
            <summary>设置 SvnFileVersionEventArgs.get_ResultOfMerge() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionEventArgs.RevisionGet">
            <summary>设置 SvnFileVersionEventArgs.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionEventArgs.RevisionPropertiesGet">
            <summary>设置 SvnFileVersionEventArgs.get_RevisionProperties() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionEventArgs.TimeGet">
            <summary>设置 SvnFileVersionEventArgs.get_Time() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionEventArgs.UriGet">
            <summary>设置 SvnFileVersionEventArgs.get_Uri() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionEventArgs.VersionFileGet">
            <summary>设置 SvnFileVersionEventArgs.get_VersionFile() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionEventArgs.VersionFileSetString">
            <summary>设置 SvnFileVersionEventArgs.set_VersionFile(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionEventArgs.WriteToStream">
            <summary>设置 SvnFileVersionEventArgs.WriteTo(Stream output) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionEventArgs.WriteToStreamSvnFileVersionWriteArgs">
            <summary>设置 SvnFileVersionEventArgs.WriteTo(Stream output, SvnFileVersionWriteArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionEventArgs.WriteToString">
            <summary>设置 SvnFileVersionEventArgs.WriteTo(String outputFileName) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionEventArgs.WriteToStringSvnFileVersionWriteArgs">
            <summary>设置 SvnFileVersionEventArgs.WriteTo(String outputFileName, SvnFileVersionWriteArgs args) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnFileVersionEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionEventArgs.AllInstances.AuthorGet">
            <summary>设置 SvnFileVersionEventArgs.get_Author() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionEventArgs.AllInstances.DetachBoolean">
            <summary>设置 SvnFileVersionEventArgs.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionEventArgs.AllInstances.GetContentStream">
            <summary>设置 SvnFileVersionEventArgs.GetContentStream() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionEventArgs.AllInstances.GetContentStreamSvnFileVersionWriteArgs">
            <summary>设置 SvnFileVersionEventArgs.GetContentStream(SvnFileVersionWriteArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionEventArgs.AllInstances.HasContentChangesGet">
            <summary>设置 SvnFileVersionEventArgs.get_HasContentChanges() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionEventArgs.AllInstances.HasPropertyChangesGet">
            <summary>设置 SvnFileVersionEventArgs.get_HasPropertyChanges() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionEventArgs.AllInstances.LogMessageGet">
            <summary>设置 SvnFileVersionEventArgs.get_LogMessage() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionEventArgs.AllInstances.PathGet">
            <summary>设置 SvnFileVersionEventArgs.get_Path() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionEventArgs.AllInstances.PropertiesGet">
            <summary>设置 SvnFileVersionEventArgs.get_Properties() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionEventArgs.AllInstances.RepositoryRootGet">
            <summary>设置 SvnFileVersionEventArgs.get_RepositoryRoot() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionEventArgs.AllInstances.ResultOfMergeGet">
            <summary>设置 SvnFileVersionEventArgs.get_ResultOfMerge() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionEventArgs.AllInstances.RevisionGet">
            <summary>设置 SvnFileVersionEventArgs.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionEventArgs.AllInstances.RevisionPropertiesGet">
            <summary>设置 SvnFileVersionEventArgs.get_RevisionProperties() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionEventArgs.AllInstances.TimeGet">
            <summary>设置 SvnFileVersionEventArgs.get_Time() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionEventArgs.AllInstances.UriGet">
            <summary>设置 SvnFileVersionEventArgs.get_Uri() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionEventArgs.AllInstances.VersionFileGet">
            <summary>设置 SvnFileVersionEventArgs.get_VersionFile() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionEventArgs.AllInstances.VersionFileSetString">
            <summary>设置 SvnFileVersionEventArgs.set_VersionFile(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionEventArgs.AllInstances.WriteToStream">
            <summary>设置 SvnFileVersionEventArgs.WriteTo(Stream output) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionEventArgs.AllInstances.WriteToStreamSvnFileVersionWriteArgs">
            <summary>设置 SvnFileVersionEventArgs.WriteTo(Stream output, SvnFileVersionWriteArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionEventArgs.AllInstances.WriteToString">
            <summary>设置 SvnFileVersionEventArgs.WriteTo(String outputFileName) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionEventArgs.AllInstances.WriteToStringSvnFileVersionWriteArgs">
            <summary>设置 SvnFileVersionEventArgs.WriteTo(String outputFileName, SvnFileVersionWriteArgs args) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnFileVersionWriteArgs">
            <summary>SharpSvn.SvnFileVersionWriteArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnFileVersionWriteArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnFileVersionWriteArgs.#ctor(SharpSvn.SvnFileVersionWriteArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnFileVersionWriteArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnFileVersionWriteArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionWriteArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionWriteArgs.CommandTypeGet">
            <summary>设置 SvnFileVersionWriteArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionWriteArgs.Constructor">
            <summary>设置 SvnFileVersionWriteArgs.SvnFileVersionWriteArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionWriteArgs.WriteInRepositoryFormatGet">
            <summary>设置 SvnFileVersionWriteArgs.get_WriteInRepositoryFormat() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionWriteArgs.WriteInRepositoryFormatSetBoolean">
            <summary>设置 SvnFileVersionWriteArgs.set_WriteInRepositoryFormat(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnFileVersionWriteArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionWriteArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnFileVersionWriteArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionWriteArgs.AllInstances.WriteInRepositoryFormatGet">
            <summary>设置 SvnFileVersionWriteArgs.get_WriteInRepositoryFormat() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionWriteArgs.AllInstances.WriteInRepositoryFormatSetBoolean">
            <summary>设置 SvnFileVersionWriteArgs.set_WriteInRepositoryFormat(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnFileVersionsArgs">
            <summary>SharpSvn.SvnFileVersionsArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnFileVersionsArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnFileVersionsArgs.#ctor(SharpSvn.SvnFileVersionsArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnFileVersionsArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnFileVersionsArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionsArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionsArgs.CommandTypeGet">
            <summary>设置 SvnFileVersionsArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionsArgs.Constructor">
            <summary>设置 SvnFileVersionsArgs.SvnFileVersionsArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionsArgs.EndGet">
            <summary>设置 SvnFileVersionsArgs.get_End() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionsArgs.EndSetSvnRevision">
            <summary>设置 SvnFileVersionsArgs.set_End(SvnRevision value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionsArgs.FileVersionAddEventHandlerOfSvnFileVersionEventArgs">
            <summary>设置 SvnFileVersionsArgs.add_FileVersion(EventHandler`1&lt;SvnFileVersionEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionsArgs.FileVersionRaiseObjectSvnFileVersionEventArgs">
            <summary>设置 SvnFileVersionsArgs.raise_FileVersion(Object sender, SvnFileVersionEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionsArgs.FileVersionRemoveEventHandlerOfSvnFileVersionEventArgs">
            <summary>设置 SvnFileVersionsArgs.remove_FileVersion(EventHandler`1&lt;SvnFileVersionEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionsArgs.KeywordExpansionGet">
            <summary>设置 SvnFileVersionsArgs.get_KeywordExpansion() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionsArgs.KeywordExpansionSetSvnKeywordExpansion">
            <summary>设置 SvnFileVersionsArgs.set_KeywordExpansion(SvnKeywordExpansion value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionsArgs.LineStyleGet">
            <summary>设置 SvnFileVersionsArgs.get_LineStyle() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionsArgs.LineStyleSetSvnLineStyle">
            <summary>设置 SvnFileVersionsArgs.set_LineStyle(SvnLineStyle value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionsArgs.OnFileVersionSvnFileVersionEventArgs">
            <summary>设置 SvnFileVersionsArgs.OnFileVersion(SvnFileVersionEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionsArgs.RangeGet">
            <summary>设置 SvnFileVersionsArgs.get_Range() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionsArgs.RangeSetSvnRevisionRange">
            <summary>设置 SvnFileVersionsArgs.set_Range(SvnRevisionRange value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionsArgs.RepairLineEndingsGet">
            <summary>设置 SvnFileVersionsArgs.get_RepairLineEndings() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionsArgs.RepairLineEndingsSetBoolean">
            <summary>设置 SvnFileVersionsArgs.set_RepairLineEndings(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionsArgs.RetrieveContentsGet">
            <summary>设置 SvnFileVersionsArgs.get_RetrieveContents() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionsArgs.RetrieveContentsSetBoolean">
            <summary>设置 SvnFileVersionsArgs.set_RetrieveContents(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionsArgs.RetrieveMergedRevisionsGet">
            <summary>设置 SvnFileVersionsArgs.get_RetrieveMergedRevisions() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionsArgs.RetrieveMergedRevisionsSetBoolean">
            <summary>设置 SvnFileVersionsArgs.set_RetrieveMergedRevisions(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionsArgs.RetrievePropertiesGet">
            <summary>设置 SvnFileVersionsArgs.get_RetrieveProperties() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionsArgs.RetrievePropertiesSetBoolean">
            <summary>设置 SvnFileVersionsArgs.set_RetrieveProperties(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionsArgs.StartGet">
            <summary>设置 SvnFileVersionsArgs.get_Start() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionsArgs.StartSetSvnRevision">
            <summary>设置 SvnFileVersionsArgs.set_Start(SvnRevision value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionsArgs.ToDirectoryGet">
            <summary>设置 SvnFileVersionsArgs.get_ToDirectory() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionsArgs.ToDirectorySetString">
            <summary>设置 SvnFileVersionsArgs.set_ToDirectory(String value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnFileVersionsArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionsArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnFileVersionsArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionsArgs.AllInstances.EndGet">
            <summary>设置 SvnFileVersionsArgs.get_End() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionsArgs.AllInstances.EndSetSvnRevision">
            <summary>设置 SvnFileVersionsArgs.set_End(SvnRevision value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionsArgs.AllInstances.FileVersionAddEventHandlerOfSvnFileVersionEventArgs">
            <summary>设置 SvnFileVersionsArgs.add_FileVersion(EventHandler`1&lt;SvnFileVersionEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionsArgs.AllInstances.FileVersionRaiseObjectSvnFileVersionEventArgs">
            <summary>设置 SvnFileVersionsArgs.raise_FileVersion(Object sender, SvnFileVersionEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionsArgs.AllInstances.FileVersionRemoveEventHandlerOfSvnFileVersionEventArgs">
            <summary>设置 SvnFileVersionsArgs.remove_FileVersion(EventHandler`1&lt;SvnFileVersionEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionsArgs.AllInstances.KeywordExpansionGet">
            <summary>设置 SvnFileVersionsArgs.get_KeywordExpansion() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionsArgs.AllInstances.KeywordExpansionSetSvnKeywordExpansion">
            <summary>设置 SvnFileVersionsArgs.set_KeywordExpansion(SvnKeywordExpansion value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionsArgs.AllInstances.LineStyleGet">
            <summary>设置 SvnFileVersionsArgs.get_LineStyle() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionsArgs.AllInstances.LineStyleSetSvnLineStyle">
            <summary>设置 SvnFileVersionsArgs.set_LineStyle(SvnLineStyle value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionsArgs.AllInstances.OnFileVersionSvnFileVersionEventArgs">
            <summary>设置 SvnFileVersionsArgs.OnFileVersion(SvnFileVersionEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionsArgs.AllInstances.RangeGet">
            <summary>设置 SvnFileVersionsArgs.get_Range() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionsArgs.AllInstances.RangeSetSvnRevisionRange">
            <summary>设置 SvnFileVersionsArgs.set_Range(SvnRevisionRange value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionsArgs.AllInstances.RepairLineEndingsGet">
            <summary>设置 SvnFileVersionsArgs.get_RepairLineEndings() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionsArgs.AllInstances.RepairLineEndingsSetBoolean">
            <summary>设置 SvnFileVersionsArgs.set_RepairLineEndings(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionsArgs.AllInstances.RetrieveContentsGet">
            <summary>设置 SvnFileVersionsArgs.get_RetrieveContents() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionsArgs.AllInstances.RetrieveContentsSetBoolean">
            <summary>设置 SvnFileVersionsArgs.set_RetrieveContents(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionsArgs.AllInstances.RetrieveMergedRevisionsGet">
            <summary>设置 SvnFileVersionsArgs.get_RetrieveMergedRevisions() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionsArgs.AllInstances.RetrieveMergedRevisionsSetBoolean">
            <summary>设置 SvnFileVersionsArgs.set_RetrieveMergedRevisions(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionsArgs.AllInstances.RetrievePropertiesGet">
            <summary>设置 SvnFileVersionsArgs.get_RetrieveProperties() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionsArgs.AllInstances.RetrievePropertiesSetBoolean">
            <summary>设置 SvnFileVersionsArgs.set_RetrieveProperties(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionsArgs.AllInstances.StartGet">
            <summary>设置 SvnFileVersionsArgs.get_Start() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionsArgs.AllInstances.StartSetSvnRevision">
            <summary>设置 SvnFileVersionsArgs.set_Start(SvnRevision value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionsArgs.AllInstances.ToDirectoryGet">
            <summary>设置 SvnFileVersionsArgs.get_ToDirectory() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFileVersionsArgs.AllInstances.ToDirectorySetString">
            <summary>设置 SvnFileVersionsArgs.set_ToDirectory(String value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnFormatException">
            <summary>SharpSvn.SvnFormatException 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnFormatException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnFormatException.#ctor(SharpSvn.SvnFormatException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnFormatException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnFormatException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnFormatException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFormatException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFormatException.Constructor">
            <summary>设置 SvnFormatException.SvnFormatException() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFormatException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 SvnFormatException.SvnFormatException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFormatException.ConstructorString">
            <summary>设置 SvnFormatException.SvnFormatException(String message) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnFormatException.ConstructorStringException">
            <summary>设置 SvnFormatException.SvnFormatException(String message, Exception inner) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnFormatException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnGetAppliedMergeInfoArgs">
            <summary>SharpSvn.SvnGetAppliedMergeInfoArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnGetAppliedMergeInfoArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnGetAppliedMergeInfoArgs.#ctor(SharpSvn.SvnGetAppliedMergeInfoArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnGetAppliedMergeInfoArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnGetAppliedMergeInfoArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnGetAppliedMergeInfoArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnGetAppliedMergeInfoArgs.CommandTypeGet">
            <summary>设置 SvnGetAppliedMergeInfoArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnGetAppliedMergeInfoArgs.Constructor">
            <summary>设置 SvnGetAppliedMergeInfoArgs.SvnGetAppliedMergeInfoArgs() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnGetAppliedMergeInfoArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnGetAppliedMergeInfoArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnGetAppliedMergeInfoArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnGetCapabilitiesArgs">
            <summary>SharpSvn.SvnGetCapabilitiesArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnGetCapabilitiesArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnGetCapabilitiesArgs.#ctor(SharpSvn.SvnGetCapabilitiesArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnGetCapabilitiesArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnGetCapabilitiesArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnGetCapabilitiesArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnGetCapabilitiesArgs.CapabilitiesGet">
            <summary>设置 SvnGetCapabilitiesArgs.get_Capabilities() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnGetCapabilitiesArgs.CommandTypeGet">
            <summary>设置 SvnGetCapabilitiesArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnGetCapabilitiesArgs.Constructor">
            <summary>设置 SvnGetCapabilitiesArgs.SvnGetCapabilitiesArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnGetCapabilitiesArgs.RetrieveAllCapabilitiesGet">
            <summary>设置 SvnGetCapabilitiesArgs.get_RetrieveAllCapabilities() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnGetCapabilitiesArgs.RetrieveAllCapabilitiesSetBoolean">
            <summary>设置 SvnGetCapabilitiesArgs.set_RetrieveAllCapabilities(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnGetCapabilitiesArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnGetCapabilitiesArgs.AllInstances.CapabilitiesGet">
            <summary>设置 SvnGetCapabilitiesArgs.get_Capabilities() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnGetCapabilitiesArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnGetCapabilitiesArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnGetCapabilitiesArgs.AllInstances.RetrieveAllCapabilitiesGet">
            <summary>设置 SvnGetCapabilitiesArgs.get_RetrieveAllCapabilities() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnGetCapabilitiesArgs.AllInstances.RetrieveAllCapabilitiesSetBoolean">
            <summary>设置 SvnGetCapabilitiesArgs.set_RetrieveAllCapabilities(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnGetPropertyArgs">
            <summary>SharpSvn.SvnGetPropertyArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnGetPropertyArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnGetPropertyArgs.#ctor(SharpSvn.SvnGetPropertyArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnGetPropertyArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnGetPropertyArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnGetPropertyArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnGetPropertyArgs.ChangeListsGet">
            <summary>设置 SvnGetPropertyArgs.get_ChangeLists() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnGetPropertyArgs.CommandTypeGet">
            <summary>设置 SvnGetPropertyArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnGetPropertyArgs.Constructor">
            <summary>设置 SvnGetPropertyArgs.SvnGetPropertyArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnGetPropertyArgs.DepthGet">
            <summary>设置 SvnGetPropertyArgs.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnGetPropertyArgs.DepthSetSvnDepth">
            <summary>设置 SvnGetPropertyArgs.set_Depth(SvnDepth value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnGetPropertyArgs.RevisionGet">
            <summary>设置 SvnGetPropertyArgs.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnGetPropertyArgs.RevisionSetSvnRevision">
            <summary>设置 SvnGetPropertyArgs.set_Revision(SvnRevision value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnGetPropertyArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnGetPropertyArgs.AllInstances.ChangeListsGet">
            <summary>设置 SvnGetPropertyArgs.get_ChangeLists() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnGetPropertyArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnGetPropertyArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnGetPropertyArgs.AllInstances.DepthGet">
            <summary>设置 SvnGetPropertyArgs.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnGetPropertyArgs.AllInstances.DepthSetSvnDepth">
            <summary>设置 SvnGetPropertyArgs.set_Depth(SvnDepth value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnGetPropertyArgs.AllInstances.RevisionGet">
            <summary>设置 SvnGetPropertyArgs.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnGetPropertyArgs.AllInstances.RevisionSetSvnRevision">
            <summary>设置 SvnGetPropertyArgs.set_Revision(SvnRevision value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnGetRevisionPropertyArgs">
            <summary>SharpSvn.SvnGetRevisionPropertyArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnGetRevisionPropertyArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnGetRevisionPropertyArgs.#ctor(SharpSvn.SvnGetRevisionPropertyArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnGetRevisionPropertyArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnGetRevisionPropertyArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnGetRevisionPropertyArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnGetRevisionPropertyArgs.CommandTypeGet">
            <summary>设置 SvnGetRevisionPropertyArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnGetRevisionPropertyArgs.Constructor">
            <summary>设置 SvnGetRevisionPropertyArgs.SvnGetRevisionPropertyArgs() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnGetRevisionPropertyArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnGetRevisionPropertyArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnGetRevisionPropertyArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnGetSuggestedMergeSourcesArgs">
            <summary>SharpSvn.SvnGetSuggestedMergeSourcesArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnGetSuggestedMergeSourcesArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnGetSuggestedMergeSourcesArgs.#ctor(SharpSvn.SvnGetSuggestedMergeSourcesArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnGetSuggestedMergeSourcesArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnGetSuggestedMergeSourcesArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnGetSuggestedMergeSourcesArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnGetSuggestedMergeSourcesArgs.CommandTypeGet">
            <summary>设置 SvnGetSuggestedMergeSourcesArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnGetSuggestedMergeSourcesArgs.Constructor">
            <summary>设置 SvnGetSuggestedMergeSourcesArgs.SvnGetSuggestedMergeSourcesArgs() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnGetSuggestedMergeSourcesArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnGetSuggestedMergeSourcesArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnGetSuggestedMergeSourcesArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnGetWorkingCopyVersionArgs">
            <summary>SharpSvn.SvnGetWorkingCopyVersionArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnGetWorkingCopyVersionArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnGetWorkingCopyVersionArgs.#ctor(SharpSvn.SvnGetWorkingCopyVersionArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnGetWorkingCopyVersionArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnGetWorkingCopyVersionArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnGetWorkingCopyVersionArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnGetWorkingCopyVersionArgs.CommandTypeGet">
            <summary>设置 SvnGetWorkingCopyVersionArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnGetWorkingCopyVersionArgs.Constructor">
            <summary>设置 SvnGetWorkingCopyVersionArgs.SvnGetWorkingCopyVersionArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnGetWorkingCopyVersionArgs.TrailGet">
            <summary>设置 SvnGetWorkingCopyVersionArgs.get_Trail() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnGetWorkingCopyVersionArgs.TrailSetString">
            <summary>设置 SvnGetWorkingCopyVersionArgs.set_Trail(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnGetWorkingCopyVersionArgs.UseCommittedRevisionsGet">
            <summary>设置 SvnGetWorkingCopyVersionArgs.get_UseCommittedRevisions() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnGetWorkingCopyVersionArgs.UseCommittedRevisionsSetBoolean">
            <summary>设置 SvnGetWorkingCopyVersionArgs.set_UseCommittedRevisions(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnGetWorkingCopyVersionArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnGetWorkingCopyVersionArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnGetWorkingCopyVersionArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnGetWorkingCopyVersionArgs.AllInstances.TrailGet">
            <summary>设置 SvnGetWorkingCopyVersionArgs.get_Trail() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnGetWorkingCopyVersionArgs.AllInstances.TrailSetString">
            <summary>设置 SvnGetWorkingCopyVersionArgs.set_Trail(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnGetWorkingCopyVersionArgs.AllInstances.UseCommittedRevisionsGet">
            <summary>设置 SvnGetWorkingCopyVersionArgs.get_UseCommittedRevisions() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnGetWorkingCopyVersionArgs.AllInstances.UseCommittedRevisionsSetBoolean">
            <summary>设置 SvnGetWorkingCopyVersionArgs.set_UseCommittedRevisions(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnHookArguments">
            <summary>SharpSvn.SvnHookArguments 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnHookArguments.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnHookArguments.#ctor(SharpSvn.SvnHookArguments)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnHookArguments.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnHookArguments.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnHookArguments.ActionGet">
            <summary>设置 SvnHookArguments.get_Action() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnHookArguments.ActionSetString">
            <summary>设置 SvnHookArguments.set_Action(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnHookArguments.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnHookArguments.CapabilitiesGet">
            <summary>设置 SvnHookArguments.get_Capabilities() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnHookArguments.CapabilitiesSetCollectionOfString">
            <summary>设置 SvnHookArguments.set_Capabilities(Collection`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnHookArguments.Constructor">
            <summary>设置 SvnHookArguments.SvnHookArguments() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnHookArguments.GetHookFileNameStringSvnHookType">
            <summary>设置 SvnHookArguments.GetHookFileName(String path, SvnHookType hookType) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnHookArguments.LookOriginGet">
            <summary>设置 SvnHookArguments.get_LookOrigin() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnHookArguments.NewValueGet">
            <summary>设置 SvnHookArguments.get_NewValue() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnHookArguments.NewValueSetString">
            <summary>设置 SvnHookArguments.set_NewValue(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnHookArguments.ParseHookArgumentsStringArraySvnHookTypeBooleanSvnHookArgumentsOut">
            <summary>设置 SvnHookArguments.ParseHookArguments(String[] args, SvnHookType hookType, Boolean useConsole, SvnHookArguments&amp; data) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnHookArguments.ParsePostCommitStringArrayBooleanSvnHookArgumentsOut">
            <summary>设置 SvnHookArguments.ParsePostCommit(String[] args, Boolean useConsole, SvnHookArguments&amp; data) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnHookArguments.ParsePostLockStringArrayBooleanSvnHookArgumentsOut">
            <summary>设置 SvnHookArguments.ParsePostLock(String[] args, Boolean useConsole, SvnHookArguments&amp; data) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnHookArguments.ParsePostRevPropChangeStringArrayBooleanSvnHookArgumentsOut">
            <summary>设置 SvnHookArguments.ParsePostRevPropChange(String[] args, Boolean useConsole, SvnHookArguments&amp; data) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnHookArguments.ParsePostUnlockStringArrayBooleanSvnHookArgumentsOut">
            <summary>设置 SvnHookArguments.ParsePostUnlock(String[] args, Boolean useConsole, SvnHookArguments&amp; data) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnHookArguments.ParsePreCommitStringArrayBooleanSvnHookArgumentsOut">
            <summary>设置 SvnHookArguments.ParsePreCommit(String[] args, Boolean useConsole, SvnHookArguments&amp; data) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnHookArguments.ParsePreLockStringArrayBooleanSvnHookArgumentsOut">
            <summary>设置 SvnHookArguments.ParsePreLock(String[] args, Boolean useConsole, SvnHookArguments&amp; data) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnHookArguments.ParsePreRevPropChangeStringArrayBooleanSvnHookArgumentsOut">
            <summary>设置 SvnHookArguments.ParsePreRevPropChange(String[] args, Boolean useConsole, SvnHookArguments&amp; data) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnHookArguments.ParsePreUnlockStringArrayBooleanSvnHookArgumentsOut">
            <summary>设置 SvnHookArguments.ParsePreUnlock(String[] args, Boolean useConsole, SvnHookArguments&amp; data) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnHookArguments.ParseStartCommitStringArrayBooleanSvnHookArgumentsOut">
            <summary>设置 SvnHookArguments.ParseStartCommit(String[] args, Boolean useConsole, SvnHookArguments&amp; data) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnHookArguments.PathGet">
            <summary>设置 SvnHookArguments.get_Path() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnHookArguments.PathSetString">
            <summary>设置 SvnHookArguments.set_Path(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnHookArguments.PreviousValueGet">
            <summary>设置 SvnHookArguments.get_PreviousValue() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnHookArguments.PreviousValueSetString">
            <summary>设置 SvnHookArguments.set_PreviousValue(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnHookArguments.PropertyNameGet">
            <summary>设置 SvnHookArguments.get_PropertyName() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnHookArguments.PropertyNameSetString">
            <summary>设置 SvnHookArguments.set_PropertyName(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnHookArguments.ReadStdInText">
            <summary>设置 SvnHookArguments.ReadStdInText() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnHookArguments.RepositoryPathGet">
            <summary>设置 SvnHookArguments.get_RepositoryPath() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnHookArguments.RepositoryPathSetString">
            <summary>设置 SvnHookArguments.set_RepositoryPath(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnHookArguments.RevisionGet">
            <summary>设置 SvnHookArguments.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnHookArguments.RevisionSetInt64">
            <summary>设置 SvnHookArguments.set_Revision(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnHookArguments.TransactionNameGet">
            <summary>设置 SvnHookArguments.get_TransactionName() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnHookArguments.TransactionNameSetString">
            <summary>设置 SvnHookArguments.set_TransactionName(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnHookArguments.UserGet">
            <summary>设置 SvnHookArguments.get_User() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnHookArguments.UserSetString">
            <summary>设置 SvnHookArguments.set_User(String value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnHookArguments.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnHookArguments.AllInstances.ActionGet">
            <summary>设置 SvnHookArguments.get_Action() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnHookArguments.AllInstances.ActionSetString">
            <summary>设置 SvnHookArguments.set_Action(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnHookArguments.AllInstances.CapabilitiesGet">
            <summary>设置 SvnHookArguments.get_Capabilities() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnHookArguments.AllInstances.CapabilitiesSetCollectionOfString">
            <summary>设置 SvnHookArguments.set_Capabilities(Collection`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnHookArguments.AllInstances.LookOriginGet">
            <summary>设置 SvnHookArguments.get_LookOrigin() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnHookArguments.AllInstances.NewValueGet">
            <summary>设置 SvnHookArguments.get_NewValue() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnHookArguments.AllInstances.NewValueSetString">
            <summary>设置 SvnHookArguments.set_NewValue(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnHookArguments.AllInstances.PathGet">
            <summary>设置 SvnHookArguments.get_Path() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnHookArguments.AllInstances.PathSetString">
            <summary>设置 SvnHookArguments.set_Path(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnHookArguments.AllInstances.PreviousValueGet">
            <summary>设置 SvnHookArguments.get_PreviousValue() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnHookArguments.AllInstances.PreviousValueSetString">
            <summary>设置 SvnHookArguments.set_PreviousValue(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnHookArguments.AllInstances.PropertyNameGet">
            <summary>设置 SvnHookArguments.get_PropertyName() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnHookArguments.AllInstances.PropertyNameSetString">
            <summary>设置 SvnHookArguments.set_PropertyName(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnHookArguments.AllInstances.RepositoryPathGet">
            <summary>设置 SvnHookArguments.get_RepositoryPath() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnHookArguments.AllInstances.RepositoryPathSetString">
            <summary>设置 SvnHookArguments.set_RepositoryPath(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnHookArguments.AllInstances.RevisionGet">
            <summary>设置 SvnHookArguments.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnHookArguments.AllInstances.RevisionSetInt64">
            <summary>设置 SvnHookArguments.set_Revision(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnHookArguments.AllInstances.TransactionNameGet">
            <summary>设置 SvnHookArguments.get_TransactionName() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnHookArguments.AllInstances.TransactionNameSetString">
            <summary>设置 SvnHookArguments.set_TransactionName(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnHookArguments.AllInstances.UserGet">
            <summary>设置 SvnHookArguments.get_User() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnHookArguments.AllInstances.UserSetString">
            <summary>设置 SvnHookArguments.set_User(String value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnHotCopyRepositoryArgs">
            <summary>SharpSvn.SvnHotCopyRepositoryArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnHotCopyRepositoryArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnHotCopyRepositoryArgs.#ctor(SharpSvn.SvnHotCopyRepositoryArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnHotCopyRepositoryArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnHotCopyRepositoryArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnHotCopyRepositoryArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnHotCopyRepositoryArgs.CleanLogFilesGet">
            <summary>设置 SvnHotCopyRepositoryArgs.get_CleanLogFiles() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnHotCopyRepositoryArgs.CleanLogFilesSetBoolean">
            <summary>设置 SvnHotCopyRepositoryArgs.set_CleanLogFiles(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnHotCopyRepositoryArgs.CommandTypeGet">
            <summary>设置 SvnHotCopyRepositoryArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnHotCopyRepositoryArgs.Constructor">
            <summary>设置 SvnHotCopyRepositoryArgs.SvnHotCopyRepositoryArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnHotCopyRepositoryArgs.IncrementalGet">
            <summary>设置 SvnHotCopyRepositoryArgs.get_Incremental() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnHotCopyRepositoryArgs.IncrementalSetBoolean">
            <summary>设置 SvnHotCopyRepositoryArgs.set_Incremental(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnHotCopyRepositoryArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnHotCopyRepositoryArgs.AllInstances.CleanLogFilesGet">
            <summary>设置 SvnHotCopyRepositoryArgs.get_CleanLogFiles() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnHotCopyRepositoryArgs.AllInstances.CleanLogFilesSetBoolean">
            <summary>设置 SvnHotCopyRepositoryArgs.set_CleanLogFiles(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnHotCopyRepositoryArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnHotCopyRepositoryArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnHotCopyRepositoryArgs.AllInstances.IncrementalGet">
            <summary>设置 SvnHotCopyRepositoryArgs.get_Incremental() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnHotCopyRepositoryArgs.AllInstances.IncrementalSetBoolean">
            <summary>设置 SvnHotCopyRepositoryArgs.set_Incremental(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnIOException">
            <summary>SharpSvn.SvnIOException 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnIOException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnIOException.#ctor(SharpSvn.SvnIOException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnIOException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnIOException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnIOException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnIOException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnIOException.Constructor">
            <summary>设置 SvnIOException.SvnIOException() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnIOException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 SvnIOException.SvnIOException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnIOException.ConstructorString">
            <summary>设置 SvnIOException.SvnIOException(String message) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnIOException.ConstructorStringException">
            <summary>设置 SvnIOException.SvnIOException(String message, Exception inner) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnIOException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnIllegalTargetException">
            <summary>SharpSvn.SvnIllegalTargetException 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnIllegalTargetException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnIllegalTargetException.#ctor(SharpSvn.SvnIllegalTargetException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnIllegalTargetException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnIllegalTargetException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnIllegalTargetException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnIllegalTargetException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnIllegalTargetException.Constructor">
            <summary>设置 SvnIllegalTargetException.SvnIllegalTargetException() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnIllegalTargetException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 SvnIllegalTargetException.SvnIllegalTargetException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnIllegalTargetException.ConstructorString">
            <summary>设置 SvnIllegalTargetException.SvnIllegalTargetException(String message) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnIllegalTargetException.ConstructorStringException">
            <summary>设置 SvnIllegalTargetException.SvnIllegalTargetException(String message, Exception inner) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnIllegalTargetException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnImportArgs">
            <summary>SharpSvn.SvnImportArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnImportArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnImportArgs.#ctor(SharpSvn.SvnImportArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnImportArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnImportArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnImportArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnImportArgs.CommandTypeGet">
            <summary>设置 SvnImportArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnImportArgs.Constructor">
            <summary>设置 SvnImportArgs.SvnImportArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnImportArgs.DepthGet">
            <summary>设置 SvnImportArgs.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnImportArgs.DepthSetSvnDepth">
            <summary>设置 SvnImportArgs.set_Depth(SvnDepth value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnImportArgs.FilterAddEventHandlerOfSvnImportFilterEventArgs">
            <summary>设置 SvnImportArgs.add_Filter(EventHandler`1&lt;SvnImportFilterEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnImportArgs.FilterRaiseObjectSvnImportFilterEventArgs">
            <summary>设置 SvnImportArgs.raise_Filter(Object sender, SvnImportFilterEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnImportArgs.FilterRemoveEventHandlerOfSvnImportFilterEventArgs">
            <summary>设置 SvnImportArgs.remove_Filter(EventHandler`1&lt;SvnImportFilterEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnImportArgs.HandleOnSvnErrorObjectSvnErrorEventArgs">
            <summary>设置 SvnImportArgs.HandleOnSvnError(Object sender, SvnErrorEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnImportArgs.HasFilterGet">
            <summary>设置 SvnImportArgs.get_HasFilter() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnImportArgs.IgnoreUnknownNodeTypesGet">
            <summary>设置 SvnImportArgs.get_IgnoreUnknownNodeTypes() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnImportArgs.IgnoreUnknownNodeTypesSetBoolean">
            <summary>设置 SvnImportArgs.set_IgnoreUnknownNodeTypes(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnImportArgs.NoAutoPropsGet">
            <summary>设置 SvnImportArgs.get_NoAutoProps() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnImportArgs.NoAutoPropsSetBoolean">
            <summary>设置 SvnImportArgs.set_NoAutoProps(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnImportArgs.NoIgnoreGet">
            <summary>设置 SvnImportArgs.get_NoIgnore() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnImportArgs.NoIgnoreSetBoolean">
            <summary>设置 SvnImportArgs.set_NoIgnore(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnImportArgs.OnFilterSvnImportFilterEventArgs">
            <summary>设置 SvnImportArgs.OnFilter(SvnImportFilterEventArgs e) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnImportArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnImportArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnImportArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnImportArgs.AllInstances.DepthGet">
            <summary>设置 SvnImportArgs.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnImportArgs.AllInstances.DepthSetSvnDepth">
            <summary>设置 SvnImportArgs.set_Depth(SvnDepth value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnImportArgs.AllInstances.FilterAddEventHandlerOfSvnImportFilterEventArgs">
            <summary>设置 SvnImportArgs.add_Filter(EventHandler`1&lt;SvnImportFilterEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnImportArgs.AllInstances.FilterRaiseObjectSvnImportFilterEventArgs">
            <summary>设置 SvnImportArgs.raise_Filter(Object sender, SvnImportFilterEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnImportArgs.AllInstances.FilterRemoveEventHandlerOfSvnImportFilterEventArgs">
            <summary>设置 SvnImportArgs.remove_Filter(EventHandler`1&lt;SvnImportFilterEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnImportArgs.AllInstances.HandleOnSvnErrorObjectSvnErrorEventArgs">
            <summary>设置 SvnImportArgs.HandleOnSvnError(Object sender, SvnErrorEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnImportArgs.AllInstances.HasFilterGet">
            <summary>设置 SvnImportArgs.get_HasFilter() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnImportArgs.AllInstances.IgnoreUnknownNodeTypesGet">
            <summary>设置 SvnImportArgs.get_IgnoreUnknownNodeTypes() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnImportArgs.AllInstances.IgnoreUnknownNodeTypesSetBoolean">
            <summary>设置 SvnImportArgs.set_IgnoreUnknownNodeTypes(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnImportArgs.AllInstances.NoAutoPropsGet">
            <summary>设置 SvnImportArgs.get_NoAutoProps() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnImportArgs.AllInstances.NoAutoPropsSetBoolean">
            <summary>设置 SvnImportArgs.set_NoAutoProps(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnImportArgs.AllInstances.NoIgnoreGet">
            <summary>设置 SvnImportArgs.get_NoIgnore() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnImportArgs.AllInstances.NoIgnoreSetBoolean">
            <summary>设置 SvnImportArgs.set_NoIgnore(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnImportArgs.AllInstances.OnFilterSvnImportFilterEventArgs">
            <summary>设置 SvnImportArgs.OnFilter(SvnImportFilterEventArgs e) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnImportFilterEventArgs">
            <summary>SharpSvn.SvnImportFilterEventArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnImportFilterEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnImportFilterEventArgs.#ctor(SharpSvn.SvnImportFilterEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnImportFilterEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnImportFilterEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnImportFilterEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnImportFilterEventArgs.FilterGet">
            <summary>设置 SvnImportFilterEventArgs.get_Filter() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnImportFilterEventArgs.FilterSetBoolean">
            <summary>设置 SvnImportFilterEventArgs.set_Filter(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnImportFilterEventArgs.FullPathGet">
            <summary>设置 SvnImportFilterEventArgs.get_FullPath() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnImportFilterEventArgs.IsSymlinkGet">
            <summary>设置 SvnImportFilterEventArgs.get_IsSymlink() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnImportFilterEventArgs.NodeKindGet">
            <summary>设置 SvnImportFilterEventArgs.get_NodeKind() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnImportFilterEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnImportFilterEventArgs.AllInstances.FilterGet">
            <summary>设置 SvnImportFilterEventArgs.get_Filter() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnImportFilterEventArgs.AllInstances.FilterSetBoolean">
            <summary>设置 SvnImportFilterEventArgs.set_Filter(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnImportFilterEventArgs.AllInstances.FullPathGet">
            <summary>设置 SvnImportFilterEventArgs.get_FullPath() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnImportFilterEventArgs.AllInstances.IsSymlinkGet">
            <summary>设置 SvnImportFilterEventArgs.get_IsSymlink() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnImportFilterEventArgs.AllInstances.NodeKindGet">
            <summary>设置 SvnImportFilterEventArgs.get_NodeKind() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnInfoArgs">
            <summary>SharpSvn.SvnInfoArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnInfoArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnInfoArgs.#ctor(SharpSvn.SvnInfoArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnInfoArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnInfoArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoArgs.ChangeListsGet">
            <summary>设置 SvnInfoArgs.get_ChangeLists() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoArgs.CommandTypeGet">
            <summary>设置 SvnInfoArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoArgs.Constructor">
            <summary>设置 SvnInfoArgs.SvnInfoArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoArgs.DepthGet">
            <summary>设置 SvnInfoArgs.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoArgs.DepthSetSvnDepth">
            <summary>设置 SvnInfoArgs.set_Depth(SvnDepth value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoArgs.InfoAddEventHandlerOfSvnInfoEventArgs">
            <summary>设置 SvnInfoArgs.add_Info(EventHandler`1&lt;SvnInfoEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoArgs.InfoRaiseObjectSvnInfoEventArgs">
            <summary>设置 SvnInfoArgs.raise_Info(Object sender, SvnInfoEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoArgs.InfoRemoveEventHandlerOfSvnInfoEventArgs">
            <summary>设置 SvnInfoArgs.remove_Info(EventHandler`1&lt;SvnInfoEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoArgs.OnInfoSvnInfoEventArgs">
            <summary>设置 SvnInfoArgs.OnInfo(SvnInfoEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoArgs.RetrieveActualOnlyGet">
            <summary>设置 SvnInfoArgs.get_RetrieveActualOnly() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoArgs.RetrieveActualOnlySetBoolean">
            <summary>设置 SvnInfoArgs.set_RetrieveActualOnly(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoArgs.RetrieveExcludedGet">
            <summary>设置 SvnInfoArgs.get_RetrieveExcluded() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoArgs.RetrieveExcludedSetBoolean">
            <summary>设置 SvnInfoArgs.set_RetrieveExcluded(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoArgs.RevisionGet">
            <summary>设置 SvnInfoArgs.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoArgs.RevisionSetSvnRevision">
            <summary>设置 SvnInfoArgs.set_Revision(SvnRevision value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnInfoArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoArgs.AllInstances.ChangeListsGet">
            <summary>设置 SvnInfoArgs.get_ChangeLists() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnInfoArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoArgs.AllInstances.DepthGet">
            <summary>设置 SvnInfoArgs.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoArgs.AllInstances.DepthSetSvnDepth">
            <summary>设置 SvnInfoArgs.set_Depth(SvnDepth value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoArgs.AllInstances.InfoAddEventHandlerOfSvnInfoEventArgs">
            <summary>设置 SvnInfoArgs.add_Info(EventHandler`1&lt;SvnInfoEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoArgs.AllInstances.InfoRaiseObjectSvnInfoEventArgs">
            <summary>设置 SvnInfoArgs.raise_Info(Object sender, SvnInfoEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoArgs.AllInstances.InfoRemoveEventHandlerOfSvnInfoEventArgs">
            <summary>设置 SvnInfoArgs.remove_Info(EventHandler`1&lt;SvnInfoEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoArgs.AllInstances.OnInfoSvnInfoEventArgs">
            <summary>设置 SvnInfoArgs.OnInfo(SvnInfoEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoArgs.AllInstances.RetrieveActualOnlyGet">
            <summary>设置 SvnInfoArgs.get_RetrieveActualOnly() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoArgs.AllInstances.RetrieveActualOnlySetBoolean">
            <summary>设置 SvnInfoArgs.set_RetrieveActualOnly(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoArgs.AllInstances.RetrieveExcludedGet">
            <summary>设置 SvnInfoArgs.get_RetrieveExcluded() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoArgs.AllInstances.RetrieveExcludedSetBoolean">
            <summary>设置 SvnInfoArgs.set_RetrieveExcluded(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoArgs.AllInstances.RevisionGet">
            <summary>设置 SvnInfoArgs.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoArgs.AllInstances.RevisionSetSvnRevision">
            <summary>设置 SvnInfoArgs.set_Revision(SvnRevision value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnInfoEventArgs">
            <summary>SharpSvn.SvnInfoEventArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnInfoEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnInfoEventArgs.#ctor(SharpSvn.SvnInfoEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnInfoEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnInfoEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.ChangeListGet">
            <summary>设置 SvnInfoEventArgs.get_ChangeList() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.ChecksumGet">
            <summary>设置 SvnInfoEventArgs.get_Checksum() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.ConflictNewGet">
            <summary>设置 SvnInfoEventArgs.get_ConflictNew() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.ConflictOldGet">
            <summary>设置 SvnInfoEventArgs.get_ConflictOld() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.ConflictWorkGet">
            <summary>设置 SvnInfoEventArgs.get_ConflictWork() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.ConflictedGet">
            <summary>设置 SvnInfoEventArgs.get_Conflicted() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.ConflictsGet">
            <summary>设置 SvnInfoEventArgs.get_Conflicts() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.ContentTimeGet">
            <summary>设置 SvnInfoEventArgs.get_ContentTime() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.CopyFromRevGet">
            <summary>设置 SvnInfoEventArgs.get_CopyFromRev() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.CopyFromRevisionGet">
            <summary>设置 SvnInfoEventArgs.get_CopyFromRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.CopyFromUriGet">
            <summary>设置 SvnInfoEventArgs.get_CopyFromUri() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.DepthGet">
            <summary>设置 SvnInfoEventArgs.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.DetachBoolean">
            <summary>设置 SvnInfoEventArgs.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.FullPathGet">
            <summary>设置 SvnInfoEventArgs.get_FullPath() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.GetHashCode">
            <summary>设置 SvnInfoEventArgs.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.HasLocalInfoGet">
            <summary>设置 SvnInfoEventArgs.get_HasLocalInfo() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.LastChangeAuthorGet">
            <summary>设置 SvnInfoEventArgs.get_LastChangeAuthor() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.LastChangeRevisionGet">
            <summary>设置 SvnInfoEventArgs.get_LastChangeRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.LastChangeTimeGet">
            <summary>设置 SvnInfoEventArgs.get_LastChangeTime() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.LockGet">
            <summary>设置 SvnInfoEventArgs.get_Lock() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.MovedFromGet">
            <summary>设置 SvnInfoEventArgs.get_MovedFrom() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.MovedToGet">
            <summary>设置 SvnInfoEventArgs.get_MovedTo() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.NodeKindGet">
            <summary>设置 SvnInfoEventArgs.get_NodeKind() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.PathGet">
            <summary>设置 SvnInfoEventArgs.get_Path() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.PropertyEditFileGet">
            <summary>设置 SvnInfoEventArgs.get_PropertyEditFile() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.PropertyTimeGet">
            <summary>设置 SvnInfoEventArgs.get_PropertyTime() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.RepositoryIdGet">
            <summary>设置 SvnInfoEventArgs.get_RepositoryId() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.RepositoryIdValueGet">
            <summary>设置 SvnInfoEventArgs.get_RepositoryIdValue() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.RepositoryRootGet">
            <summary>设置 SvnInfoEventArgs.get_RepositoryRoot() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.RepositorySizeGet">
            <summary>设置 SvnInfoEventArgs.get_RepositorySize() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.RevisionGet">
            <summary>设置 SvnInfoEventArgs.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.ScheduleGet">
            <summary>设置 SvnInfoEventArgs.get_Schedule() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.TreeConflictGet">
            <summary>设置 SvnInfoEventArgs.get_TreeConflict() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.UriGet">
            <summary>设置 SvnInfoEventArgs.get_Uri() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.WorkingCopyRootGet">
            <summary>设置 SvnInfoEventArgs.get_WorkingCopyRoot() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.WorkingCopySizeGet">
            <summary>设置 SvnInfoEventArgs.get_WorkingCopySize() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnInfoEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.AllInstances.ChangeListGet">
            <summary>设置 SvnInfoEventArgs.get_ChangeList() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.AllInstances.ChecksumGet">
            <summary>设置 SvnInfoEventArgs.get_Checksum() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.AllInstances.ConflictNewGet">
            <summary>设置 SvnInfoEventArgs.get_ConflictNew() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.AllInstances.ConflictOldGet">
            <summary>设置 SvnInfoEventArgs.get_ConflictOld() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.AllInstances.ConflictWorkGet">
            <summary>设置 SvnInfoEventArgs.get_ConflictWork() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.AllInstances.ConflictedGet">
            <summary>设置 SvnInfoEventArgs.get_Conflicted() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.AllInstances.ConflictsGet">
            <summary>设置 SvnInfoEventArgs.get_Conflicts() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.AllInstances.ContentTimeGet">
            <summary>设置 SvnInfoEventArgs.get_ContentTime() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.AllInstances.CopyFromRevGet">
            <summary>设置 SvnInfoEventArgs.get_CopyFromRev() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.AllInstances.CopyFromRevisionGet">
            <summary>设置 SvnInfoEventArgs.get_CopyFromRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.AllInstances.CopyFromUriGet">
            <summary>设置 SvnInfoEventArgs.get_CopyFromUri() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.AllInstances.DepthGet">
            <summary>设置 SvnInfoEventArgs.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.AllInstances.DetachBoolean">
            <summary>设置 SvnInfoEventArgs.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.AllInstances.FullPathGet">
            <summary>设置 SvnInfoEventArgs.get_FullPath() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.AllInstances.GetHashCode01">
            <summary>设置 SvnInfoEventArgs.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.AllInstances.HasLocalInfoGet">
            <summary>设置 SvnInfoEventArgs.get_HasLocalInfo() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.AllInstances.LastChangeAuthorGet">
            <summary>设置 SvnInfoEventArgs.get_LastChangeAuthor() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.AllInstances.LastChangeRevisionGet">
            <summary>设置 SvnInfoEventArgs.get_LastChangeRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.AllInstances.LastChangeTimeGet">
            <summary>设置 SvnInfoEventArgs.get_LastChangeTime() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.AllInstances.LockGet">
            <summary>设置 SvnInfoEventArgs.get_Lock() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.AllInstances.MovedFromGet">
            <summary>设置 SvnInfoEventArgs.get_MovedFrom() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.AllInstances.MovedToGet">
            <summary>设置 SvnInfoEventArgs.get_MovedTo() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.AllInstances.NodeKindGet">
            <summary>设置 SvnInfoEventArgs.get_NodeKind() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.AllInstances.PathGet">
            <summary>设置 SvnInfoEventArgs.get_Path() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.AllInstances.PropertyEditFileGet">
            <summary>设置 SvnInfoEventArgs.get_PropertyEditFile() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.AllInstances.PropertyTimeGet">
            <summary>设置 SvnInfoEventArgs.get_PropertyTime() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.AllInstances.RepositoryIdGet">
            <summary>设置 SvnInfoEventArgs.get_RepositoryId() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.AllInstances.RepositoryIdValueGet">
            <summary>设置 SvnInfoEventArgs.get_RepositoryIdValue() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.AllInstances.RepositoryRootGet">
            <summary>设置 SvnInfoEventArgs.get_RepositoryRoot() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.AllInstances.RepositorySizeGet">
            <summary>设置 SvnInfoEventArgs.get_RepositorySize() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.AllInstances.RevisionGet">
            <summary>设置 SvnInfoEventArgs.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.AllInstances.ScheduleGet">
            <summary>设置 SvnInfoEventArgs.get_Schedule() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.AllInstances.TreeConflictGet">
            <summary>设置 SvnInfoEventArgs.get_TreeConflict() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.AllInstances.UriGet">
            <summary>设置 SvnInfoEventArgs.get_Uri() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.AllInstances.WorkingCopyRootGet">
            <summary>设置 SvnInfoEventArgs.get_WorkingCopyRoot() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInfoEventArgs.AllInstances.WorkingCopySizeGet">
            <summary>设置 SvnInfoEventArgs.get_WorkingCopySize() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnInheritedPropertyListArgs">
            <summary>SharpSvn.SvnInheritedPropertyListArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnInheritedPropertyListArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnInheritedPropertyListArgs.#ctor(SharpSvn.SvnInheritedPropertyListArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnInheritedPropertyListArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnInheritedPropertyListArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInheritedPropertyListArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInheritedPropertyListArgs.CommandTypeGet">
            <summary>设置 SvnInheritedPropertyListArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInheritedPropertyListArgs.Constructor">
            <summary>设置 SvnInheritedPropertyListArgs.SvnInheritedPropertyListArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInheritedPropertyListArgs.ListAddEventHandlerOfSvnInheritedPropertyListEventArgs">
            <summary>设置 SvnInheritedPropertyListArgs.add_List(EventHandler`1&lt;SvnInheritedPropertyListEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInheritedPropertyListArgs.ListRaiseObjectSvnInheritedPropertyListEventArgs">
            <summary>设置 SvnInheritedPropertyListArgs.raise_List(Object sender, SvnInheritedPropertyListEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInheritedPropertyListArgs.ListRemoveEventHandlerOfSvnInheritedPropertyListEventArgs">
            <summary>设置 SvnInheritedPropertyListArgs.remove_List(EventHandler`1&lt;SvnInheritedPropertyListEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInheritedPropertyListArgs.OnListSvnInheritedPropertyListEventArgs">
            <summary>设置 SvnInheritedPropertyListArgs.OnList(SvnInheritedPropertyListEventArgs e) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnInheritedPropertyListArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInheritedPropertyListArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnInheritedPropertyListArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInheritedPropertyListArgs.AllInstances.ListAddEventHandlerOfSvnInheritedPropertyListEventArgs">
            <summary>设置 SvnInheritedPropertyListArgs.add_List(EventHandler`1&lt;SvnInheritedPropertyListEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInheritedPropertyListArgs.AllInstances.ListRaiseObjectSvnInheritedPropertyListEventArgs">
            <summary>设置 SvnInheritedPropertyListArgs.raise_List(Object sender, SvnInheritedPropertyListEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInheritedPropertyListArgs.AllInstances.ListRemoveEventHandlerOfSvnInheritedPropertyListEventArgs">
            <summary>设置 SvnInheritedPropertyListArgs.remove_List(EventHandler`1&lt;SvnInheritedPropertyListEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInheritedPropertyListArgs.AllInstances.OnListSvnInheritedPropertyListEventArgs">
            <summary>设置 SvnInheritedPropertyListArgs.OnList(SvnInheritedPropertyListEventArgs e) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnInheritedPropertyListEventArgs">
            <summary>SharpSvn.SvnInheritedPropertyListEventArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnInheritedPropertyListEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnInheritedPropertyListEventArgs.#ctor(SharpSvn.SvnInheritedPropertyListEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnInheritedPropertyListEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnInheritedPropertyListEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInheritedPropertyListEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInheritedPropertyListEventArgs.DetachBoolean">
            <summary>设置 SvnInheritedPropertyListEventArgs.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInheritedPropertyListEventArgs.FullPathGet">
            <summary>设置 SvnInheritedPropertyListEventArgs.get_FullPath() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInheritedPropertyListEventArgs.GetHashCode">
            <summary>设置 SvnInheritedPropertyListEventArgs.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInheritedPropertyListEventArgs.PathGet">
            <summary>设置 SvnInheritedPropertyListEventArgs.get_Path() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInheritedPropertyListEventArgs.PropertiesGet">
            <summary>设置 SvnInheritedPropertyListEventArgs.get_Properties() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInheritedPropertyListEventArgs.UriGet">
            <summary>设置 SvnInheritedPropertyListEventArgs.get_Uri() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnInheritedPropertyListEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInheritedPropertyListEventArgs.AllInstances.DetachBoolean">
            <summary>设置 SvnInheritedPropertyListEventArgs.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInheritedPropertyListEventArgs.AllInstances.FullPathGet">
            <summary>设置 SvnInheritedPropertyListEventArgs.get_FullPath() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInheritedPropertyListEventArgs.AllInstances.GetHashCode01">
            <summary>设置 SvnInheritedPropertyListEventArgs.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInheritedPropertyListEventArgs.AllInstances.PathGet">
            <summary>设置 SvnInheritedPropertyListEventArgs.get_Path() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInheritedPropertyListEventArgs.AllInstances.PropertiesGet">
            <summary>设置 SvnInheritedPropertyListEventArgs.get_Properties() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInheritedPropertyListEventArgs.AllInstances.UriGet">
            <summary>设置 SvnInheritedPropertyListEventArgs.get_Uri() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnInvalidNodeKindException">
            <summary>SharpSvn.SvnInvalidNodeKindException 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnInvalidNodeKindException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnInvalidNodeKindException.#ctor(SharpSvn.SvnInvalidNodeKindException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnInvalidNodeKindException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnInvalidNodeKindException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnInvalidNodeKindException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInvalidNodeKindException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInvalidNodeKindException.Constructor">
            <summary>设置 SvnInvalidNodeKindException.SvnInvalidNodeKindException() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInvalidNodeKindException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 SvnInvalidNodeKindException.SvnInvalidNodeKindException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInvalidNodeKindException.ConstructorString">
            <summary>设置 SvnInvalidNodeKindException.SvnInvalidNodeKindException(String message) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnInvalidNodeKindException.ConstructorStringException">
            <summary>设置 SvnInvalidNodeKindException.SvnInvalidNodeKindException(String message, Exception inner) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnInvalidNodeKindException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnKeywords">
            <summary>SharpSvn.SvnKeywords 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnKeywords.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnKeywords.#ctor(SharpSvn.SvnKeywords)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnKeywords.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnKeywords.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnKeywords.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnKeywords.Constructor">
            <summary>设置 SvnKeywords.SvnKeywords() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnKeywords.StaticConstructor">
            <summary>设置 SvnKeywords.SvnKeywords() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnKeywords.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnListArgs">
            <summary>SharpSvn.SvnListArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnListArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnListArgs.#ctor(SharpSvn.SvnListArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnListArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnListArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListArgs.CommandTypeGet">
            <summary>设置 SvnListArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListArgs.Constructor">
            <summary>设置 SvnListArgs.SvnListArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListArgs.DepthGet">
            <summary>设置 SvnListArgs.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListArgs.DepthSetSvnDepth">
            <summary>设置 SvnListArgs.set_Depth(SvnDepth value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListArgs.IncludeExternalsGet">
            <summary>设置 SvnListArgs.get_IncludeExternals() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListArgs.IncludeExternalsSetBoolean">
            <summary>设置 SvnListArgs.set_IncludeExternals(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListArgs.ListAddEventHandlerOfSvnListEventArgs">
            <summary>设置 SvnListArgs.add_List(EventHandler`1&lt;SvnListEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListArgs.ListRaiseObjectSvnListEventArgs">
            <summary>设置 SvnListArgs.raise_List(Object sender, SvnListEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListArgs.ListRemoveEventHandlerOfSvnListEventArgs">
            <summary>设置 SvnListArgs.remove_List(EventHandler`1&lt;SvnListEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListArgs.OnListSvnListEventArgs">
            <summary>设置 SvnListArgs.OnList(SvnListEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListArgs.PrepareSvnTargetBoolean">
            <summary>设置 SvnListArgs.Prepare(SvnTarget target, Boolean hasRevision) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListArgs.RetrieveEntriesGet">
            <summary>设置 SvnListArgs.get_RetrieveEntries() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListArgs.RetrieveEntriesSetSvnDirEntryItems">
            <summary>设置 SvnListArgs.set_RetrieveEntries(SvnDirEntryItems value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListArgs.RetrieveLocksGet">
            <summary>设置 SvnListArgs.get_RetrieveLocks() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListArgs.RetrieveLocksSetBoolean">
            <summary>设置 SvnListArgs.set_RetrieveLocks(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListArgs.RevisionGet">
            <summary>设置 SvnListArgs.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListArgs.RevisionSetSvnRevision">
            <summary>设置 SvnListArgs.set_Revision(SvnRevision value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnListArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnListArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListArgs.AllInstances.DepthGet">
            <summary>设置 SvnListArgs.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListArgs.AllInstances.DepthSetSvnDepth">
            <summary>设置 SvnListArgs.set_Depth(SvnDepth value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListArgs.AllInstances.IncludeExternalsGet">
            <summary>设置 SvnListArgs.get_IncludeExternals() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListArgs.AllInstances.IncludeExternalsSetBoolean">
            <summary>设置 SvnListArgs.set_IncludeExternals(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListArgs.AllInstances.ListAddEventHandlerOfSvnListEventArgs">
            <summary>设置 SvnListArgs.add_List(EventHandler`1&lt;SvnListEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListArgs.AllInstances.ListRaiseObjectSvnListEventArgs">
            <summary>设置 SvnListArgs.raise_List(Object sender, SvnListEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListArgs.AllInstances.ListRemoveEventHandlerOfSvnListEventArgs">
            <summary>设置 SvnListArgs.remove_List(EventHandler`1&lt;SvnListEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListArgs.AllInstances.OnListSvnListEventArgs">
            <summary>设置 SvnListArgs.OnList(SvnListEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListArgs.AllInstances.PrepareSvnTargetBoolean">
            <summary>设置 SvnListArgs.Prepare(SvnTarget target, Boolean hasRevision) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListArgs.AllInstances.RetrieveEntriesGet">
            <summary>设置 SvnListArgs.get_RetrieveEntries() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListArgs.AllInstances.RetrieveEntriesSetSvnDirEntryItems">
            <summary>设置 SvnListArgs.set_RetrieveEntries(SvnDirEntryItems value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListArgs.AllInstances.RetrieveLocksGet">
            <summary>设置 SvnListArgs.get_RetrieveLocks() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListArgs.AllInstances.RetrieveLocksSetBoolean">
            <summary>设置 SvnListArgs.set_RetrieveLocks(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListArgs.AllInstances.RevisionGet">
            <summary>设置 SvnListArgs.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListArgs.AllInstances.RevisionSetSvnRevision">
            <summary>设置 SvnListArgs.set_Revision(SvnRevision value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnListChangeListArgs">
            <summary>SharpSvn.SvnListChangeListArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnListChangeListArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnListChangeListArgs.#ctor(SharpSvn.SvnListChangeListArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnListChangeListArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnListChangeListArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListChangeListArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListChangeListArgs.ChangeListsGet">
            <summary>设置 SvnListChangeListArgs.get_ChangeLists() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListChangeListArgs.CommandTypeGet">
            <summary>设置 SvnListChangeListArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListChangeListArgs.Constructor">
            <summary>设置 SvnListChangeListArgs.SvnListChangeListArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListChangeListArgs.DepthGet">
            <summary>设置 SvnListChangeListArgs.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListChangeListArgs.DepthSetSvnDepth">
            <summary>设置 SvnListChangeListArgs.set_Depth(SvnDepth value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListChangeListArgs.ListChangeListAddEventHandlerOfSvnListChangeListEventArgs">
            <summary>设置 SvnListChangeListArgs.add_ListChangeList(EventHandler`1&lt;SvnListChangeListEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListChangeListArgs.ListChangeListRaiseObjectSvnListChangeListEventArgs">
            <summary>设置 SvnListChangeListArgs.raise_ListChangeList(Object value0, SvnListChangeListEventArgs value1) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListChangeListArgs.ListChangeListRemoveEventHandlerOfSvnListChangeListEventArgs">
            <summary>设置 SvnListChangeListArgs.remove_ListChangeList(EventHandler`1&lt;SvnListChangeListEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListChangeListArgs.OnListChangeListSvnListChangeListEventArgs">
            <summary>设置 SvnListChangeListArgs.OnListChangeList(SvnListChangeListEventArgs e) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnListChangeListArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListChangeListArgs.AllInstances.ChangeListsGet">
            <summary>设置 SvnListChangeListArgs.get_ChangeLists() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListChangeListArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnListChangeListArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListChangeListArgs.AllInstances.DepthGet">
            <summary>设置 SvnListChangeListArgs.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListChangeListArgs.AllInstances.DepthSetSvnDepth">
            <summary>设置 SvnListChangeListArgs.set_Depth(SvnDepth value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListChangeListArgs.AllInstances.ListChangeListAddEventHandlerOfSvnListChangeListEventArgs">
            <summary>设置 SvnListChangeListArgs.add_ListChangeList(EventHandler`1&lt;SvnListChangeListEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListChangeListArgs.AllInstances.ListChangeListRaiseObjectSvnListChangeListEventArgs">
            <summary>设置 SvnListChangeListArgs.raise_ListChangeList(Object value0, SvnListChangeListEventArgs value1) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListChangeListArgs.AllInstances.ListChangeListRemoveEventHandlerOfSvnListChangeListEventArgs">
            <summary>设置 SvnListChangeListArgs.remove_ListChangeList(EventHandler`1&lt;SvnListChangeListEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListChangeListArgs.AllInstances.OnListChangeListSvnListChangeListEventArgs">
            <summary>设置 SvnListChangeListArgs.OnListChangeList(SvnListChangeListEventArgs e) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnListChangeListEventArgs">
            <summary>SharpSvn.SvnListChangeListEventArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnListChangeListEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnListChangeListEventArgs.#ctor(SharpSvn.SvnListChangeListEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnListChangeListEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnListChangeListEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListChangeListEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListChangeListEventArgs.ChangeListGet">
            <summary>设置 SvnListChangeListEventArgs.get_ChangeList() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListChangeListEventArgs.DetachBoolean">
            <summary>设置 SvnListChangeListEventArgs.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListChangeListEventArgs.PathGet">
            <summary>设置 SvnListChangeListEventArgs.get_Path() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnListChangeListEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListChangeListEventArgs.AllInstances.ChangeListGet">
            <summary>设置 SvnListChangeListEventArgs.get_ChangeList() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListChangeListEventArgs.AllInstances.DetachBoolean">
            <summary>设置 SvnListChangeListEventArgs.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListChangeListEventArgs.AllInstances.PathGet">
            <summary>设置 SvnListChangeListEventArgs.get_Path() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnListEventArgs">
            <summary>SharpSvn.SvnListEventArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnListEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnListEventArgs.#ctor(SharpSvn.SvnListEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnListEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnListEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnListEventArgs.Bind(SharpSvn.Remote.ISvnRepositoryListItem)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListEventArgs.BasePathGet">
            <summary>设置 SvnListEventArgs.get_BasePath() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListEventArgs.BaseUriGet">
            <summary>设置 SvnListEventArgs.get_BaseUri() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListEventArgs.DetachBoolean">
            <summary>设置 SvnListEventArgs.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListEventArgs.EntryGet">
            <summary>设置 SvnListEventArgs.get_Entry() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListEventArgs.EntryUriGet">
            <summary>设置 SvnListEventArgs.get_EntryUri() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListEventArgs.ExternalParentGet">
            <summary>设置 SvnListEventArgs.get_ExternalParent() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListEventArgs.ExternalTargetGet">
            <summary>设置 SvnListEventArgs.get_ExternalTarget() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListEventArgs.GetHashCode">
            <summary>设置 SvnListEventArgs.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListEventArgs.LockGet">
            <summary>设置 SvnListEventArgs.get_Lock() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListEventArgs.NameGet">
            <summary>设置 SvnListEventArgs.get_Name() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListEventArgs.PathGet">
            <summary>设置 SvnListEventArgs.get_Path() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListEventArgs.RepositoryRootGet">
            <summary>设置 SvnListEventArgs.get_RepositoryRoot() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListEventArgs.UriGet">
            <summary>设置 SvnListEventArgs.get_Uri() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnListEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListEventArgs.AllInstances.BasePathGet">
            <summary>设置 SvnListEventArgs.get_BasePath() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListEventArgs.AllInstances.BaseUriGet">
            <summary>设置 SvnListEventArgs.get_BaseUri() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListEventArgs.AllInstances.DetachBoolean">
            <summary>设置 SvnListEventArgs.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListEventArgs.AllInstances.EntryGet">
            <summary>设置 SvnListEventArgs.get_Entry() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListEventArgs.AllInstances.EntryUriGet">
            <summary>设置 SvnListEventArgs.get_EntryUri() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListEventArgs.AllInstances.ExternalParentGet">
            <summary>设置 SvnListEventArgs.get_ExternalParent() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListEventArgs.AllInstances.ExternalTargetGet">
            <summary>设置 SvnListEventArgs.get_ExternalTarget() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListEventArgs.AllInstances.GetHashCode01">
            <summary>设置 SvnListEventArgs.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListEventArgs.AllInstances.LockGet">
            <summary>设置 SvnListEventArgs.get_Lock() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListEventArgs.AllInstances.NameGet">
            <summary>设置 SvnListEventArgs.get_Name() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListEventArgs.AllInstances.PathGet">
            <summary>设置 SvnListEventArgs.get_Path() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListEventArgs.AllInstances.RepositoryRootGet">
            <summary>设置 SvnListEventArgs.get_RepositoryRoot() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnListEventArgs.AllInstances.UriGet">
            <summary>设置 SvnListEventArgs.get_Uri() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnLoadRepositoryArgs">
            <summary>SharpSvn.SvnLoadRepositoryArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnLoadRepositoryArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnLoadRepositoryArgs.#ctor(SharpSvn.SvnLoadRepositoryArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnLoadRepositoryArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnLoadRepositoryArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLoadRepositoryArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLoadRepositoryArgs.CommandTypeGet">
            <summary>设置 SvnLoadRepositoryArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLoadRepositoryArgs.Constructor">
            <summary>设置 SvnLoadRepositoryArgs.SvnLoadRepositoryArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLoadRepositoryArgs.EndRevisionGet">
            <summary>设置 SvnLoadRepositoryArgs.get_EndRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLoadRepositoryArgs.EndRevisionSetInt64">
            <summary>设置 SvnLoadRepositoryArgs.set_EndRevision(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLoadRepositoryArgs.ImportParentGet">
            <summary>设置 SvnLoadRepositoryArgs.get_ImportParent() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLoadRepositoryArgs.ImportParentSetString">
            <summary>设置 SvnLoadRepositoryArgs.set_ImportParent(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLoadRepositoryArgs.LoadIdTypeGet">
            <summary>设置 SvnLoadRepositoryArgs.get_LoadIdType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLoadRepositoryArgs.LoadIdTypeSetSvnRepositoryIdType">
            <summary>设置 SvnLoadRepositoryArgs.set_LoadIdType(SvnRepositoryIdType value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLoadRepositoryArgs.RunPostCommitHookGet">
            <summary>设置 SvnLoadRepositoryArgs.get_RunPostCommitHook() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLoadRepositoryArgs.RunPostCommitHookSetBoolean">
            <summary>设置 SvnLoadRepositoryArgs.set_RunPostCommitHook(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLoadRepositoryArgs.RunPreCommitHookGet">
            <summary>设置 SvnLoadRepositoryArgs.get_RunPreCommitHook() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLoadRepositoryArgs.RunPreCommitHookSetBoolean">
            <summary>设置 SvnLoadRepositoryArgs.set_RunPreCommitHook(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLoadRepositoryArgs.StartRevisionGet">
            <summary>设置 SvnLoadRepositoryArgs.get_StartRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLoadRepositoryArgs.StartRevisionSetInt64">
            <summary>设置 SvnLoadRepositoryArgs.set_StartRevision(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLoadRepositoryArgs.VerifyPropertyValuesGet">
            <summary>设置 SvnLoadRepositoryArgs.get_VerifyPropertyValues() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLoadRepositoryArgs.VerifyPropertyValuesSetBoolean">
            <summary>设置 SvnLoadRepositoryArgs.set_VerifyPropertyValues(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnLoadRepositoryArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLoadRepositoryArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnLoadRepositoryArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLoadRepositoryArgs.AllInstances.EndRevisionGet">
            <summary>设置 SvnLoadRepositoryArgs.get_EndRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLoadRepositoryArgs.AllInstances.EndRevisionSetInt64">
            <summary>设置 SvnLoadRepositoryArgs.set_EndRevision(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLoadRepositoryArgs.AllInstances.ImportParentGet">
            <summary>设置 SvnLoadRepositoryArgs.get_ImportParent() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLoadRepositoryArgs.AllInstances.ImportParentSetString">
            <summary>设置 SvnLoadRepositoryArgs.set_ImportParent(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLoadRepositoryArgs.AllInstances.LoadIdTypeGet">
            <summary>设置 SvnLoadRepositoryArgs.get_LoadIdType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLoadRepositoryArgs.AllInstances.LoadIdTypeSetSvnRepositoryIdType">
            <summary>设置 SvnLoadRepositoryArgs.set_LoadIdType(SvnRepositoryIdType value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLoadRepositoryArgs.AllInstances.RunPostCommitHookGet">
            <summary>设置 SvnLoadRepositoryArgs.get_RunPostCommitHook() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLoadRepositoryArgs.AllInstances.RunPostCommitHookSetBoolean">
            <summary>设置 SvnLoadRepositoryArgs.set_RunPostCommitHook(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLoadRepositoryArgs.AllInstances.RunPreCommitHookGet">
            <summary>设置 SvnLoadRepositoryArgs.get_RunPreCommitHook() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLoadRepositoryArgs.AllInstances.RunPreCommitHookSetBoolean">
            <summary>设置 SvnLoadRepositoryArgs.set_RunPreCommitHook(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLoadRepositoryArgs.AllInstances.StartRevisionGet">
            <summary>设置 SvnLoadRepositoryArgs.get_StartRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLoadRepositoryArgs.AllInstances.StartRevisionSetInt64">
            <summary>设置 SvnLoadRepositoryArgs.set_StartRevision(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLoadRepositoryArgs.AllInstances.VerifyPropertyValuesGet">
            <summary>设置 SvnLoadRepositoryArgs.get_VerifyPropertyValues() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLoadRepositoryArgs.AllInstances.VerifyPropertyValuesSetBoolean">
            <summary>设置 SvnLoadRepositoryArgs.set_VerifyPropertyValues(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnLockArgs">
            <summary>SharpSvn.SvnLockArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnLockArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnLockArgs.#ctor(SharpSvn.SvnLockArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnLockArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnLockArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLockArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLockArgs.CommandTypeGet">
            <summary>设置 SvnLockArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLockArgs.CommentGet">
            <summary>设置 SvnLockArgs.get_Comment() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLockArgs.CommentSetString">
            <summary>设置 SvnLockArgs.set_Comment(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLockArgs.Constructor">
            <summary>设置 SvnLockArgs.SvnLockArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLockArgs.LockResultGet">
            <summary>设置 SvnLockArgs.get_LockResult() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLockArgs.RaiseOnNotifySvnNotifyEventArgs">
            <summary>设置 SvnLockArgs.RaiseOnNotify(SvnNotifyEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLockArgs.Reset">
            <summary>设置 SvnLockArgs.Reset() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLockArgs.StealLockGet">
            <summary>设置 SvnLockArgs.get_StealLock() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLockArgs.StealLockSetBoolean">
            <summary>设置 SvnLockArgs.set_StealLock(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnLockArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLockArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnLockArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLockArgs.AllInstances.CommentGet">
            <summary>设置 SvnLockArgs.get_Comment() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLockArgs.AllInstances.CommentSetString">
            <summary>设置 SvnLockArgs.set_Comment(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLockArgs.AllInstances.LockResultGet">
            <summary>设置 SvnLockArgs.get_LockResult() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLockArgs.AllInstances.RaiseOnNotifySvnNotifyEventArgs">
            <summary>设置 SvnLockArgs.RaiseOnNotify(SvnNotifyEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLockArgs.AllInstances.Reset">
            <summary>设置 SvnLockArgs.Reset() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLockArgs.AllInstances.StealLockGet">
            <summary>设置 SvnLockArgs.get_StealLock() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLockArgs.AllInstances.StealLockSetBoolean">
            <summary>设置 SvnLockArgs.set_StealLock(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnLockInfo">
            <summary>SharpSvn.SvnLockInfo 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnLockInfo.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnLockInfo.#ctor(SharpSvn.SvnLockInfo)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnLockInfo.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnLockInfo.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLockInfo.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLockInfo.CommentGet">
            <summary>设置 SvnLockInfo.get_Comment() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLockInfo.CreationTimeGet">
            <summary>设置 SvnLockInfo.get_CreationTime() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLockInfo.Detach">
            <summary>设置 SvnLockInfo.Detach() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLockInfo.DetachBoolean">
            <summary>设置 SvnLockInfo.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLockInfo.ExpirationTimeGet">
            <summary>设置 SvnLockInfo.get_ExpirationTime() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLockInfo.FullPathGet">
            <summary>设置 SvnLockInfo.get_FullPath() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLockInfo.GetHashCode">
            <summary>设置 SvnLockInfo.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLockInfo.IsRawNetworkCommentGet">
            <summary>设置 SvnLockInfo.get_IsRawNetworkComment() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLockInfo.OwnerGet">
            <summary>设置 SvnLockInfo.get_Owner() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLockInfo.PathGet">
            <summary>设置 SvnLockInfo.get_Path() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLockInfo.TokenGet">
            <summary>设置 SvnLockInfo.get_Token() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnLockInfo.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLockInfo.AllInstances.CommentGet">
            <summary>设置 SvnLockInfo.get_Comment() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLockInfo.AllInstances.CreationTimeGet">
            <summary>设置 SvnLockInfo.get_CreationTime() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLockInfo.AllInstances.Detach">
            <summary>设置 SvnLockInfo.Detach() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLockInfo.AllInstances.DetachBoolean">
            <summary>设置 SvnLockInfo.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLockInfo.AllInstances.ExpirationTimeGet">
            <summary>设置 SvnLockInfo.get_ExpirationTime() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLockInfo.AllInstances.FullPathGet">
            <summary>设置 SvnLockInfo.get_FullPath() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLockInfo.AllInstances.GetHashCode01">
            <summary>设置 SvnLockInfo.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLockInfo.AllInstances.IsRawNetworkCommentGet">
            <summary>设置 SvnLockInfo.get_IsRawNetworkComment() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLockInfo.AllInstances.OwnerGet">
            <summary>设置 SvnLockInfo.get_Owner() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLockInfo.AllInstances.PathGet">
            <summary>设置 SvnLockInfo.get_Path() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLockInfo.AllInstances.TokenGet">
            <summary>设置 SvnLockInfo.get_Token() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnLogArgs">
            <summary>SharpSvn.SvnLogArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnLogArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnLogArgs.#ctor(SharpSvn.SvnLogArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnLogArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnLogArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLogArgs.BaseUriGet">
            <summary>设置 SvnLogArgs.get_BaseUri() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLogArgs.BaseUriSetUri">
            <summary>设置 SvnLogArgs.set_BaseUri(Uri value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLogArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLogArgs.CommandTypeGet">
            <summary>设置 SvnLogArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLogArgs.Constructor">
            <summary>设置 SvnLogArgs.SvnLogArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLogArgs.ConstructorSvnRevisionRange">
            <summary>设置 SvnLogArgs.SvnLogArgs(SvnRevisionRange range) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLogArgs.EndGet">
            <summary>设置 SvnLogArgs.get_End() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLogArgs.EndSetSvnRevision">
            <summary>设置 SvnLogArgs.set_End(SvnRevision value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLogArgs.LimitGet">
            <summary>设置 SvnLogArgs.get_Limit() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLogArgs.LimitSetInt32">
            <summary>设置 SvnLogArgs.set_Limit(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLogArgs.LogAddEventHandlerOfSvnLogEventArgs">
            <summary>设置 SvnLogArgs.add_Log(EventHandler`1&lt;SvnLogEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLogArgs.LogRaiseObjectSvnLogEventArgs">
            <summary>设置 SvnLogArgs.raise_Log(Object sender, SvnLogEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLogArgs.LogRemoveEventHandlerOfSvnLogEventArgs">
            <summary>设置 SvnLogArgs.remove_Log(EventHandler`1&lt;SvnLogEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLogArgs.OnLogSvnLogEventArgs">
            <summary>设置 SvnLogArgs.OnLog(SvnLogEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLogArgs.OperationalRevisionGet">
            <summary>设置 SvnLogArgs.get_OperationalRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLogArgs.OperationalRevisionSetSvnRevision">
            <summary>设置 SvnLogArgs.set_OperationalRevision(SvnRevision value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLogArgs.OriginRevisionGet">
            <summary>设置 SvnLogArgs.get_OriginRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLogArgs.OriginRevisionSetSvnRevision">
            <summary>设置 SvnLogArgs.set_OriginRevision(SvnRevision value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLogArgs.RangeGet">
            <summary>设置 SvnLogArgs.get_Range() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLogArgs.RangeSetSvnRevisionRange">
            <summary>设置 SvnLogArgs.set_Range(SvnRevisionRange value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLogArgs.RangesGet">
            <summary>设置 SvnLogArgs.get_Ranges() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLogArgs.RangesUsedGet">
            <summary>设置 SvnLogArgs.get_RangesUsed() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLogArgs.RetrieveAllPropertiesGet">
            <summary>设置 SvnLogArgs.get_RetrieveAllProperties() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLogArgs.RetrieveAllPropertiesSetBoolean">
            <summary>设置 SvnLogArgs.set_RetrieveAllProperties(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLogArgs.RetrieveChangedPathsGet">
            <summary>设置 SvnLogArgs.get_RetrieveChangedPaths() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLogArgs.RetrieveChangedPathsSetBoolean">
            <summary>设置 SvnLogArgs.set_RetrieveChangedPaths(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLogArgs.RetrieveMergedRevisionsGet">
            <summary>设置 SvnLogArgs.get_RetrieveMergedRevisions() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLogArgs.RetrieveMergedRevisionsSetBoolean">
            <summary>设置 SvnLogArgs.set_RetrieveMergedRevisions(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLogArgs.RetrievePropertiesGet">
            <summary>设置 SvnLogArgs.get_RetrieveProperties() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLogArgs.RetrievePropertiesUsedGet">
            <summary>设置 SvnLogArgs.get_RetrievePropertiesUsed() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLogArgs.StartGet">
            <summary>设置 SvnLogArgs.get_Start() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLogArgs.StartSetSvnRevision">
            <summary>设置 SvnLogArgs.set_Start(SvnRevision value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLogArgs.StrictNodeHistoryGet">
            <summary>设置 SvnLogArgs.get_StrictNodeHistory() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLogArgs.StrictNodeHistorySetBoolean">
            <summary>设置 SvnLogArgs.set_StrictNodeHistory(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnLogArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLogArgs.AllInstances.BaseUriGet">
            <summary>设置 SvnLogArgs.get_BaseUri() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLogArgs.AllInstances.BaseUriSetUri">
            <summary>设置 SvnLogArgs.set_BaseUri(Uri value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLogArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnLogArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLogArgs.AllInstances.EndGet">
            <summary>设置 SvnLogArgs.get_End() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLogArgs.AllInstances.EndSetSvnRevision">
            <summary>设置 SvnLogArgs.set_End(SvnRevision value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLogArgs.AllInstances.LimitGet">
            <summary>设置 SvnLogArgs.get_Limit() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLogArgs.AllInstances.LimitSetInt32">
            <summary>设置 SvnLogArgs.set_Limit(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLogArgs.AllInstances.LogAddEventHandlerOfSvnLogEventArgs">
            <summary>设置 SvnLogArgs.add_Log(EventHandler`1&lt;SvnLogEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLogArgs.AllInstances.LogRaiseObjectSvnLogEventArgs">
            <summary>设置 SvnLogArgs.raise_Log(Object sender, SvnLogEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLogArgs.AllInstances.LogRemoveEventHandlerOfSvnLogEventArgs">
            <summary>设置 SvnLogArgs.remove_Log(EventHandler`1&lt;SvnLogEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLogArgs.AllInstances.OnLogSvnLogEventArgs">
            <summary>设置 SvnLogArgs.OnLog(SvnLogEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLogArgs.AllInstances.OperationalRevisionGet">
            <summary>设置 SvnLogArgs.get_OperationalRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLogArgs.AllInstances.OperationalRevisionSetSvnRevision">
            <summary>设置 SvnLogArgs.set_OperationalRevision(SvnRevision value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLogArgs.AllInstances.OriginRevisionGet">
            <summary>设置 SvnLogArgs.get_OriginRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLogArgs.AllInstances.OriginRevisionSetSvnRevision">
            <summary>设置 SvnLogArgs.set_OriginRevision(SvnRevision value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLogArgs.AllInstances.RangeGet">
            <summary>设置 SvnLogArgs.get_Range() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLogArgs.AllInstances.RangeSetSvnRevisionRange">
            <summary>设置 SvnLogArgs.set_Range(SvnRevisionRange value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLogArgs.AllInstances.RangesGet">
            <summary>设置 SvnLogArgs.get_Ranges() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLogArgs.AllInstances.RangesUsedGet">
            <summary>设置 SvnLogArgs.get_RangesUsed() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLogArgs.AllInstances.RetrieveAllPropertiesGet">
            <summary>设置 SvnLogArgs.get_RetrieveAllProperties() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLogArgs.AllInstances.RetrieveAllPropertiesSetBoolean">
            <summary>设置 SvnLogArgs.set_RetrieveAllProperties(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLogArgs.AllInstances.RetrieveChangedPathsGet">
            <summary>设置 SvnLogArgs.get_RetrieveChangedPaths() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLogArgs.AllInstances.RetrieveChangedPathsSetBoolean">
            <summary>设置 SvnLogArgs.set_RetrieveChangedPaths(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLogArgs.AllInstances.RetrieveMergedRevisionsGet">
            <summary>设置 SvnLogArgs.get_RetrieveMergedRevisions() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLogArgs.AllInstances.RetrieveMergedRevisionsSetBoolean">
            <summary>设置 SvnLogArgs.set_RetrieveMergedRevisions(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLogArgs.AllInstances.RetrievePropertiesGet">
            <summary>设置 SvnLogArgs.get_RetrieveProperties() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLogArgs.AllInstances.RetrievePropertiesUsedGet">
            <summary>设置 SvnLogArgs.get_RetrievePropertiesUsed() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLogArgs.AllInstances.StartGet">
            <summary>设置 SvnLogArgs.get_Start() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLogArgs.AllInstances.StartSetSvnRevision">
            <summary>设置 SvnLogArgs.set_Start(SvnRevision value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLogArgs.AllInstances.StrictNodeHistoryGet">
            <summary>设置 SvnLogArgs.get_StrictNodeHistory() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLogArgs.AllInstances.StrictNodeHistorySetBoolean">
            <summary>设置 SvnLogArgs.set_StrictNodeHistory(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnLogEventArgs">
            <summary>SharpSvn.SvnLogEventArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnLogEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnLogEventArgs.#ctor(SharpSvn.SvnLogEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnLogEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnLogEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLogEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLogEventArgs.HasChildrenGet">
            <summary>设置 SvnLogEventArgs.get_HasChildren() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLogEventArgs.LogOriginGet">
            <summary>设置 SvnLogEventArgs.get_LogOrigin() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLogEventArgs.MergeLogNestingLevelGet">
            <summary>设置 SvnLogEventArgs.get_MergeLogNestingLevel() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnLogEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLogEventArgs.AllInstances.HasChildrenGet">
            <summary>设置 SvnLogEventArgs.get_HasChildren() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLogEventArgs.AllInstances.LogOriginGet">
            <summary>设置 SvnLogEventArgs.get_LogOrigin() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLogEventArgs.AllInstances.MergeLogNestingLevelGet">
            <summary>设置 SvnLogEventArgs.get_MergeLogNestingLevel() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnLoggingEventArgs">
            <summary>SharpSvn.SvnLoggingEventArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnLoggingEventArgs.#ctor(SharpSvn.SvnLoggingEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnLoggingEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnLoggingEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLoggingEventArgs.AuthorGet">
            <summary>设置 SvnLoggingEventArgs.get_Author() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLoggingEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLoggingEventArgs.ChangedPathsGet">
            <summary>设置 SvnLoggingEventArgs.get_ChangedPaths() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLoggingEventArgs.CustomPropertiesGet">
            <summary>设置 SvnLoggingEventArgs.get_CustomProperties() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLoggingEventArgs.DetachBoolean">
            <summary>设置 SvnLoggingEventArgs.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLoggingEventArgs.GetHashCode">
            <summary>设置 SvnLoggingEventArgs.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLoggingEventArgs.LogMessageGet">
            <summary>设置 SvnLoggingEventArgs.get_LogMessage() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLoggingEventArgs.NotInheritableGet">
            <summary>设置 SvnLoggingEventArgs.get_NotInheritable() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLoggingEventArgs.RevisionGet">
            <summary>设置 SvnLoggingEventArgs.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLoggingEventArgs.RevisionPropertiesGet">
            <summary>设置 SvnLoggingEventArgs.get_RevisionProperties() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLoggingEventArgs.SubtractiveMergeGet">
            <summary>设置 SvnLoggingEventArgs.get_SubtractiveMerge() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLoggingEventArgs.TimeGet">
            <summary>设置 SvnLoggingEventArgs.get_Time() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnLoggingEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLoggingEventArgs.AllInstances.AuthorGet">
            <summary>设置 SvnLoggingEventArgs.get_Author() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLoggingEventArgs.AllInstances.ChangedPathsGet">
            <summary>设置 SvnLoggingEventArgs.get_ChangedPaths() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLoggingEventArgs.AllInstances.CustomPropertiesGet">
            <summary>设置 SvnLoggingEventArgs.get_CustomProperties() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLoggingEventArgs.AllInstances.DetachBoolean">
            <summary>设置 SvnLoggingEventArgs.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLoggingEventArgs.AllInstances.GetHashCode01">
            <summary>设置 SvnLoggingEventArgs.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLoggingEventArgs.AllInstances.LogMessageGet">
            <summary>设置 SvnLoggingEventArgs.get_LogMessage() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLoggingEventArgs.AllInstances.NotInheritableGet">
            <summary>设置 SvnLoggingEventArgs.get_NotInheritable() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLoggingEventArgs.AllInstances.RevisionGet">
            <summary>设置 SvnLoggingEventArgs.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLoggingEventArgs.AllInstances.RevisionPropertiesGet">
            <summary>设置 SvnLoggingEventArgs.get_RevisionProperties() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLoggingEventArgs.AllInstances.SubtractiveMergeGet">
            <summary>设置 SvnLoggingEventArgs.get_SubtractiveMerge() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLoggingEventArgs.AllInstances.TimeGet">
            <summary>设置 SvnLoggingEventArgs.get_Time() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnLookClient">
            <summary>SharpSvn.SvnLookClient 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnLookClient.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnLookClient.#ctor(SharpSvn.SvnLookClient)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnLookClient.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnLookClient.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnLookClient.Bind(System.ComponentModel.IComponent)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnLookClient.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookClient.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookClient.CancelAddEventHandlerOfSvnCancelEventArgs">
            <summary>设置 SvnLookClient.add_Cancel(EventHandler`1&lt;SvnCancelEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookClient.CancelRaiseObjectSvnCancelEventArgs">
            <summary>设置 SvnLookClient.raise_Cancel(Object sender, SvnCancelEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookClient.CancelRemoveEventHandlerOfSvnCancelEventArgs">
            <summary>设置 SvnLookClient.remove_Cancel(EventHandler`1&lt;SvnCancelEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookClient.ChangeInfoSvnLookOriginEventHandlerOfSvnChangeInfoEventArgs">
            <summary>设置 SvnLookClient.ChangeInfo(SvnLookOrigin lookOrigin, EventHandler`1&lt;SvnChangeInfoEventArgs&gt; changeInfoHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookClient.ChangeInfoSvnLookOriginSvnChangeInfoArgsEventHandlerOfSvnChangeInfoEventArgs">
            <summary>设置 SvnLookClient.ChangeInfo(SvnLookOrigin lookOrigin, SvnChangeInfoArgs args, EventHandler`1&lt;SvnChangeInfoEventArgs&gt; changeInfoHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookClient.ChangedSvnLookOriginEventHandlerOfSvnChangedEventArgs">
            <summary>设置 SvnLookClient.Changed(SvnLookOrigin lookOrigin, EventHandler`1&lt;SvnChangedEventArgs&gt; changedHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookClient.ChangedSvnLookOriginSvnChangedArgsEventHandlerOfSvnChangedEventArgs">
            <summary>设置 SvnLookClient.Changed(SvnLookOrigin lookOrigin, SvnChangedArgs args, EventHandler`1&lt;SvnChangedEventArgs&gt; changedHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookClient.Constructor">
            <summary>设置 SvnLookClient.SvnLookClient() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookClient.DisposeBoolean">
            <summary>设置 SvnLookClient.Dispose(Boolean ) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookClient.GetChangeInfoSvnLookOriginSvnChangeInfoArgsSvnChangeInfoEventArgsOut">
            <summary>设置 SvnLookClient.GetChangeInfo(SvnLookOrigin lookOrigin, SvnChangeInfoArgs args, SvnChangeInfoEventArgs&amp; changeInfo) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookClient.GetChangeInfoSvnLookOriginSvnChangeInfoEventArgsOut">
            <summary>设置 SvnLookClient.GetChangeInfo(SvnLookOrigin lookOrigin, SvnChangeInfoEventArgs&amp; changeInfo) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookClient.GetChangedSvnLookOriginCollectionOfSvnChangedEventArgsOut">
            <summary>设置 SvnLookClient.GetChanged(SvnLookOrigin lookOrigin, Collection`1&lt;SvnChangedEventArgs&gt;&amp; changedItems) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookClient.GetChangedSvnLookOriginSvnChangedArgsCollectionOfSvnChangedEventArgsOut">
            <summary>设置 SvnLookClient.GetChanged(SvnLookOrigin lookOrigin, SvnChangedArgs args, Collection`1&lt;SvnChangedEventArgs&gt;&amp; changedItems) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookClient.GetListSvnLookOriginStringCollectionOfSvnLookListEventArgsOut">
            <summary>设置 SvnLookClient.GetList(SvnLookOrigin origin, String path, Collection`1&lt;SvnLookListEventArgs&gt;&amp; list) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookClient.GetListSvnLookOriginStringSvnLookListArgsCollectionOfSvnLookListEventArgsOut">
            <summary>设置 SvnLookClient.GetList(SvnLookOrigin origin, String path, SvnLookListArgs args, Collection`1&lt;SvnLookListEventArgs&gt;&amp; list) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookClient.GetPropertyListSvnLookOriginStringSvnLookPropertyListArgsSvnPropertyCollectionOut">
            <summary>设置 SvnLookClient.GetPropertyList(SvnLookOrigin lookOrigin, String path, SvnLookPropertyListArgs args, SvnPropertyCollection&amp; properties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookClient.GetPropertyListSvnLookOriginStringSvnPropertyCollectionOut">
            <summary>设置 SvnLookClient.GetPropertyList(SvnLookOrigin lookOrigin, String path, SvnPropertyCollection&amp; properties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookClient.GetPropertySvnLookOriginStringStringStringOut">
            <summary>设置 SvnLookClient.GetProperty(SvnLookOrigin lookOrigin, String path, String propertyName, String&amp; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookClient.GetPropertySvnLookOriginStringStringSvnLookGetPropertyArgsStringOut">
            <summary>设置 SvnLookClient.GetProperty(SvnLookOrigin lookOrigin, String path, String propertyName, SvnLookGetPropertyArgs args, String&amp; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookClient.GetPropertySvnLookOriginStringStringSvnLookGetPropertyArgsSvnPropertyValueOut">
            <summary>设置 SvnLookClient.GetProperty(SvnLookOrigin lookOrigin, String path, String propertyName, SvnLookGetPropertyArgs args, SvnPropertyValue&amp; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookClient.GetPropertySvnLookOriginStringStringSvnPropertyValueOut">
            <summary>设置 SvnLookClient.GetProperty(SvnLookOrigin lookOrigin, String path, String propertyName, SvnPropertyValue&amp; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookClient.GetRevisionPropertySvnLookOriginStringStringOut">
            <summary>设置 SvnLookClient.GetRevisionProperty(SvnLookOrigin lookOrigin, String propertyName, String&amp; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookClient.GetRevisionPropertySvnLookOriginStringSvnLookRevisionPropertyArgsStringOut">
            <summary>设置 SvnLookClient.GetRevisionProperty(SvnLookOrigin lookOrigin, String propertyName, SvnLookRevisionPropertyArgs args, String&amp; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookClient.GetRevisionPropertySvnLookOriginStringSvnLookRevisionPropertyArgsSvnPropertyValueOut">
            <summary>设置 SvnLookClient.GetRevisionProperty(SvnLookOrigin lookOrigin, String propertyName, SvnLookRevisionPropertyArgs args, SvnPropertyValue&amp; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookClient.GetRevisionPropertySvnLookOriginStringSvnPropertyValueOut">
            <summary>设置 SvnLookClient.GetRevisionProperty(SvnLookOrigin lookOrigin, String propertyName, SvnPropertyValue&amp; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookClient.HandleClientCancelSvnCancelEventArgs">
            <summary>设置 SvnLookClient.HandleClientCancel(SvnCancelEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookClient.ListSvnLookOriginStringEventHandlerOfSvnLookListEventArgs">
            <summary>设置 SvnLookClient.List(SvnLookOrigin origin, String path, EventHandler`1&lt;SvnLookListEventArgs&gt; listHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookClient.ListSvnLookOriginStringSvnLookListArgsEventHandlerOfSvnLookListEventArgs">
            <summary>设置 SvnLookClient.List(SvnLookOrigin origin, String path, SvnLookListArgs args, EventHandler`1&lt;SvnLookListEventArgs&gt; listHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookClient.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnLookClient.OnCancel(SvnCancelEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookClient.TryGetRepositoryIdStringGuidOut">
            <summary>设置 SvnLookClient.TryGetRepositoryId(String repositoryPath, Guid&amp; id) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookClient.TryGetRepositoryIdSvnLookOriginGuidOut">
            <summary>设置 SvnLookClient.TryGetRepositoryId(SvnLookOrigin origin, Guid&amp; id) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookClient.WriteSvnLookOriginStringStream">
            <summary>设置 SvnLookClient.Write(SvnLookOrigin lookOrigin, String path, Stream toStream) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookClient.WriteSvnLookOriginStringStreamSvnLookWriteArgs">
            <summary>设置 SvnLookClient.Write(SvnLookOrigin lookOrigin, String path, Stream toStream, SvnLookWriteArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookClient._SvnLookClient">
            <summary>设置 SvnLookClient.~SvnLookClient() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnLookClient.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookClient.AllInstances.CancelAddEventHandlerOfSvnCancelEventArgs">
            <summary>设置 SvnLookClient.add_Cancel(EventHandler`1&lt;SvnCancelEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookClient.AllInstances.CancelRaiseObjectSvnCancelEventArgs">
            <summary>设置 SvnLookClient.raise_Cancel(Object sender, SvnCancelEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookClient.AllInstances.CancelRemoveEventHandlerOfSvnCancelEventArgs">
            <summary>设置 SvnLookClient.remove_Cancel(EventHandler`1&lt;SvnCancelEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookClient.AllInstances.ChangeInfoSvnLookOriginEventHandlerOfSvnChangeInfoEventArgs">
            <summary>设置 SvnLookClient.ChangeInfo(SvnLookOrigin lookOrigin, EventHandler`1&lt;SvnChangeInfoEventArgs&gt; changeInfoHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookClient.AllInstances.ChangeInfoSvnLookOriginSvnChangeInfoArgsEventHandlerOfSvnChangeInfoEventArgs">
            <summary>设置 SvnLookClient.ChangeInfo(SvnLookOrigin lookOrigin, SvnChangeInfoArgs args, EventHandler`1&lt;SvnChangeInfoEventArgs&gt; changeInfoHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookClient.AllInstances.ChangedSvnLookOriginEventHandlerOfSvnChangedEventArgs">
            <summary>设置 SvnLookClient.Changed(SvnLookOrigin lookOrigin, EventHandler`1&lt;SvnChangedEventArgs&gt; changedHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookClient.AllInstances.ChangedSvnLookOriginSvnChangedArgsEventHandlerOfSvnChangedEventArgs">
            <summary>设置 SvnLookClient.Changed(SvnLookOrigin lookOrigin, SvnChangedArgs args, EventHandler`1&lt;SvnChangedEventArgs&gt; changedHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookClient.AllInstances.DisposeBoolean">
            <summary>设置 SvnLookClient.Dispose(Boolean ) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookClient.AllInstances.GetChangeInfoSvnLookOriginSvnChangeInfoArgsSvnChangeInfoEventArgsOut">
            <summary>设置 SvnLookClient.GetChangeInfo(SvnLookOrigin lookOrigin, SvnChangeInfoArgs args, SvnChangeInfoEventArgs&amp; changeInfo) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookClient.AllInstances.GetChangeInfoSvnLookOriginSvnChangeInfoEventArgsOut">
            <summary>设置 SvnLookClient.GetChangeInfo(SvnLookOrigin lookOrigin, SvnChangeInfoEventArgs&amp; changeInfo) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookClient.AllInstances.GetChangedSvnLookOriginCollectionOfSvnChangedEventArgsOut">
            <summary>设置 SvnLookClient.GetChanged(SvnLookOrigin lookOrigin, Collection`1&lt;SvnChangedEventArgs&gt;&amp; changedItems) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookClient.AllInstances.GetChangedSvnLookOriginSvnChangedArgsCollectionOfSvnChangedEventArgsOut">
            <summary>设置 SvnLookClient.GetChanged(SvnLookOrigin lookOrigin, SvnChangedArgs args, Collection`1&lt;SvnChangedEventArgs&gt;&amp; changedItems) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookClient.AllInstances.GetListSvnLookOriginStringCollectionOfSvnLookListEventArgsOut">
            <summary>设置 SvnLookClient.GetList(SvnLookOrigin origin, String path, Collection`1&lt;SvnLookListEventArgs&gt;&amp; list) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookClient.AllInstances.GetListSvnLookOriginStringSvnLookListArgsCollectionOfSvnLookListEventArgsOut">
            <summary>设置 SvnLookClient.GetList(SvnLookOrigin origin, String path, SvnLookListArgs args, Collection`1&lt;SvnLookListEventArgs&gt;&amp; list) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookClient.AllInstances.GetPropertyListSvnLookOriginStringSvnLookPropertyListArgsSvnPropertyCollectionOut">
            <summary>设置 SvnLookClient.GetPropertyList(SvnLookOrigin lookOrigin, String path, SvnLookPropertyListArgs args, SvnPropertyCollection&amp; properties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookClient.AllInstances.GetPropertyListSvnLookOriginStringSvnPropertyCollectionOut">
            <summary>设置 SvnLookClient.GetPropertyList(SvnLookOrigin lookOrigin, String path, SvnPropertyCollection&amp; properties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookClient.AllInstances.GetPropertySvnLookOriginStringStringStringOut">
            <summary>设置 SvnLookClient.GetProperty(SvnLookOrigin lookOrigin, String path, String propertyName, String&amp; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookClient.AllInstances.GetPropertySvnLookOriginStringStringSvnLookGetPropertyArgsStringOut">
            <summary>设置 SvnLookClient.GetProperty(SvnLookOrigin lookOrigin, String path, String propertyName, SvnLookGetPropertyArgs args, String&amp; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookClient.AllInstances.GetPropertySvnLookOriginStringStringSvnLookGetPropertyArgsSvnPropertyValueOut">
            <summary>设置 SvnLookClient.GetProperty(SvnLookOrigin lookOrigin, String path, String propertyName, SvnLookGetPropertyArgs args, SvnPropertyValue&amp; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookClient.AllInstances.GetPropertySvnLookOriginStringStringSvnPropertyValueOut">
            <summary>设置 SvnLookClient.GetProperty(SvnLookOrigin lookOrigin, String path, String propertyName, SvnPropertyValue&amp; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookClient.AllInstances.GetRevisionPropertySvnLookOriginStringStringOut">
            <summary>设置 SvnLookClient.GetRevisionProperty(SvnLookOrigin lookOrigin, String propertyName, String&amp; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookClient.AllInstances.GetRevisionPropertySvnLookOriginStringSvnLookRevisionPropertyArgsStringOut">
            <summary>设置 SvnLookClient.GetRevisionProperty(SvnLookOrigin lookOrigin, String propertyName, SvnLookRevisionPropertyArgs args, String&amp; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookClient.AllInstances.GetRevisionPropertySvnLookOriginStringSvnLookRevisionPropertyArgsSvnPropertyValueOut">
            <summary>设置 SvnLookClient.GetRevisionProperty(SvnLookOrigin lookOrigin, String propertyName, SvnLookRevisionPropertyArgs args, SvnPropertyValue&amp; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookClient.AllInstances.GetRevisionPropertySvnLookOriginStringSvnPropertyValueOut">
            <summary>设置 SvnLookClient.GetRevisionProperty(SvnLookOrigin lookOrigin, String propertyName, SvnPropertyValue&amp; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookClient.AllInstances.HandleClientCancelSvnCancelEventArgs">
            <summary>设置 SvnLookClient.HandleClientCancel(SvnCancelEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookClient.AllInstances.ListSvnLookOriginStringEventHandlerOfSvnLookListEventArgs">
            <summary>设置 SvnLookClient.List(SvnLookOrigin origin, String path, EventHandler`1&lt;SvnLookListEventArgs&gt; listHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookClient.AllInstances.ListSvnLookOriginStringSvnLookListArgsEventHandlerOfSvnLookListEventArgs">
            <summary>设置 SvnLookClient.List(SvnLookOrigin origin, String path, SvnLookListArgs args, EventHandler`1&lt;SvnLookListEventArgs&gt; listHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookClient.AllInstances.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnLookClient.OnCancel(SvnCancelEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookClient.AllInstances.TryGetRepositoryIdStringGuidOut">
            <summary>设置 SvnLookClient.TryGetRepositoryId(String repositoryPath, Guid&amp; id) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookClient.AllInstances.TryGetRepositoryIdSvnLookOriginGuidOut">
            <summary>设置 SvnLookClient.TryGetRepositoryId(SvnLookOrigin origin, Guid&amp; id) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookClient.AllInstances.WriteSvnLookOriginStringStream">
            <summary>设置 SvnLookClient.Write(SvnLookOrigin lookOrigin, String path, Stream toStream) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookClient.AllInstances.WriteSvnLookOriginStringStreamSvnLookWriteArgs">
            <summary>设置 SvnLookClient.Write(SvnLookOrigin lookOrigin, String path, Stream toStream, SvnLookWriteArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookClient.AllInstances._SvnLookClient">
            <summary>设置 SvnLookClient.~SvnLookClient() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnLookClientArgs">
            <summary>SharpSvn.SvnLookClientArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnLookClientArgs.#ctor(SharpSvn.SvnLookClientArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnLookClientArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnLookClientArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookClientArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookClientArgs.Constructor">
            <summary>设置 SvnLookClientArgs.SvnLookClientArgs() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnLookClientArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnLookGetPropertyArgs">
            <summary>SharpSvn.SvnLookGetPropertyArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnLookGetPropertyArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnLookGetPropertyArgs.#ctor(SharpSvn.SvnLookGetPropertyArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnLookGetPropertyArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnLookGetPropertyArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookGetPropertyArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookGetPropertyArgs.CommandTypeGet">
            <summary>设置 SvnLookGetPropertyArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookGetPropertyArgs.Constructor">
            <summary>设置 SvnLookGetPropertyArgs.SvnLookGetPropertyArgs() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnLookGetPropertyArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookGetPropertyArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnLookGetPropertyArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnLookListArgs">
            <summary>SharpSvn.SvnLookListArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnLookListArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnLookListArgs.#ctor(SharpSvn.SvnLookListArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnLookListArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnLookListArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookListArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookListArgs.CommandTypeGet">
            <summary>设置 SvnLookListArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookListArgs.Constructor">
            <summary>设置 SvnLookListArgs.SvnLookListArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookListArgs.DepthGet">
            <summary>设置 SvnLookListArgs.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookListArgs.DepthSetSvnDepth">
            <summary>设置 SvnLookListArgs.set_Depth(SvnDepth value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookListArgs.InvokeListSvnLookListEventArgs">
            <summary>设置 SvnLookListArgs.InvokeList(SvnLookListEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookListArgs.ListAddEventHandlerOfSvnLookListEventArgs">
            <summary>设置 SvnLookListArgs.add_List(EventHandler`1&lt;SvnLookListEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookListArgs.ListRaiseObjectSvnLookListEventArgs">
            <summary>设置 SvnLookListArgs.raise_List(Object sender, SvnLookListEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookListArgs.ListRemoveEventHandlerOfSvnLookListEventArgs">
            <summary>设置 SvnLookListArgs.remove_List(EventHandler`1&lt;SvnLookListEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookListArgs.OnListSvnLookListEventArgs">
            <summary>设置 SvnLookListArgs.OnList(SvnLookListEventArgs e) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnLookListArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookListArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnLookListArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookListArgs.AllInstances.DepthGet">
            <summary>设置 SvnLookListArgs.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookListArgs.AllInstances.DepthSetSvnDepth">
            <summary>设置 SvnLookListArgs.set_Depth(SvnDepth value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookListArgs.AllInstances.InvokeListSvnLookListEventArgs">
            <summary>设置 SvnLookListArgs.InvokeList(SvnLookListEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookListArgs.AllInstances.ListAddEventHandlerOfSvnLookListEventArgs">
            <summary>设置 SvnLookListArgs.add_List(EventHandler`1&lt;SvnLookListEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookListArgs.AllInstances.ListRaiseObjectSvnLookListEventArgs">
            <summary>设置 SvnLookListArgs.raise_List(Object sender, SvnLookListEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookListArgs.AllInstances.ListRemoveEventHandlerOfSvnLookListEventArgs">
            <summary>设置 SvnLookListArgs.remove_List(EventHandler`1&lt;SvnLookListEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookListArgs.AllInstances.OnListSvnLookListEventArgs">
            <summary>设置 SvnLookListArgs.OnList(SvnLookListEventArgs e) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnLookListEventArgs">
            <summary>SharpSvn.SvnLookListEventArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnLookListEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnLookListEventArgs.#ctor(SharpSvn.SvnLookListEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnLookListEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnLookListEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookListEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookListEventArgs.DetachBoolean">
            <summary>设置 SvnLookListEventArgs.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookListEventArgs.NameGet">
            <summary>设置 SvnLookListEventArgs.get_Name() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookListEventArgs.NodeKindGet">
            <summary>设置 SvnLookListEventArgs.get_NodeKind() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookListEventArgs.PathGet">
            <summary>设置 SvnLookListEventArgs.get_Path() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnLookListEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookListEventArgs.AllInstances.DetachBoolean">
            <summary>设置 SvnLookListEventArgs.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookListEventArgs.AllInstances.NameGet">
            <summary>设置 SvnLookListEventArgs.get_Name() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookListEventArgs.AllInstances.NodeKindGet">
            <summary>设置 SvnLookListEventArgs.get_NodeKind() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookListEventArgs.AllInstances.PathGet">
            <summary>设置 SvnLookListEventArgs.get_Path() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnLookOrigin">
            <summary>SharpSvn.SvnLookOrigin 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnLookOrigin.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnLookOrigin.#ctor(SharpSvn.SvnLookOrigin)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnLookOrigin.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnLookOrigin.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookOrigin.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookOrigin.ConstructorString">
            <summary>设置 SvnLookOrigin.SvnLookOrigin(String repositoryPath) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookOrigin.ConstructorStringInt64">
            <summary>设置 SvnLookOrigin.SvnLookOrigin(String repositoryPath, Int64 revision) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookOrigin.ConstructorStringString">
            <summary>设置 SvnLookOrigin.SvnLookOrigin(String repositoryPath, String transactionName) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookOrigin.HasRevisionGet">
            <summary>设置 SvnLookOrigin.get_HasRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookOrigin.HasTransactionGet">
            <summary>设置 SvnLookOrigin.get_HasTransaction() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookOrigin.RepositoryPathGet">
            <summary>设置 SvnLookOrigin.get_RepositoryPath() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookOrigin.RevisionGet">
            <summary>设置 SvnLookOrigin.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookOrigin.TransactionGet">
            <summary>设置 SvnLookOrigin.get_Transaction() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnLookOrigin.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookOrigin.AllInstances.HasRevisionGet">
            <summary>设置 SvnLookOrigin.get_HasRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookOrigin.AllInstances.HasTransactionGet">
            <summary>设置 SvnLookOrigin.get_HasTransaction() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookOrigin.AllInstances.RepositoryPathGet">
            <summary>设置 SvnLookOrigin.get_RepositoryPath() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookOrigin.AllInstances.RevisionGet">
            <summary>设置 SvnLookOrigin.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookOrigin.AllInstances.TransactionGet">
            <summary>设置 SvnLookOrigin.get_Transaction() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnLookPropertyListArgs">
            <summary>SharpSvn.SvnLookPropertyListArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnLookPropertyListArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnLookPropertyListArgs.#ctor(SharpSvn.SvnLookPropertyListArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnLookPropertyListArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnLookPropertyListArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookPropertyListArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookPropertyListArgs.CommandTypeGet">
            <summary>设置 SvnLookPropertyListArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookPropertyListArgs.Constructor">
            <summary>设置 SvnLookPropertyListArgs.SvnLookPropertyListArgs() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnLookPropertyListArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookPropertyListArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnLookPropertyListArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnLookRevisionPropertyArgs">
            <summary>SharpSvn.SvnLookRevisionPropertyArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnLookRevisionPropertyArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnLookRevisionPropertyArgs.#ctor(SharpSvn.SvnLookRevisionPropertyArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnLookRevisionPropertyArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnLookRevisionPropertyArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookRevisionPropertyArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookRevisionPropertyArgs.CommandTypeGet">
            <summary>设置 SvnLookRevisionPropertyArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookRevisionPropertyArgs.Constructor">
            <summary>设置 SvnLookRevisionPropertyArgs.SvnLookRevisionPropertyArgs() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnLookRevisionPropertyArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookRevisionPropertyArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnLookRevisionPropertyArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnLookWriteArgs">
            <summary>SharpSvn.SvnLookWriteArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnLookWriteArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnLookWriteArgs.#ctor(SharpSvn.SvnLookWriteArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnLookWriteArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnLookWriteArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookWriteArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookWriteArgs.CommandTypeGet">
            <summary>设置 SvnLookWriteArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookWriteArgs.Constructor">
            <summary>设置 SvnLookWriteArgs.SvnLookWriteArgs() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnLookWriteArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnLookWriteArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnLookWriteArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnMalfunctionException">
            <summary>SharpSvn.SvnMalfunctionException 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMalfunctionException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMalfunctionException.#ctor(SharpSvn.SvnMalfunctionException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMalfunctionException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMalfunctionException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMalfunctionException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMalfunctionException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMalfunctionException.Constructor">
            <summary>设置 SvnMalfunctionException.SvnMalfunctionException() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMalfunctionException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 SvnMalfunctionException.SvnMalfunctionException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMalfunctionException.ConstructorString">
            <summary>设置 SvnMalfunctionException.SvnMalfunctionException(String message) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMalfunctionException.ConstructorStringException">
            <summary>设置 SvnMalfunctionException.SvnMalfunctionException(String message, Exception inner) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMalfunctionException.ConstructorStringStringInt32">
            <summary>设置 SvnMalfunctionException.SvnMalfunctionException(String message, String file, Int32 line) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnMalfunctionException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnMergeArgs">
            <summary>SharpSvn.SvnMergeArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergeArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergeArgs.#ctor(SharpSvn.SvnMergeArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergeArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergeArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeArgs.CheckForMixedRevisionsGet">
            <summary>设置 SvnMergeArgs.get_CheckForMixedRevisions() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeArgs.CheckForMixedRevisionsSetBoolean">
            <summary>设置 SvnMergeArgs.set_CheckForMixedRevisions(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeArgs.CommandTypeGet">
            <summary>设置 SvnMergeArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeArgs.Constructor">
            <summary>设置 SvnMergeArgs.SvnMergeArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeArgs.DepthGet">
            <summary>设置 SvnMergeArgs.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeArgs.DepthSetSvnDepth">
            <summary>设置 SvnMergeArgs.set_Depth(SvnDepth value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeArgs.DryRunGet">
            <summary>设置 SvnMergeArgs.get_DryRun() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeArgs.DryRunSetBoolean">
            <summary>设置 SvnMergeArgs.set_DryRun(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeArgs.ForceGet">
            <summary>设置 SvnMergeArgs.get_Force() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeArgs.ForceSetBoolean">
            <summary>设置 SvnMergeArgs.set_Force(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeArgs.IgnoreAncestryGet">
            <summary>设置 SvnMergeArgs.get_IgnoreAncestry() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeArgs.IgnoreAncestrySetBoolean">
            <summary>设置 SvnMergeArgs.set_IgnoreAncestry(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeArgs.IgnoreMergeInfoGet">
            <summary>设置 SvnMergeArgs.get_IgnoreMergeInfo() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeArgs.IgnoreMergeInfoSetNullableOfBoolean">
            <summary>设置 SvnMergeArgs.set_IgnoreMergeInfo(Nullable`1&lt;Boolean&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeArgs.RecordOnlyGet">
            <summary>设置 SvnMergeArgs.get_RecordOnly() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeArgs.RecordOnlySetBoolean">
            <summary>设置 SvnMergeArgs.set_RecordOnly(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnMergeArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeArgs.AllInstances.CheckForMixedRevisionsGet">
            <summary>设置 SvnMergeArgs.get_CheckForMixedRevisions() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeArgs.AllInstances.CheckForMixedRevisionsSetBoolean">
            <summary>设置 SvnMergeArgs.set_CheckForMixedRevisions(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnMergeArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeArgs.AllInstances.DepthGet">
            <summary>设置 SvnMergeArgs.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeArgs.AllInstances.DepthSetSvnDepth">
            <summary>设置 SvnMergeArgs.set_Depth(SvnDepth value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeArgs.AllInstances.DryRunGet">
            <summary>设置 SvnMergeArgs.get_DryRun() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeArgs.AllInstances.DryRunSetBoolean">
            <summary>设置 SvnMergeArgs.set_DryRun(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeArgs.AllInstances.ForceGet">
            <summary>设置 SvnMergeArgs.get_Force() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeArgs.AllInstances.ForceSetBoolean">
            <summary>设置 SvnMergeArgs.set_Force(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeArgs.AllInstances.IgnoreAncestryGet">
            <summary>设置 SvnMergeArgs.get_IgnoreAncestry() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeArgs.AllInstances.IgnoreAncestrySetBoolean">
            <summary>设置 SvnMergeArgs.set_IgnoreAncestry(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeArgs.AllInstances.IgnoreMergeInfoGet">
            <summary>设置 SvnMergeArgs.get_IgnoreMergeInfo() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeArgs.AllInstances.IgnoreMergeInfoSetNullableOfBoolean">
            <summary>设置 SvnMergeArgs.set_IgnoreMergeInfo(Nullable`1&lt;Boolean&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeArgs.AllInstances.RecordOnlyGet">
            <summary>设置 SvnMergeArgs.get_RecordOnly() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeArgs.AllInstances.RecordOnlySetBoolean">
            <summary>设置 SvnMergeArgs.set_RecordOnly(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnMergeBaseArgs">
            <summary>SharpSvn.SvnMergeBaseArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergeBaseArgs.#ctor(SharpSvn.SvnMergeBaseArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergeBaseArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergeBaseArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeBaseArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeBaseArgs.Constructor">
            <summary>设置 SvnMergeBaseArgs.SvnMergeBaseArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeBaseArgs.MergeArgumentsGet">
            <summary>设置 SvnMergeBaseArgs.get_MergeArguments() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnMergeBaseArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeBaseArgs.AllInstances.MergeArgumentsGet">
            <summary>设置 SvnMergeBaseArgs.get_MergeArguments() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnMergeDiffArgs">
            <summary>SharpSvn.SvnMergeDiffArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergeDiffArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergeDiffArgs.#ctor(SharpSvn.SvnMergeDiffArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergeDiffArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergeDiffArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeDiffArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeDiffArgs.CommandTypeGet">
            <summary>设置 SvnMergeDiffArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeDiffArgs.ConsiderInheritanceGet">
            <summary>设置 SvnMergeDiffArgs.get_ConsiderInheritance() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeDiffArgs.ConsiderInheritanceSetBoolean">
            <summary>设置 SvnMergeDiffArgs.set_ConsiderInheritance(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeDiffArgs.Constructor">
            <summary>设置 SvnMergeDiffArgs.SvnMergeDiffArgs() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnMergeDiffArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeDiffArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnMergeDiffArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeDiffArgs.AllInstances.ConsiderInheritanceGet">
            <summary>设置 SvnMergeDiffArgs.get_ConsiderInheritance() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeDiffArgs.AllInstances.ConsiderInheritanceSetBoolean">
            <summary>设置 SvnMergeDiffArgs.set_ConsiderInheritance(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnMergeIntersectArgs">
            <summary>SharpSvn.SvnMergeIntersectArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergeIntersectArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergeIntersectArgs.#ctor(SharpSvn.SvnMergeIntersectArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergeIntersectArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergeIntersectArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeIntersectArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeIntersectArgs.CommandTypeGet">
            <summary>设置 SvnMergeIntersectArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeIntersectArgs.ConsiderInheritanceGet">
            <summary>设置 SvnMergeIntersectArgs.get_ConsiderInheritance() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeIntersectArgs.ConsiderInheritanceSetBoolean">
            <summary>设置 SvnMergeIntersectArgs.set_ConsiderInheritance(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeIntersectArgs.Constructor">
            <summary>设置 SvnMergeIntersectArgs.SvnMergeIntersectArgs() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnMergeIntersectArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeIntersectArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnMergeIntersectArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeIntersectArgs.AllInstances.ConsiderInheritanceGet">
            <summary>设置 SvnMergeIntersectArgs.get_ConsiderInheritance() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeIntersectArgs.AllInstances.ConsiderInheritanceSetBoolean">
            <summary>设置 SvnMergeIntersectArgs.set_ConsiderInheritance(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnMergeItem">
            <summary>SharpSvn.SvnMergeItem 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergeItem.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergeItem.#ctor(SharpSvn.SvnMergeItem)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergeItem.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergeItem.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeItem.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeItem.ConstructorUriSvnMergeRangeCollection">
            <summary>设置 SvnMergeItem.SvnMergeItem(Uri uri, SvnMergeRangeCollection ranges) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeItem.MergeRangesGet">
            <summary>设置 SvnMergeItem.get_MergeRanges() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeItem.UriGet">
            <summary>设置 SvnMergeItem.get_Uri() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnMergeItem.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeItem.AllInstances.MergeRangesGet">
            <summary>设置 SvnMergeItem.get_MergeRanges() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeItem.AllInstances.UriGet">
            <summary>设置 SvnMergeItem.get_Uri() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnMergeItemCollection">
            <summary>SharpSvn.SvnMergeItemCollection 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergeItemCollection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergeItemCollection.#ctor(SharpSvn.SvnMergeItemCollection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergeItemCollection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergeItemCollection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergeItemCollection.Bind(System.Collections.ICollection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergeItemCollection.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergeItemCollection.Bind(System.Collections.IList)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergeItemCollection.Bind(System.Collections.Generic.ICollection{SharpSvn.SvnMergeItem})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergeItemCollection.Bind(System.Collections.Generic.IEnumerable{SharpSvn.SvnMergeItem})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergeItemCollection.Bind(System.Collections.Generic.IList{SharpSvn.SvnMergeItem})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergeItemCollection.Bind(System.Collections.Generic.IReadOnlyCollection{SharpSvn.SvnMergeItem})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergeItemCollection.Bind(System.Collections.Generic.IReadOnlyList{SharpSvn.SvnMergeItem})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeItemCollection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeItemCollection.Constructor">
            <summary>设置 SvnMergeItemCollection.SvnMergeItemCollection() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeItemCollection.ConstructorIEnumerableOfSvnMergeItem">
            <summary>设置 SvnMergeItemCollection.SvnMergeItemCollection(IEnumerable`1&lt;SvnMergeItem&gt; items) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeItemCollection.GetKeyForItemSvnMergeItem">
            <summary>设置 SvnMergeItemCollection.GetKeyForItem(SvnMergeItem item) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeItemCollection.ToString">
            <summary>设置 SvnMergeItemCollection.ToString() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeItemCollection.TryDiffICollectionOfSvnMergeItemSvnMergeDiffArgsSvnMergeItemCollectionOutSvnMergeItemCollectionOut">
            <summary>设置 SvnMergeItemCollection.TryDiff(ICollection`1&lt;SvnMergeItem&gt; to, SvnMergeDiffArgs args, SvnMergeItemCollection&amp; added, SvnMergeItemCollection&amp; removed) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeItemCollection.TryDiffICollectionOfSvnMergeItemSvnMergeItemCollectionOutSvnMergeItemCollectionOut">
            <summary>设置 SvnMergeItemCollection.TryDiff(ICollection`1&lt;SvnMergeItem&gt; to, SvnMergeItemCollection&amp; added, SvnMergeItemCollection&amp; removed) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeItemCollection.TryIntersectICollectionOfSvnMergeItemSvnMergeIntersectArgsSvnMergeItemCollectionOut">
            <summary>设置 SvnMergeItemCollection.TryIntersect(ICollection`1&lt;SvnMergeItem&gt; to, SvnMergeIntersectArgs args, SvnMergeItemCollection&amp; intersected) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeItemCollection.TryIntersectICollectionOfSvnMergeItemSvnMergeItemCollectionOut">
            <summary>设置 SvnMergeItemCollection.TryIntersect(ICollection`1&lt;SvnMergeItem&gt; to, SvnMergeItemCollection&amp; intersected) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeItemCollection.TryParseStringSvnMergeItemCollectionOut">
            <summary>设置 SvnMergeItemCollection.TryParse(String input, SvnMergeItemCollection&amp; items) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeItemCollection.TryRemoveICollectionOfSvnMergeItemSvnMergeItemCollectionOut">
            <summary>设置 SvnMergeItemCollection.TryRemove(ICollection`1&lt;SvnMergeItem&gt; items, SvnMergeItemCollection&amp; rest) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeItemCollection.TryRemoveICollectionOfSvnMergeItemSvnMergeRemoveArgsSvnMergeItemCollectionOut">
            <summary>设置 SvnMergeItemCollection.TryRemove(ICollection`1&lt;SvnMergeItem&gt; items, SvnMergeRemoveArgs args, SvnMergeItemCollection&amp; rest) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnMergeItemCollection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeItemCollection.AllInstances.GetKeyForItemSvnMergeItem">
            <summary>设置 SvnMergeItemCollection.GetKeyForItem(SvnMergeItem item) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeItemCollection.AllInstances.ToString01">
            <summary>设置 SvnMergeItemCollection.ToString() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeItemCollection.AllInstances.TryDiffICollectionOfSvnMergeItemSvnMergeDiffArgsSvnMergeItemCollectionOutSvnMergeItemCollectionOut">
            <summary>设置 SvnMergeItemCollection.TryDiff(ICollection`1&lt;SvnMergeItem&gt; to, SvnMergeDiffArgs args, SvnMergeItemCollection&amp; added, SvnMergeItemCollection&amp; removed) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeItemCollection.AllInstances.TryDiffICollectionOfSvnMergeItemSvnMergeItemCollectionOutSvnMergeItemCollectionOut">
            <summary>设置 SvnMergeItemCollection.TryDiff(ICollection`1&lt;SvnMergeItem&gt; to, SvnMergeItemCollection&amp; added, SvnMergeItemCollection&amp; removed) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeItemCollection.AllInstances.TryIntersectICollectionOfSvnMergeItemSvnMergeIntersectArgsSvnMergeItemCollectionOut">
            <summary>设置 SvnMergeItemCollection.TryIntersect(ICollection`1&lt;SvnMergeItem&gt; to, SvnMergeIntersectArgs args, SvnMergeItemCollection&amp; intersected) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeItemCollection.AllInstances.TryIntersectICollectionOfSvnMergeItemSvnMergeItemCollectionOut">
            <summary>设置 SvnMergeItemCollection.TryIntersect(ICollection`1&lt;SvnMergeItem&gt; to, SvnMergeItemCollection&amp; intersected) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeItemCollection.AllInstances.TryRemoveICollectionOfSvnMergeItemSvnMergeItemCollectionOut">
            <summary>设置 SvnMergeItemCollection.TryRemove(ICollection`1&lt;SvnMergeItem&gt; items, SvnMergeItemCollection&amp; rest) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeItemCollection.AllInstances.TryRemoveICollectionOfSvnMergeItemSvnMergeRemoveArgsSvnMergeItemCollectionOut">
            <summary>设置 SvnMergeItemCollection.TryRemove(ICollection`1&lt;SvnMergeItem&gt; items, SvnMergeRemoveArgs args, SvnMergeItemCollection&amp; rest) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnMergeRange">
            <summary>SharpSvn.SvnMergeRange 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergeRange.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergeRange.#ctor(SharpSvn.SvnMergeRange)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergeRange.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergeRange.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergeRange.Bind(System.IEquatable{SharpSvn.SvnRevisionRange})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeRange.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeRange.ConstructorInt64Int64Boolean">
            <summary>设置 SvnMergeRange.SvnMergeRange(Int64 start, Int64 end, Boolean inheritable) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeRange.EndGet">
            <summary>设置 SvnMergeRange.get_End() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeRange.GetHashCode">
            <summary>设置 SvnMergeRange.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeRange.InheritableGet">
            <summary>设置 SvnMergeRange.get_Inheritable() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeRange.StartGet">
            <summary>设置 SvnMergeRange.get_Start() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeRange.ToString">
            <summary>设置 SvnMergeRange.ToString() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnMergeRange.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeRange.AllInstances.EndGet">
            <summary>设置 SvnMergeRange.get_End() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeRange.AllInstances.GetHashCode01">
            <summary>设置 SvnMergeRange.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeRange.AllInstances.InheritableGet">
            <summary>设置 SvnMergeRange.get_Inheritable() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeRange.AllInstances.StartGet">
            <summary>设置 SvnMergeRange.get_Start() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeRange.AllInstances.ToString01">
            <summary>设置 SvnMergeRange.ToString() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnMergeRangeCollection">
            <summary>SharpSvn.SvnMergeRangeCollection 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergeRangeCollection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergeRangeCollection.#ctor(SharpSvn.SvnMergeRangeCollection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergeRangeCollection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergeRangeCollection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergeRangeCollection.Bind(System.Collections.ICollection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergeRangeCollection.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergeRangeCollection.Bind(System.Collections.IList)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergeRangeCollection.Bind(System.Collections.Generic.ICollection{SharpSvn.SvnMergeRange})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergeRangeCollection.Bind(System.Collections.Generic.IEnumerable{SharpSvn.SvnMergeRange})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergeRangeCollection.Bind(System.Collections.Generic.IList{SharpSvn.SvnMergeRange})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergeRangeCollection.Bind(System.Collections.Generic.IReadOnlyCollection{SharpSvn.SvnMergeRange})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergeRangeCollection.Bind(System.Collections.Generic.IReadOnlyList{SharpSvn.SvnMergeRange})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeRangeCollection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeRangeCollection.Constructor">
            <summary>设置 SvnMergeRangeCollection.SvnMergeRangeCollection() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeRangeCollection.ConstructorICollectionOfSvnMergeRange">
            <summary>设置 SvnMergeRangeCollection.SvnMergeRangeCollection(ICollection`1&lt;SvnMergeRange&gt; list) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeRangeCollection.ToString">
            <summary>设置 SvnMergeRangeCollection.ToString() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeRangeCollection.TryDiffICollectionOfSvnMergeRangeSvnMergeDiffArgsSvnMergeRangeCollectionOutSvnMergeRangeCollectionOut">
            <summary>设置 SvnMergeRangeCollection.TryDiff(ICollection`1&lt;SvnMergeRange&gt; to, SvnMergeDiffArgs args, SvnMergeRangeCollection&amp; added, SvnMergeRangeCollection&amp; removed) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeRangeCollection.TryDiffICollectionOfSvnMergeRangeSvnMergeRangeCollectionOutSvnMergeRangeCollectionOut">
            <summary>设置 SvnMergeRangeCollection.TryDiff(ICollection`1&lt;SvnMergeRange&gt; to, SvnMergeRangeCollection&amp; added, SvnMergeRangeCollection&amp; removed) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeRangeCollection.TryIntersectICollectionOfSvnMergeRangeSvnMergeIntersectArgsSvnMergeRangeCollectionOut">
            <summary>设置 SvnMergeRangeCollection.TryIntersect(ICollection`1&lt;SvnMergeRange&gt; to, SvnMergeIntersectArgs args, SvnMergeRangeCollection&amp; intersected) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeRangeCollection.TryIntersectICollectionOfSvnMergeRangeSvnMergeRangeCollectionOut">
            <summary>设置 SvnMergeRangeCollection.TryIntersect(ICollection`1&lt;SvnMergeRange&gt; to, SvnMergeRangeCollection&amp; intersected) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeRangeCollection.TryRemoveICollectionOfSvnMergeRangeSvnMergeRangeCollectionOut">
            <summary>设置 SvnMergeRangeCollection.TryRemove(ICollection`1&lt;SvnMergeRange&gt; items, SvnMergeRangeCollection&amp; rest) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeRangeCollection.TryRemoveICollectionOfSvnMergeRangeSvnMergeRemoveArgsSvnMergeRangeCollectionOut">
            <summary>设置 SvnMergeRangeCollection.TryRemove(ICollection`1&lt;SvnMergeRange&gt; items, SvnMergeRemoveArgs args, SvnMergeRangeCollection&amp; rest) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnMergeRangeCollection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeRangeCollection.AllInstances.ToString01">
            <summary>设置 SvnMergeRangeCollection.ToString() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeRangeCollection.AllInstances.TryDiffICollectionOfSvnMergeRangeSvnMergeDiffArgsSvnMergeRangeCollectionOutSvnMergeRangeCollectionOut">
            <summary>设置 SvnMergeRangeCollection.TryDiff(ICollection`1&lt;SvnMergeRange&gt; to, SvnMergeDiffArgs args, SvnMergeRangeCollection&amp; added, SvnMergeRangeCollection&amp; removed) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeRangeCollection.AllInstances.TryDiffICollectionOfSvnMergeRangeSvnMergeRangeCollectionOutSvnMergeRangeCollectionOut">
            <summary>设置 SvnMergeRangeCollection.TryDiff(ICollection`1&lt;SvnMergeRange&gt; to, SvnMergeRangeCollection&amp; added, SvnMergeRangeCollection&amp; removed) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeRangeCollection.AllInstances.TryIntersectICollectionOfSvnMergeRangeSvnMergeIntersectArgsSvnMergeRangeCollectionOut">
            <summary>设置 SvnMergeRangeCollection.TryIntersect(ICollection`1&lt;SvnMergeRange&gt; to, SvnMergeIntersectArgs args, SvnMergeRangeCollection&amp; intersected) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeRangeCollection.AllInstances.TryIntersectICollectionOfSvnMergeRangeSvnMergeRangeCollectionOut">
            <summary>设置 SvnMergeRangeCollection.TryIntersect(ICollection`1&lt;SvnMergeRange&gt; to, SvnMergeRangeCollection&amp; intersected) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeRangeCollection.AllInstances.TryRemoveICollectionOfSvnMergeRangeSvnMergeRangeCollectionOut">
            <summary>设置 SvnMergeRangeCollection.TryRemove(ICollection`1&lt;SvnMergeRange&gt; items, SvnMergeRangeCollection&amp; rest) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeRangeCollection.AllInstances.TryRemoveICollectionOfSvnMergeRangeSvnMergeRemoveArgsSvnMergeRangeCollectionOut">
            <summary>设置 SvnMergeRangeCollection.TryRemove(ICollection`1&lt;SvnMergeRange&gt; items, SvnMergeRemoveArgs args, SvnMergeRangeCollection&amp; rest) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnMergeRemoveArgs">
            <summary>SharpSvn.SvnMergeRemoveArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergeRemoveArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergeRemoveArgs.#ctor(SharpSvn.SvnMergeRemoveArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergeRemoveArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergeRemoveArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeRemoveArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeRemoveArgs.CommandTypeGet">
            <summary>设置 SvnMergeRemoveArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeRemoveArgs.ConsiderInheritanceGet">
            <summary>设置 SvnMergeRemoveArgs.get_ConsiderInheritance() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeRemoveArgs.ConsiderInheritanceSetBoolean">
            <summary>设置 SvnMergeRemoveArgs.set_ConsiderInheritance(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeRemoveArgs.Constructor">
            <summary>设置 SvnMergeRemoveArgs.SvnMergeRemoveArgs() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnMergeRemoveArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeRemoveArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnMergeRemoveArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeRemoveArgs.AllInstances.ConsiderInheritanceGet">
            <summary>设置 SvnMergeRemoveArgs.get_ConsiderInheritance() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeRemoveArgs.AllInstances.ConsiderInheritanceSetBoolean">
            <summary>设置 SvnMergeRemoveArgs.set_ConsiderInheritance(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnMergeSource">
            <summary>SharpSvn.SvnMergeSource 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergeSource.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergeSource.#ctor(SharpSvn.SvnMergeSource)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergeSource.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergeSource.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeSource.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeSource.ConstructorUri">
            <summary>设置 SvnMergeSource.SvnMergeSource(Uri uri) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeSource.UriGet">
            <summary>设置 SvnMergeSource.get_Uri() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnMergeSource.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeSource.AllInstances.UriGet">
            <summary>设置 SvnMergeSource.get_Uri() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnMergeSourcesCollection">
            <summary>SharpSvn.SvnMergeSourcesCollection 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergeSourcesCollection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergeSourcesCollection.#ctor(SharpSvn.SvnMergeSourcesCollection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergeSourcesCollection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergeSourcesCollection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergeSourcesCollection.Bind(System.Collections.ICollection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergeSourcesCollection.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergeSourcesCollection.Bind(System.Collections.IList)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergeSourcesCollection.Bind(System.Collections.Generic.ICollection{SharpSvn.SvnMergeSource})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergeSourcesCollection.Bind(System.Collections.Generic.IEnumerable{SharpSvn.SvnMergeSource})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergeSourcesCollection.Bind(System.Collections.Generic.IList{SharpSvn.SvnMergeSource})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergeSourcesCollection.Bind(System.Collections.Generic.IReadOnlyCollection{SharpSvn.SvnMergeSource})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergeSourcesCollection.Bind(System.Collections.Generic.IReadOnlyList{SharpSvn.SvnMergeSource})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeSourcesCollection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergeSourcesCollection.Constructor">
            <summary>设置 SvnMergeSourcesCollection.SvnMergeSourcesCollection() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnMergeSourcesCollection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnMergesEligibleArgs">
            <summary>SharpSvn.SvnMergesEligibleArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergesEligibleArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergesEligibleArgs.#ctor(SharpSvn.SvnMergesEligibleArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergesEligibleArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergesEligibleArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesEligibleArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesEligibleArgs.CommandTypeGet">
            <summary>设置 SvnMergesEligibleArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesEligibleArgs.Constructor">
            <summary>设置 SvnMergesEligibleArgs.SvnMergesEligibleArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesEligibleArgs.DepthGet">
            <summary>设置 SvnMergesEligibleArgs.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesEligibleArgs.DepthSetSvnDepth">
            <summary>设置 SvnMergesEligibleArgs.set_Depth(SvnDepth value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesEligibleArgs.ListAddEventHandlerOfSvnMergesEligibleEventArgs">
            <summary>设置 SvnMergesEligibleArgs.add_List(EventHandler`1&lt;SvnMergesEligibleEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesEligibleArgs.ListRemoveEventHandlerOfSvnMergesEligibleEventArgs">
            <summary>设置 SvnMergesEligibleArgs.remove_List(EventHandler`1&lt;SvnMergesEligibleEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesEligibleArgs.MergesEligibleAddEventHandlerOfSvnMergesEligibleEventArgs">
            <summary>设置 SvnMergesEligibleArgs.add_MergesEligible(EventHandler`1&lt;SvnMergesEligibleEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesEligibleArgs.MergesEligibleRaiseObjectSvnMergesEligibleEventArgs">
            <summary>设置 SvnMergesEligibleArgs.raise_MergesEligible(Object sender, SvnMergesEligibleEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesEligibleArgs.MergesEligibleRemoveEventHandlerOfSvnMergesEligibleEventArgs">
            <summary>设置 SvnMergesEligibleArgs.remove_MergesEligible(EventHandler`1&lt;SvnMergesEligibleEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesEligibleArgs.OnMergesEligibleSvnMergesEligibleEventArgs">
            <summary>设置 SvnMergesEligibleArgs.OnMergesEligible(SvnMergesEligibleEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesEligibleArgs.RangeGet">
            <summary>设置 SvnMergesEligibleArgs.get_Range() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesEligibleArgs.RangeSetSvnRevisionRange">
            <summary>设置 SvnMergesEligibleArgs.set_Range(SvnRevisionRange value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesEligibleArgs.RetrieveChangedPathsGet">
            <summary>设置 SvnMergesEligibleArgs.get_RetrieveChangedPaths() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesEligibleArgs.RetrieveChangedPathsSetBoolean">
            <summary>设置 SvnMergesEligibleArgs.set_RetrieveChangedPaths(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesEligibleArgs.RetrievePropertiesGet">
            <summary>设置 SvnMergesEligibleArgs.get_RetrieveProperties() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesEligibleArgs.RetrievePropertiesUsedGet">
            <summary>设置 SvnMergesEligibleArgs.get_RetrievePropertiesUsed() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnMergesEligibleArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesEligibleArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnMergesEligibleArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesEligibleArgs.AllInstances.DepthGet">
            <summary>设置 SvnMergesEligibleArgs.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesEligibleArgs.AllInstances.DepthSetSvnDepth">
            <summary>设置 SvnMergesEligibleArgs.set_Depth(SvnDepth value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesEligibleArgs.AllInstances.ListAddEventHandlerOfSvnMergesEligibleEventArgs">
            <summary>设置 SvnMergesEligibleArgs.add_List(EventHandler`1&lt;SvnMergesEligibleEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesEligibleArgs.AllInstances.ListRemoveEventHandlerOfSvnMergesEligibleEventArgs">
            <summary>设置 SvnMergesEligibleArgs.remove_List(EventHandler`1&lt;SvnMergesEligibleEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesEligibleArgs.AllInstances.MergesEligibleAddEventHandlerOfSvnMergesEligibleEventArgs">
            <summary>设置 SvnMergesEligibleArgs.add_MergesEligible(EventHandler`1&lt;SvnMergesEligibleEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesEligibleArgs.AllInstances.MergesEligibleRaiseObjectSvnMergesEligibleEventArgs">
            <summary>设置 SvnMergesEligibleArgs.raise_MergesEligible(Object sender, SvnMergesEligibleEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesEligibleArgs.AllInstances.MergesEligibleRemoveEventHandlerOfSvnMergesEligibleEventArgs">
            <summary>设置 SvnMergesEligibleArgs.remove_MergesEligible(EventHandler`1&lt;SvnMergesEligibleEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesEligibleArgs.AllInstances.OnMergesEligibleSvnMergesEligibleEventArgs">
            <summary>设置 SvnMergesEligibleArgs.OnMergesEligible(SvnMergesEligibleEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesEligibleArgs.AllInstances.RangeGet">
            <summary>设置 SvnMergesEligibleArgs.get_Range() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesEligibleArgs.AllInstances.RangeSetSvnRevisionRange">
            <summary>设置 SvnMergesEligibleArgs.set_Range(SvnRevisionRange value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesEligibleArgs.AllInstances.RetrieveChangedPathsGet">
            <summary>设置 SvnMergesEligibleArgs.get_RetrieveChangedPaths() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesEligibleArgs.AllInstances.RetrieveChangedPathsSetBoolean">
            <summary>设置 SvnMergesEligibleArgs.set_RetrieveChangedPaths(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesEligibleArgs.AllInstances.RetrievePropertiesGet">
            <summary>设置 SvnMergesEligibleArgs.get_RetrieveProperties() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesEligibleArgs.AllInstances.RetrievePropertiesUsedGet">
            <summary>设置 SvnMergesEligibleArgs.get_RetrievePropertiesUsed() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnMergesEligibleEventArgs">
            <summary>SharpSvn.SvnMergesEligibleEventArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergesEligibleEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergesEligibleEventArgs.#ctor(SharpSvn.SvnMergesEligibleEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergesEligibleEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergesEligibleEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesEligibleEventArgs.AsRange">
            <summary>设置 SvnMergesEligibleEventArgs.AsRange() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesEligibleEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesEligibleEventArgs.SourceTargetGet">
            <summary>设置 SvnMergesEligibleEventArgs.get_SourceTarget() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesEligibleEventArgs.SourceUriGet">
            <summary>设置 SvnMergesEligibleEventArgs.get_SourceUri() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnMergesEligibleEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesEligibleEventArgs.AllInstances.AsRange">
            <summary>设置 SvnMergesEligibleEventArgs.AsRange() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesEligibleEventArgs.AllInstances.SourceTargetGet">
            <summary>设置 SvnMergesEligibleEventArgs.get_SourceTarget() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesEligibleEventArgs.AllInstances.SourceUriGet">
            <summary>设置 SvnMergesEligibleEventArgs.get_SourceUri() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnMergesMergedArgs">
            <summary>SharpSvn.SvnMergesMergedArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergesMergedArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergesMergedArgs.#ctor(SharpSvn.SvnMergesMergedArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergesMergedArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergesMergedArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesMergedArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesMergedArgs.CommandTypeGet">
            <summary>设置 SvnMergesMergedArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesMergedArgs.Constructor">
            <summary>设置 SvnMergesMergedArgs.SvnMergesMergedArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesMergedArgs.DepthGet">
            <summary>设置 SvnMergesMergedArgs.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesMergedArgs.DepthSetSvnDepth">
            <summary>设置 SvnMergesMergedArgs.set_Depth(SvnDepth value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesMergedArgs.ListAddEventHandlerOfSvnMergesMergedEventArgs">
            <summary>设置 SvnMergesMergedArgs.add_List(EventHandler`1&lt;SvnMergesMergedEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesMergedArgs.ListRemoveEventHandlerOfSvnMergesMergedEventArgs">
            <summary>设置 SvnMergesMergedArgs.remove_List(EventHandler`1&lt;SvnMergesMergedEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesMergedArgs.MergesMergedAddEventHandlerOfSvnMergesMergedEventArgs">
            <summary>设置 SvnMergesMergedArgs.add_MergesMerged(EventHandler`1&lt;SvnMergesMergedEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesMergedArgs.MergesMergedRaiseObjectSvnMergesMergedEventArgs">
            <summary>设置 SvnMergesMergedArgs.raise_MergesMerged(Object sender, SvnMergesMergedEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesMergedArgs.MergesMergedRemoveEventHandlerOfSvnMergesMergedEventArgs">
            <summary>设置 SvnMergesMergedArgs.remove_MergesMerged(EventHandler`1&lt;SvnMergesMergedEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesMergedArgs.OnMergesMergedSvnMergesMergedEventArgs">
            <summary>设置 SvnMergesMergedArgs.OnMergesMerged(SvnMergesMergedEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesMergedArgs.RangeGet">
            <summary>设置 SvnMergesMergedArgs.get_Range() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesMergedArgs.RangeSetSvnRevisionRange">
            <summary>设置 SvnMergesMergedArgs.set_Range(SvnRevisionRange value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesMergedArgs.RetrieveChangedPathsGet">
            <summary>设置 SvnMergesMergedArgs.get_RetrieveChangedPaths() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesMergedArgs.RetrieveChangedPathsSetBoolean">
            <summary>设置 SvnMergesMergedArgs.set_RetrieveChangedPaths(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesMergedArgs.RetrievePropertiesGet">
            <summary>设置 SvnMergesMergedArgs.get_RetrieveProperties() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesMergedArgs.RetrievePropertiesUsedGet">
            <summary>设置 SvnMergesMergedArgs.get_RetrievePropertiesUsed() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnMergesMergedArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesMergedArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnMergesMergedArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesMergedArgs.AllInstances.DepthGet">
            <summary>设置 SvnMergesMergedArgs.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesMergedArgs.AllInstances.DepthSetSvnDepth">
            <summary>设置 SvnMergesMergedArgs.set_Depth(SvnDepth value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesMergedArgs.AllInstances.ListAddEventHandlerOfSvnMergesMergedEventArgs">
            <summary>设置 SvnMergesMergedArgs.add_List(EventHandler`1&lt;SvnMergesMergedEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesMergedArgs.AllInstances.ListRemoveEventHandlerOfSvnMergesMergedEventArgs">
            <summary>设置 SvnMergesMergedArgs.remove_List(EventHandler`1&lt;SvnMergesMergedEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesMergedArgs.AllInstances.MergesMergedAddEventHandlerOfSvnMergesMergedEventArgs">
            <summary>设置 SvnMergesMergedArgs.add_MergesMerged(EventHandler`1&lt;SvnMergesMergedEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesMergedArgs.AllInstances.MergesMergedRaiseObjectSvnMergesMergedEventArgs">
            <summary>设置 SvnMergesMergedArgs.raise_MergesMerged(Object sender, SvnMergesMergedEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesMergedArgs.AllInstances.MergesMergedRemoveEventHandlerOfSvnMergesMergedEventArgs">
            <summary>设置 SvnMergesMergedArgs.remove_MergesMerged(EventHandler`1&lt;SvnMergesMergedEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesMergedArgs.AllInstances.OnMergesMergedSvnMergesMergedEventArgs">
            <summary>设置 SvnMergesMergedArgs.OnMergesMerged(SvnMergesMergedEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesMergedArgs.AllInstances.RangeGet">
            <summary>设置 SvnMergesMergedArgs.get_Range() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesMergedArgs.AllInstances.RangeSetSvnRevisionRange">
            <summary>设置 SvnMergesMergedArgs.set_Range(SvnRevisionRange value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesMergedArgs.AllInstances.RetrieveChangedPathsGet">
            <summary>设置 SvnMergesMergedArgs.get_RetrieveChangedPaths() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesMergedArgs.AllInstances.RetrieveChangedPathsSetBoolean">
            <summary>设置 SvnMergesMergedArgs.set_RetrieveChangedPaths(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesMergedArgs.AllInstances.RetrievePropertiesGet">
            <summary>设置 SvnMergesMergedArgs.get_RetrieveProperties() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesMergedArgs.AllInstances.RetrievePropertiesUsedGet">
            <summary>设置 SvnMergesMergedArgs.get_RetrievePropertiesUsed() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnMergesMergedEventArgs">
            <summary>SharpSvn.SvnMergesMergedEventArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergesMergedEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergesMergedEventArgs.#ctor(SharpSvn.SvnMergesMergedEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergesMergedEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMergesMergedEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesMergedEventArgs.AsRange">
            <summary>设置 SvnMergesMergedEventArgs.AsRange() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesMergedEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesMergedEventArgs.SourceTargetGet">
            <summary>设置 SvnMergesMergedEventArgs.get_SourceTarget() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesMergedEventArgs.SourceUriGet">
            <summary>设置 SvnMergesMergedEventArgs.get_SourceUri() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnMergesMergedEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesMergedEventArgs.AllInstances.AsRange">
            <summary>设置 SvnMergesMergedEventArgs.AsRange() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesMergedEventArgs.AllInstances.SourceTargetGet">
            <summary>设置 SvnMergesMergedEventArgs.get_SourceTarget() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMergesMergedEventArgs.AllInstances.SourceUriGet">
            <summary>设置 SvnMergesMergedEventArgs.get_SourceUri() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnMoveArgs">
            <summary>SharpSvn.SvnMoveArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMoveArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMoveArgs.#ctor(SharpSvn.SvnMoveArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMoveArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMoveArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMoveArgs.AllowMixedRevisionsGet">
            <summary>设置 SvnMoveArgs.get_AllowMixedRevisions() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMoveArgs.AllowMixedRevisionsSetBoolean">
            <summary>设置 SvnMoveArgs.set_AllowMixedRevisions(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMoveArgs.AlwaysMoveAsChildGet">
            <summary>设置 SvnMoveArgs.get_AlwaysMoveAsChild() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMoveArgs.AlwaysMoveAsChildSetBoolean">
            <summary>设置 SvnMoveArgs.set_AlwaysMoveAsChild(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMoveArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMoveArgs.CommandTypeGet">
            <summary>设置 SvnMoveArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMoveArgs.Constructor">
            <summary>设置 SvnMoveArgs.SvnMoveArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMoveArgs.CreateParentsGet">
            <summary>设置 SvnMoveArgs.get_CreateParents() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMoveArgs.CreateParentsSetBoolean">
            <summary>设置 SvnMoveArgs.set_CreateParents(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMoveArgs.ForceGet">
            <summary>设置 SvnMoveArgs.get_Force() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMoveArgs.ForceSetBoolean">
            <summary>设置 SvnMoveArgs.set_Force(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMoveArgs.MakeParentsGet">
            <summary>设置 SvnMoveArgs.get_MakeParents() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMoveArgs.MakeParentsSetBoolean">
            <summary>设置 SvnMoveArgs.set_MakeParents(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMoveArgs.MetaDataOnlyGet">
            <summary>设置 SvnMoveArgs.get_MetaDataOnly() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMoveArgs.MetaDataOnlySetBoolean">
            <summary>设置 SvnMoveArgs.set_MetaDataOnly(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnMoveArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMoveArgs.AllInstances.AllowMixedRevisionsGet">
            <summary>设置 SvnMoveArgs.get_AllowMixedRevisions() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMoveArgs.AllInstances.AllowMixedRevisionsSetBoolean">
            <summary>设置 SvnMoveArgs.set_AllowMixedRevisions(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMoveArgs.AllInstances.AlwaysMoveAsChildGet">
            <summary>设置 SvnMoveArgs.get_AlwaysMoveAsChild() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMoveArgs.AllInstances.AlwaysMoveAsChildSetBoolean">
            <summary>设置 SvnMoveArgs.set_AlwaysMoveAsChild(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMoveArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnMoveArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMoveArgs.AllInstances.CreateParentsGet">
            <summary>设置 SvnMoveArgs.get_CreateParents() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMoveArgs.AllInstances.CreateParentsSetBoolean">
            <summary>设置 SvnMoveArgs.set_CreateParents(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMoveArgs.AllInstances.ForceGet">
            <summary>设置 SvnMoveArgs.get_Force() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMoveArgs.AllInstances.ForceSetBoolean">
            <summary>设置 SvnMoveArgs.set_Force(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMoveArgs.AllInstances.MakeParentsGet">
            <summary>设置 SvnMoveArgs.get_MakeParents() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMoveArgs.AllInstances.MakeParentsSetBoolean">
            <summary>设置 SvnMoveArgs.set_MakeParents(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMoveArgs.AllInstances.MetaDataOnlyGet">
            <summary>设置 SvnMoveArgs.get_MetaDataOnly() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMoveArgs.AllInstances.MetaDataOnlySetBoolean">
            <summary>设置 SvnMoveArgs.set_MetaDataOnly(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnMultiCommandClient">
            <summary>SharpSvn.SvnMultiCommandClient 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMultiCommandClient.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMultiCommandClient.#ctor(SharpSvn.SvnMultiCommandClient)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMultiCommandClient.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMultiCommandClient.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMultiCommandClient.Bind(System.ComponentModel.IComponent)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnMultiCommandClient.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.CancelAddEventHandlerOfSvnCancelEventArgs">
            <summary>设置 SvnMultiCommandClient.add_Cancel(EventHandler`1&lt;SvnCancelEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.CancelRaiseObjectSvnCancelEventArgs">
            <summary>设置 SvnMultiCommandClient.raise_Cancel(Object sender, SvnCancelEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.CancelRemoveEventHandlerOfSvnCancelEventArgs">
            <summary>设置 SvnMultiCommandClient.remove_Cancel(EventHandler`1&lt;SvnCancelEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.Commit">
            <summary>设置 SvnMultiCommandClient.Commit() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.CommitSvnCommitResultOut">
            <summary>设置 SvnMultiCommandClient.Commit(SvnCommitResult&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.CommittedAddEventHandlerOfSvnCommittedEventArgs">
            <summary>设置 SvnMultiCommandClient.add_Committed(EventHandler`1&lt;SvnCommittedEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.CommittedRaiseObjectSvnCommittedEventArgs">
            <summary>设置 SvnMultiCommandClient.raise_Committed(Object sender, SvnCommittedEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.CommittedRemoveEventHandlerOfSvnCommittedEventArgs">
            <summary>设置 SvnMultiCommandClient.remove_Committed(EventHandler`1&lt;SvnCommittedEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.CommittingAddEventHandlerOfSvnCommittingEventArgs">
            <summary>设置 SvnMultiCommandClient.add_Committing(EventHandler`1&lt;SvnCommittingEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.CommittingRaiseObjectSvnCommittingEventArgs">
            <summary>设置 SvnMultiCommandClient.raise_Committing(Object sender, SvnCommittingEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.CommittingRemoveEventHandlerOfSvnCommittingEventArgs">
            <summary>设置 SvnMultiCommandClient.remove_Committing(EventHandler`1&lt;SvnCommittingEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.Constructor">
            <summary>设置 SvnMultiCommandClient.SvnMultiCommandClient() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.ConstructorSvnClient">
            <summary>设置 SvnMultiCommandClient.SvnMultiCommandClient(SvnClient via) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.ConstructorUri">
            <summary>设置 SvnMultiCommandClient.SvnMultiCommandClient(Uri sessionUri) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.ConstructorUriSvnRepositoryOperationArgs">
            <summary>设置 SvnMultiCommandClient.SvnMultiCommandClient(Uri sessionUri, SvnRepositoryOperationArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.CopyStringInt64String">
            <summary>设置 SvnMultiCommandClient.Copy(String fromPath, Int64 fromRev, String toPath) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.CopyStringInt64StringSvnRepositoryCopyArgs">
            <summary>设置 SvnMultiCommandClient.Copy(String fromPath, Int64 fromRev, String toPath, SvnRepositoryCopyArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.CopyStringString">
            <summary>设置 SvnMultiCommandClient.Copy(String fromPath, String toPath) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.CopyStringStringSvnRepositoryCopyArgs">
            <summary>设置 SvnMultiCommandClient.Copy(String fromPath, String toPath, SvnRepositoryCopyArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.CreateDirectoryString">
            <summary>设置 SvnMultiCommandClient.CreateDirectory(String path) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.CreateDirectoryStringSvnRepositoryCreateDirectoryArgs">
            <summary>设置 SvnMultiCommandClient.CreateDirectory(String path, SvnRepositoryCreateDirectoryArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.CreateFileStringStream">
            <summary>设置 SvnMultiCommandClient.CreateFile(String path, Stream newData) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.CreateFileStringStreamSvnRepositoryCreateFileArgs">
            <summary>设置 SvnMultiCommandClient.CreateFile(String path, Stream newData, SvnRepositoryCreateFileArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.CurrentCommandArgsGet">
            <summary>设置 SvnMultiCommandClient.get_CurrentCommandArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.DeletePropertyStringString">
            <summary>设置 SvnMultiCommandClient.DeleteProperty(String path, String propertyName) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.DeletePropertyStringStringSvnRepositorySetPropertyArgs">
            <summary>设置 SvnMultiCommandClient.DeleteProperty(String path, String propertyName, SvnRepositorySetPropertyArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.DeleteString">
            <summary>设置 SvnMultiCommandClient.Delete(String path) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.DeleteStringSvnRepositoryDeleteArgs">
            <summary>设置 SvnMultiCommandClient.Delete(String path, SvnRepositoryDeleteArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.DisposeBoolean">
            <summary>设置 SvnMultiCommandClient.Dispose(Boolean ) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.GetNodeKindStringSvnNodeKindRef">
            <summary>设置 SvnMultiCommandClient.GetNodeKind(String path, SvnNodeKind&amp; kind) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.GetNodeKindStringSvnRepositoryGetNodeKindArgsSvnNodeKindRef">
            <summary>设置 SvnMultiCommandClient.GetNodeKind(String path, SvnRepositoryGetNodeKindArgs args, SvnNodeKind&amp; kind) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.HandleClientCancelSvnCancelEventArgs">
            <summary>设置 SvnMultiCommandClient.HandleClientCancel(SvnCancelEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.HandleClientCommittedSvnCommittedEventArgs">
            <summary>设置 SvnMultiCommandClient.HandleClientCommitted(SvnCommittedEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.HandleClientCommittingSvnCommittingEventArgs">
            <summary>设置 SvnMultiCommandClient.HandleClientCommitting(SvnCommittingEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.HandleClientErrorSvnErrorEventArgs">
            <summary>设置 SvnMultiCommandClient.HandleClientError(SvnErrorEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.HandleClientNotifySvnNotifyEventArgs">
            <summary>设置 SvnMultiCommandClient.HandleClientNotify(SvnNotifyEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.HandleClientProgressSvnProgressEventArgs">
            <summary>设置 SvnMultiCommandClient.HandleClientProgress(SvnProgressEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.HandleProcessingSvnProcessingEventArgs">
            <summary>设置 SvnMultiCommandClient.HandleProcessing(SvnProcessingEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.Initialize">
            <summary>设置 SvnMultiCommandClient.Initialize() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.MoveStringString">
            <summary>设置 SvnMultiCommandClient.Move(String fromPath, String toPath) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.MoveStringStringSvnRepositoryMoveArgs">
            <summary>设置 SvnMultiCommandClient.Move(String fromPath, String toPath, SvnRepositoryMoveArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.NotifyAddEventHandlerOfSvnNotifyEventArgs">
            <summary>设置 SvnMultiCommandClient.add_Notify(EventHandler`1&lt;SvnNotifyEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.NotifyRaiseObjectSvnNotifyEventArgs">
            <summary>设置 SvnMultiCommandClient.raise_Notify(Object sender, SvnNotifyEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.NotifyRemoveEventHandlerOfSvnNotifyEventArgs">
            <summary>设置 SvnMultiCommandClient.remove_Notify(EventHandler`1&lt;SvnNotifyEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnMultiCommandClient.OnCancel(SvnCancelEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.OnCommittedSvnCommittedEventArgs">
            <summary>设置 SvnMultiCommandClient.OnCommitted(SvnCommittedEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.OnCommittingSvnCommittingEventArgs">
            <summary>设置 SvnMultiCommandClient.OnCommitting(SvnCommittingEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnMultiCommandClient.OnNotify(SvnNotifyEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.OnProcessingSvnProcessingEventArgs">
            <summary>设置 SvnMultiCommandClient.OnProcessing(SvnProcessingEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnMultiCommandClient.OnProgress(SvnProgressEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnMultiCommandClient.OnSvnError(SvnErrorEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.OpenUri">
            <summary>设置 SvnMultiCommandClient.Open(Uri sessionUri) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.OpenUriSvnRepositoryOperationArgs">
            <summary>设置 SvnMultiCommandClient.Open(Uri sessionUri, SvnRepositoryOperationArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.ProcessingAddEventHandlerOfSvnProcessingEventArgs">
            <summary>设置 SvnMultiCommandClient.add_Processing(EventHandler`1&lt;SvnProcessingEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.ProcessingRaiseObjectSvnProcessingEventArgs">
            <summary>设置 SvnMultiCommandClient.raise_Processing(Object sender, SvnProcessingEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.ProcessingRemoveEventHandlerOfSvnProcessingEventArgs">
            <summary>设置 SvnMultiCommandClient.remove_Processing(EventHandler`1&lt;SvnProcessingEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.ProgressAddEventHandlerOfSvnProgressEventArgs">
            <summary>设置 SvnMultiCommandClient.add_Progress(EventHandler`1&lt;SvnProgressEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.ProgressRaiseObjectSvnProgressEventArgs">
            <summary>设置 SvnMultiCommandClient.raise_Progress(Object sender, SvnProgressEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.ProgressRemoveEventHandlerOfSvnProgressEventArgs">
            <summary>设置 SvnMultiCommandClient.remove_Progress(EventHandler`1&lt;SvnProgressEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.SetPropertyStringStringICollectionOfByte">
            <summary>设置 SvnMultiCommandClient.SetProperty(String path, String propertyName, ICollection`1&lt;Byte&gt; bytes) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.SetPropertyStringStringICollectionOfByteSvnRepositorySetPropertyArgs">
            <summary>设置 SvnMultiCommandClient.SetProperty(String path, String propertyName, ICollection`1&lt;Byte&gt; bytes, SvnRepositorySetPropertyArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.SetPropertyStringStringString">
            <summary>设置 SvnMultiCommandClient.SetProperty(String path, String propertyName, String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.SetPropertyStringStringStringSvnRepositorySetPropertyArgs">
            <summary>设置 SvnMultiCommandClient.SetProperty(String path, String propertyName, String value, SvnRepositorySetPropertyArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.SvnErrorAddEventHandlerOfSvnErrorEventArgs">
            <summary>设置 SvnMultiCommandClient.add_SvnError(EventHandler`1&lt;SvnErrorEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.SvnErrorRaiseObjectSvnErrorEventArgs">
            <summary>设置 SvnMultiCommandClient.raise_SvnError(Object sender, SvnErrorEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.SvnErrorRemoveEventHandlerOfSvnErrorEventArgs">
            <summary>设置 SvnMultiCommandClient.remove_SvnError(EventHandler`1&lt;SvnErrorEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.UpdateFileStringStream">
            <summary>设置 SvnMultiCommandClient.UpdateFile(String path, Stream newData) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.UpdateFileStringStreamSvnRepositoryUpdateFileArgs">
            <summary>设置 SvnMultiCommandClient.UpdateFile(String path, Stream newData, SvnRepositoryUpdateFileArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.ViaCommitSvnCommitResultOut">
            <summary>设置 SvnMultiCommandClient.ViaCommit(SvnCommitResult&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.ViaOpenUriSvnRepositoryOperationArgs">
            <summary>设置 SvnMultiCommandClient.ViaOpen(Uri sessionUri, SvnRepositoryOperationArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient._SvnMultiCommandClient">
            <summary>设置 SvnMultiCommandClient.~SvnMultiCommandClient() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnMultiCommandClient.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.AllInstances.CancelAddEventHandlerOfSvnCancelEventArgs">
            <summary>设置 SvnMultiCommandClient.add_Cancel(EventHandler`1&lt;SvnCancelEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.AllInstances.CancelRaiseObjectSvnCancelEventArgs">
            <summary>设置 SvnMultiCommandClient.raise_Cancel(Object sender, SvnCancelEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.AllInstances.CancelRemoveEventHandlerOfSvnCancelEventArgs">
            <summary>设置 SvnMultiCommandClient.remove_Cancel(EventHandler`1&lt;SvnCancelEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.AllInstances.Commit">
            <summary>设置 SvnMultiCommandClient.Commit() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.AllInstances.CommitSvnCommitResultOut">
            <summary>设置 SvnMultiCommandClient.Commit(SvnCommitResult&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.AllInstances.CommittedAddEventHandlerOfSvnCommittedEventArgs">
            <summary>设置 SvnMultiCommandClient.add_Committed(EventHandler`1&lt;SvnCommittedEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.AllInstances.CommittedRaiseObjectSvnCommittedEventArgs">
            <summary>设置 SvnMultiCommandClient.raise_Committed(Object sender, SvnCommittedEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.AllInstances.CommittedRemoveEventHandlerOfSvnCommittedEventArgs">
            <summary>设置 SvnMultiCommandClient.remove_Committed(EventHandler`1&lt;SvnCommittedEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.AllInstances.CommittingAddEventHandlerOfSvnCommittingEventArgs">
            <summary>设置 SvnMultiCommandClient.add_Committing(EventHandler`1&lt;SvnCommittingEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.AllInstances.CommittingRaiseObjectSvnCommittingEventArgs">
            <summary>设置 SvnMultiCommandClient.raise_Committing(Object sender, SvnCommittingEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.AllInstances.CommittingRemoveEventHandlerOfSvnCommittingEventArgs">
            <summary>设置 SvnMultiCommandClient.remove_Committing(EventHandler`1&lt;SvnCommittingEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.AllInstances.CopyStringInt64String">
            <summary>设置 SvnMultiCommandClient.Copy(String fromPath, Int64 fromRev, String toPath) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.AllInstances.CopyStringInt64StringSvnRepositoryCopyArgs">
            <summary>设置 SvnMultiCommandClient.Copy(String fromPath, Int64 fromRev, String toPath, SvnRepositoryCopyArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.AllInstances.CopyStringString">
            <summary>设置 SvnMultiCommandClient.Copy(String fromPath, String toPath) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.AllInstances.CopyStringStringSvnRepositoryCopyArgs">
            <summary>设置 SvnMultiCommandClient.Copy(String fromPath, String toPath, SvnRepositoryCopyArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.AllInstances.CreateDirectoryString">
            <summary>设置 SvnMultiCommandClient.CreateDirectory(String path) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.AllInstances.CreateDirectoryStringSvnRepositoryCreateDirectoryArgs">
            <summary>设置 SvnMultiCommandClient.CreateDirectory(String path, SvnRepositoryCreateDirectoryArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.AllInstances.CreateFileStringStream">
            <summary>设置 SvnMultiCommandClient.CreateFile(String path, Stream newData) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.AllInstances.CreateFileStringStreamSvnRepositoryCreateFileArgs">
            <summary>设置 SvnMultiCommandClient.CreateFile(String path, Stream newData, SvnRepositoryCreateFileArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.AllInstances.CurrentCommandArgsGet">
            <summary>设置 SvnMultiCommandClient.get_CurrentCommandArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.AllInstances.DeletePropertyStringString">
            <summary>设置 SvnMultiCommandClient.DeleteProperty(String path, String propertyName) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.AllInstances.DeletePropertyStringStringSvnRepositorySetPropertyArgs">
            <summary>设置 SvnMultiCommandClient.DeleteProperty(String path, String propertyName, SvnRepositorySetPropertyArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.AllInstances.DeleteString">
            <summary>设置 SvnMultiCommandClient.Delete(String path) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.AllInstances.DeleteStringSvnRepositoryDeleteArgs">
            <summary>设置 SvnMultiCommandClient.Delete(String path, SvnRepositoryDeleteArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.AllInstances.DisposeBoolean">
            <summary>设置 SvnMultiCommandClient.Dispose(Boolean ) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.AllInstances.GetNodeKindStringSvnNodeKindRef">
            <summary>设置 SvnMultiCommandClient.GetNodeKind(String path, SvnNodeKind&amp; kind) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.AllInstances.GetNodeKindStringSvnRepositoryGetNodeKindArgsSvnNodeKindRef">
            <summary>设置 SvnMultiCommandClient.GetNodeKind(String path, SvnRepositoryGetNodeKindArgs args, SvnNodeKind&amp; kind) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.AllInstances.HandleClientCancelSvnCancelEventArgs">
            <summary>设置 SvnMultiCommandClient.HandleClientCancel(SvnCancelEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.AllInstances.HandleClientCommittedSvnCommittedEventArgs">
            <summary>设置 SvnMultiCommandClient.HandleClientCommitted(SvnCommittedEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.AllInstances.HandleClientCommittingSvnCommittingEventArgs">
            <summary>设置 SvnMultiCommandClient.HandleClientCommitting(SvnCommittingEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.AllInstances.HandleClientErrorSvnErrorEventArgs">
            <summary>设置 SvnMultiCommandClient.HandleClientError(SvnErrorEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.AllInstances.HandleClientNotifySvnNotifyEventArgs">
            <summary>设置 SvnMultiCommandClient.HandleClientNotify(SvnNotifyEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.AllInstances.HandleClientProgressSvnProgressEventArgs">
            <summary>设置 SvnMultiCommandClient.HandleClientProgress(SvnProgressEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.AllInstances.HandleProcessingSvnProcessingEventArgs">
            <summary>设置 SvnMultiCommandClient.HandleProcessing(SvnProcessingEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.AllInstances.Initialize">
            <summary>设置 SvnMultiCommandClient.Initialize() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.AllInstances.MoveStringString">
            <summary>设置 SvnMultiCommandClient.Move(String fromPath, String toPath) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.AllInstances.MoveStringStringSvnRepositoryMoveArgs">
            <summary>设置 SvnMultiCommandClient.Move(String fromPath, String toPath, SvnRepositoryMoveArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.AllInstances.NotifyAddEventHandlerOfSvnNotifyEventArgs">
            <summary>设置 SvnMultiCommandClient.add_Notify(EventHandler`1&lt;SvnNotifyEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.AllInstances.NotifyRaiseObjectSvnNotifyEventArgs">
            <summary>设置 SvnMultiCommandClient.raise_Notify(Object sender, SvnNotifyEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.AllInstances.NotifyRemoveEventHandlerOfSvnNotifyEventArgs">
            <summary>设置 SvnMultiCommandClient.remove_Notify(EventHandler`1&lt;SvnNotifyEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.AllInstances.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnMultiCommandClient.OnCancel(SvnCancelEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.AllInstances.OnCommittedSvnCommittedEventArgs">
            <summary>设置 SvnMultiCommandClient.OnCommitted(SvnCommittedEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.AllInstances.OnCommittingSvnCommittingEventArgs">
            <summary>设置 SvnMultiCommandClient.OnCommitting(SvnCommittingEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.AllInstances.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnMultiCommandClient.OnNotify(SvnNotifyEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.AllInstances.OnProcessingSvnProcessingEventArgs">
            <summary>设置 SvnMultiCommandClient.OnProcessing(SvnProcessingEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.AllInstances.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnMultiCommandClient.OnProgress(SvnProgressEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.AllInstances.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnMultiCommandClient.OnSvnError(SvnErrorEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.AllInstances.OpenUri">
            <summary>设置 SvnMultiCommandClient.Open(Uri sessionUri) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.AllInstances.OpenUriSvnRepositoryOperationArgs">
            <summary>设置 SvnMultiCommandClient.Open(Uri sessionUri, SvnRepositoryOperationArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.AllInstances.ProcessingAddEventHandlerOfSvnProcessingEventArgs">
            <summary>设置 SvnMultiCommandClient.add_Processing(EventHandler`1&lt;SvnProcessingEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.AllInstances.ProcessingRaiseObjectSvnProcessingEventArgs">
            <summary>设置 SvnMultiCommandClient.raise_Processing(Object sender, SvnProcessingEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.AllInstances.ProcessingRemoveEventHandlerOfSvnProcessingEventArgs">
            <summary>设置 SvnMultiCommandClient.remove_Processing(EventHandler`1&lt;SvnProcessingEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.AllInstances.ProgressAddEventHandlerOfSvnProgressEventArgs">
            <summary>设置 SvnMultiCommandClient.add_Progress(EventHandler`1&lt;SvnProgressEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.AllInstances.ProgressRaiseObjectSvnProgressEventArgs">
            <summary>设置 SvnMultiCommandClient.raise_Progress(Object sender, SvnProgressEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.AllInstances.ProgressRemoveEventHandlerOfSvnProgressEventArgs">
            <summary>设置 SvnMultiCommandClient.remove_Progress(EventHandler`1&lt;SvnProgressEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.AllInstances.SetPropertyStringStringICollectionOfByte">
            <summary>设置 SvnMultiCommandClient.SetProperty(String path, String propertyName, ICollection`1&lt;Byte&gt; bytes) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.AllInstances.SetPropertyStringStringICollectionOfByteSvnRepositorySetPropertyArgs">
            <summary>设置 SvnMultiCommandClient.SetProperty(String path, String propertyName, ICollection`1&lt;Byte&gt; bytes, SvnRepositorySetPropertyArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.AllInstances.SetPropertyStringStringString">
            <summary>设置 SvnMultiCommandClient.SetProperty(String path, String propertyName, String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.AllInstances.SetPropertyStringStringStringSvnRepositorySetPropertyArgs">
            <summary>设置 SvnMultiCommandClient.SetProperty(String path, String propertyName, String value, SvnRepositorySetPropertyArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.AllInstances.SvnErrorAddEventHandlerOfSvnErrorEventArgs">
            <summary>设置 SvnMultiCommandClient.add_SvnError(EventHandler`1&lt;SvnErrorEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.AllInstances.SvnErrorRaiseObjectSvnErrorEventArgs">
            <summary>设置 SvnMultiCommandClient.raise_SvnError(Object sender, SvnErrorEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.AllInstances.SvnErrorRemoveEventHandlerOfSvnErrorEventArgs">
            <summary>设置 SvnMultiCommandClient.remove_SvnError(EventHandler`1&lt;SvnErrorEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.AllInstances.UpdateFileStringStream">
            <summary>设置 SvnMultiCommandClient.UpdateFile(String path, Stream newData) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.AllInstances.UpdateFileStringStreamSvnRepositoryUpdateFileArgs">
            <summary>设置 SvnMultiCommandClient.UpdateFile(String path, Stream newData, SvnRepositoryUpdateFileArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.AllInstances.ViaCommitSvnCommitResultOut">
            <summary>设置 SvnMultiCommandClient.ViaCommit(SvnCommitResult&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.AllInstances.ViaOpenUriSvnRepositoryOperationArgs">
            <summary>设置 SvnMultiCommandClient.ViaOpen(Uri sessionUri, SvnRepositoryOperationArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnMultiCommandClient.AllInstances._SvnMultiCommandClient">
            <summary>设置 SvnMultiCommandClient.~SvnMultiCommandClient() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnNodeException">
            <summary>SharpSvn.SvnNodeException 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnNodeException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnNodeException.#ctor(SharpSvn.SvnNodeException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnNodeException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnNodeException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnNodeException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnNodeException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnNodeException.Constructor">
            <summary>设置 SvnNodeException.SvnNodeException() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnNodeException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 SvnNodeException.SvnNodeException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnNodeException.ConstructorString">
            <summary>设置 SvnNodeException.SvnNodeException(String message) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnNodeException.ConstructorStringException">
            <summary>设置 SvnNodeException.SvnNodeException(String message, Exception inner) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnNodeException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnNotifyEventArgs">
            <summary>SharpSvn.SvnNotifyEventArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnNotifyEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnNotifyEventArgs.#ctor(SharpSvn.SvnNotifyEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnNotifyEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnNotifyEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnNotifyEventArgs.ActionGet">
            <summary>设置 SvnNotifyEventArgs.get_Action() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnNotifyEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnNotifyEventArgs.ChangeListNameGet">
            <summary>设置 SvnNotifyEventArgs.get_ChangeListName() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnNotifyEventArgs.CommandTypeGet">
            <summary>设置 SvnNotifyEventArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnNotifyEventArgs.ContentStateGet">
            <summary>设置 SvnNotifyEventArgs.get_ContentState() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnNotifyEventArgs.DetachBoolean">
            <summary>设置 SvnNotifyEventArgs.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnNotifyEventArgs.ErrorGet">
            <summary>设置 SvnNotifyEventArgs.get_Error() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnNotifyEventArgs.FullPathGet">
            <summary>设置 SvnNotifyEventArgs.get_FullPath() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnNotifyEventArgs.GetHashCode">
            <summary>设置 SvnNotifyEventArgs.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnNotifyEventArgs.LockGet">
            <summary>设置 SvnNotifyEventArgs.get_Lock() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnNotifyEventArgs.LockStateGet">
            <summary>设置 SvnNotifyEventArgs.get_LockState() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnNotifyEventArgs.MergeRangeGet">
            <summary>设置 SvnNotifyEventArgs.get_MergeRange() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnNotifyEventArgs.MimeTypeGet">
            <summary>设置 SvnNotifyEventArgs.get_MimeType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnNotifyEventArgs.MimeTypeIsBinaryGet">
            <summary>设置 SvnNotifyEventArgs.get_MimeTypeIsBinary() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnNotifyEventArgs.NodeKindGet">
            <summary>设置 SvnNotifyEventArgs.get_NodeKind() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnNotifyEventArgs.OldRevisionGet">
            <summary>设置 SvnNotifyEventArgs.get_OldRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnNotifyEventArgs.PathGet">
            <summary>设置 SvnNotifyEventArgs.get_Path() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnNotifyEventArgs.PathIsUriGet">
            <summary>设置 SvnNotifyEventArgs.get_PathIsUri() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnNotifyEventArgs.PropertyNameGet">
            <summary>设置 SvnNotifyEventArgs.get_PropertyName() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnNotifyEventArgs.PropertyStateGet">
            <summary>设置 SvnNotifyEventArgs.get_PropertyState() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnNotifyEventArgs.RevisionGet">
            <summary>设置 SvnNotifyEventArgs.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnNotifyEventArgs.RevisionPropertiesGet">
            <summary>设置 SvnNotifyEventArgs.get_RevisionProperties() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnNotifyEventArgs.UriGet">
            <summary>设置 SvnNotifyEventArgs.get_Uri() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnNotifyEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnNotifyEventArgs.AllInstances.ActionGet">
            <summary>设置 SvnNotifyEventArgs.get_Action() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnNotifyEventArgs.AllInstances.ChangeListNameGet">
            <summary>设置 SvnNotifyEventArgs.get_ChangeListName() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnNotifyEventArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnNotifyEventArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnNotifyEventArgs.AllInstances.ContentStateGet">
            <summary>设置 SvnNotifyEventArgs.get_ContentState() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnNotifyEventArgs.AllInstances.DetachBoolean">
            <summary>设置 SvnNotifyEventArgs.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnNotifyEventArgs.AllInstances.ErrorGet">
            <summary>设置 SvnNotifyEventArgs.get_Error() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnNotifyEventArgs.AllInstances.FullPathGet">
            <summary>设置 SvnNotifyEventArgs.get_FullPath() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnNotifyEventArgs.AllInstances.GetHashCode01">
            <summary>设置 SvnNotifyEventArgs.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnNotifyEventArgs.AllInstances.LockGet">
            <summary>设置 SvnNotifyEventArgs.get_Lock() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnNotifyEventArgs.AllInstances.LockStateGet">
            <summary>设置 SvnNotifyEventArgs.get_LockState() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnNotifyEventArgs.AllInstances.MergeRangeGet">
            <summary>设置 SvnNotifyEventArgs.get_MergeRange() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnNotifyEventArgs.AllInstances.MimeTypeGet">
            <summary>设置 SvnNotifyEventArgs.get_MimeType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnNotifyEventArgs.AllInstances.MimeTypeIsBinaryGet">
            <summary>设置 SvnNotifyEventArgs.get_MimeTypeIsBinary() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnNotifyEventArgs.AllInstances.NodeKindGet">
            <summary>设置 SvnNotifyEventArgs.get_NodeKind() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnNotifyEventArgs.AllInstances.OldRevisionGet">
            <summary>设置 SvnNotifyEventArgs.get_OldRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnNotifyEventArgs.AllInstances.PathGet">
            <summary>设置 SvnNotifyEventArgs.get_Path() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnNotifyEventArgs.AllInstances.PathIsUriGet">
            <summary>设置 SvnNotifyEventArgs.get_PathIsUri() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnNotifyEventArgs.AllInstances.PropertyNameGet">
            <summary>设置 SvnNotifyEventArgs.get_PropertyName() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnNotifyEventArgs.AllInstances.PropertyStateGet">
            <summary>设置 SvnNotifyEventArgs.get_PropertyState() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnNotifyEventArgs.AllInstances.RevisionGet">
            <summary>设置 SvnNotifyEventArgs.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnNotifyEventArgs.AllInstances.RevisionPropertiesGet">
            <summary>设置 SvnNotifyEventArgs.get_RevisionProperties() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnNotifyEventArgs.AllInstances.UriGet">
            <summary>设置 SvnNotifyEventArgs.get_Uri() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnObstructedUpdateException">
            <summary>SharpSvn.SvnObstructedUpdateException 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnObstructedUpdateException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnObstructedUpdateException.#ctor(SharpSvn.SvnObstructedUpdateException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnObstructedUpdateException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnObstructedUpdateException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnObstructedUpdateException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnObstructedUpdateException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnObstructedUpdateException.Constructor">
            <summary>设置 SvnObstructedUpdateException.SvnObstructedUpdateException() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnObstructedUpdateException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 SvnObstructedUpdateException.SvnObstructedUpdateException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnObstructedUpdateException.ConstructorString">
            <summary>设置 SvnObstructedUpdateException.SvnObstructedUpdateException(String message) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnObstructedUpdateException.ConstructorStringException">
            <summary>设置 SvnObstructedUpdateException.SvnObstructedUpdateException(String message, Exception inner) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnObstructedUpdateException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnOperationCanceledException">
            <summary>SharpSvn.SvnOperationCanceledException 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnOperationCanceledException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnOperationCanceledException.#ctor(SharpSvn.SvnOperationCanceledException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnOperationCanceledException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnOperationCanceledException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnOperationCanceledException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnOperationCanceledException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnOperationCanceledException.Constructor">
            <summary>设置 SvnOperationCanceledException.SvnOperationCanceledException() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnOperationCanceledException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 SvnOperationCanceledException.SvnOperationCanceledException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnOperationCanceledException.ConstructorString">
            <summary>设置 SvnOperationCanceledException.SvnOperationCanceledException(String message) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnOperationCanceledException.ConstructorStringException">
            <summary>设置 SvnOperationCanceledException.SvnOperationCanceledException(String message, Exception inner) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnOperationCanceledException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnOperationCompletedException">
            <summary>SharpSvn.SvnOperationCompletedException 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnOperationCompletedException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnOperationCompletedException.#ctor(SharpSvn.SvnOperationCompletedException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnOperationCompletedException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnOperationCompletedException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnOperationCompletedException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnOperationCompletedException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnOperationCompletedException.Constructor">
            <summary>设置 SvnOperationCompletedException.SvnOperationCompletedException() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnOperationCompletedException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 SvnOperationCompletedException.SvnOperationCompletedException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnOperationCompletedException.ConstructorString">
            <summary>设置 SvnOperationCompletedException.SvnOperationCompletedException(String message) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnOperationCompletedException.ConstructorStringException">
            <summary>设置 SvnOperationCompletedException.SvnOperationCompletedException(String message, Exception inner) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnOperationCompletedException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnPackRepositoryArgs">
            <summary>SharpSvn.SvnPackRepositoryArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnPackRepositoryArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnPackRepositoryArgs.#ctor(SharpSvn.SvnPackRepositoryArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnPackRepositoryArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnPackRepositoryArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPackRepositoryArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPackRepositoryArgs.CommandTypeGet">
            <summary>设置 SvnPackRepositoryArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPackRepositoryArgs.Constructor">
            <summary>设置 SvnPackRepositoryArgs.SvnPackRepositoryArgs() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnPackRepositoryArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPackRepositoryArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnPackRepositoryArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnPatchArgs">
            <summary>SharpSvn.SvnPatchArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnPatchArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnPatchArgs.#ctor(SharpSvn.SvnPatchArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnPatchArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnPatchArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPatchArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPatchArgs.CommandTypeGet">
            <summary>设置 SvnPatchArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPatchArgs.Constructor">
            <summary>设置 SvnPatchArgs.SvnPatchArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPatchArgs.DryRunGet">
            <summary>设置 SvnPatchArgs.get_DryRun() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPatchArgs.DryRunSetBoolean">
            <summary>设置 SvnPatchArgs.set_DryRun(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPatchArgs.FilterAddEventHandlerOfSvnPatchFilterEventArgs">
            <summary>设置 SvnPatchArgs.add_Filter(EventHandler`1&lt;SvnPatchFilterEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPatchArgs.FilterRaiseObjectSvnPatchFilterEventArgs">
            <summary>设置 SvnPatchArgs.raise_Filter(Object sender, SvnPatchFilterEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPatchArgs.FilterRemoveEventHandlerOfSvnPatchFilterEventArgs">
            <summary>设置 SvnPatchArgs.remove_Filter(EventHandler`1&lt;SvnPatchFilterEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPatchArgs.IgnoreWhitespaceGet">
            <summary>设置 SvnPatchArgs.get_IgnoreWhitespace() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPatchArgs.IgnoreWhitespaceSetBoolean">
            <summary>设置 SvnPatchArgs.set_IgnoreWhitespace(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPatchArgs.OnFilterSvnPatchFilterEventArgs">
            <summary>设置 SvnPatchArgs.OnFilter(SvnPatchFilterEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPatchArgs.ReverseGet">
            <summary>设置 SvnPatchArgs.get_Reverse() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPatchArgs.ReverseSetBoolean">
            <summary>设置 SvnPatchArgs.set_Reverse(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPatchArgs.StripCountGet">
            <summary>设置 SvnPatchArgs.get_StripCount() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPatchArgs.StripCountSetInt32">
            <summary>设置 SvnPatchArgs.set_StripCount(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnPatchArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPatchArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnPatchArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPatchArgs.AllInstances.DryRunGet">
            <summary>设置 SvnPatchArgs.get_DryRun() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPatchArgs.AllInstances.DryRunSetBoolean">
            <summary>设置 SvnPatchArgs.set_DryRun(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPatchArgs.AllInstances.FilterAddEventHandlerOfSvnPatchFilterEventArgs">
            <summary>设置 SvnPatchArgs.add_Filter(EventHandler`1&lt;SvnPatchFilterEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPatchArgs.AllInstances.FilterRaiseObjectSvnPatchFilterEventArgs">
            <summary>设置 SvnPatchArgs.raise_Filter(Object sender, SvnPatchFilterEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPatchArgs.AllInstances.FilterRemoveEventHandlerOfSvnPatchFilterEventArgs">
            <summary>设置 SvnPatchArgs.remove_Filter(EventHandler`1&lt;SvnPatchFilterEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPatchArgs.AllInstances.IgnoreWhitespaceGet">
            <summary>设置 SvnPatchArgs.get_IgnoreWhitespace() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPatchArgs.AllInstances.IgnoreWhitespaceSetBoolean">
            <summary>设置 SvnPatchArgs.set_IgnoreWhitespace(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPatchArgs.AllInstances.OnFilterSvnPatchFilterEventArgs">
            <summary>设置 SvnPatchArgs.OnFilter(SvnPatchFilterEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPatchArgs.AllInstances.ReverseGet">
            <summary>设置 SvnPatchArgs.get_Reverse() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPatchArgs.AllInstances.ReverseSetBoolean">
            <summary>设置 SvnPatchArgs.set_Reverse(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPatchArgs.AllInstances.StripCountGet">
            <summary>设置 SvnPatchArgs.get_StripCount() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPatchArgs.AllInstances.StripCountSetInt32">
            <summary>设置 SvnPatchArgs.set_StripCount(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnPatchFilterEventArgs">
            <summary>SharpSvn.SvnPatchFilterEventArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnPatchFilterEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnPatchFilterEventArgs.#ctor(SharpSvn.SvnPatchFilterEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnPatchFilterEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnPatchFilterEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPatchFilterEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPatchFilterEventArgs.CanonicalPathGet">
            <summary>设置 SvnPatchFilterEventArgs.get_CanonicalPath() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPatchFilterEventArgs.DetachBoolean">
            <summary>设置 SvnPatchFilterEventArgs.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPatchFilterEventArgs.FilteredGet">
            <summary>设置 SvnPatchFilterEventArgs.get_Filtered() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPatchFilterEventArgs.FilteredSetBoolean">
            <summary>设置 SvnPatchFilterEventArgs.set_Filtered(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPatchFilterEventArgs.PathGet">
            <summary>设置 SvnPatchFilterEventArgs.get_Path() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPatchFilterEventArgs.RejectPathGet">
            <summary>设置 SvnPatchFilterEventArgs.get_RejectPath() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPatchFilterEventArgs.ResultPathGet">
            <summary>设置 SvnPatchFilterEventArgs.get_ResultPath() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnPatchFilterEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPatchFilterEventArgs.AllInstances.CanonicalPathGet">
            <summary>设置 SvnPatchFilterEventArgs.get_CanonicalPath() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPatchFilterEventArgs.AllInstances.DetachBoolean">
            <summary>设置 SvnPatchFilterEventArgs.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPatchFilterEventArgs.AllInstances.FilteredGet">
            <summary>设置 SvnPatchFilterEventArgs.get_Filtered() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPatchFilterEventArgs.AllInstances.FilteredSetBoolean">
            <summary>设置 SvnPatchFilterEventArgs.set_Filtered(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPatchFilterEventArgs.AllInstances.PathGet">
            <summary>设置 SvnPatchFilterEventArgs.get_Path() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPatchFilterEventArgs.AllInstances.RejectPathGet">
            <summary>设置 SvnPatchFilterEventArgs.get_RejectPath() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPatchFilterEventArgs.AllInstances.ResultPathGet">
            <summary>设置 SvnPatchFilterEventArgs.get_ResultPath() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnPathTarget">
            <summary>SharpSvn.SvnPathTarget 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnPathTarget.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnPathTarget.#ctor(SharpSvn.SvnPathTarget)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnPathTarget.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnPathTarget.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnPathTarget.Bind(System.IEquatable{SharpSvn.SvnTarget})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPathTarget.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPathTarget.ConstructorString">
            <summary>设置 SvnPathTarget.SvnPathTarget(String path) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPathTarget.ConstructorStringDateTime">
            <summary>设置 SvnPathTarget.SvnPathTarget(String path, DateTime date) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPathTarget.ConstructorStringInt64">
            <summary>设置 SvnPathTarget.SvnPathTarget(String path, Int64 revision) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPathTarget.ConstructorStringSvnRevision">
            <summary>设置 SvnPathTarget.SvnPathTarget(String path, SvnRevision revision) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPathTarget.ConstructorStringSvnRevisionType">
            <summary>设置 SvnPathTarget.SvnPathTarget(String path, SvnRevisionType type) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPathTarget.FileNameGet">
            <summary>设置 SvnPathTarget.get_FileName() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPathTarget.FromStringString">
            <summary>设置 SvnPathTarget.FromString(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPathTarget.FromStringStringBoolean">
            <summary>设置 SvnPathTarget.FromString(String value, Boolean allowOperationalRevision) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPathTarget.FullPathGet">
            <summary>设置 SvnPathTarget.get_FullPath() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPathTarget.GetFullTargetString">
            <summary>设置 SvnPathTarget.GetFullTarget(String path) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPathTarget.GetSvnRevisionSvnRevisionSvnRevision">
            <summary>设置 SvnPathTarget.GetSvnRevision(SvnRevision fileNoneValue, SvnRevision uriNoneValue) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPathTarget.GetTargetPathString">
            <summary>设置 SvnPathTarget.GetTargetPath(String path) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPathTarget.ImplicitOpStringSvnPathTarget">
            <summary>设置 SvnPathTarget.op_Implicit(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPathTarget.MapIEnumerableOfString">
            <summary>设置 SvnPathTarget.Map(IEnumerable`1&lt;String&gt; paths) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPathTarget.TargetNameGet">
            <summary>设置 SvnPathTarget.get_TargetName() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPathTarget.TargetPathGet">
            <summary>设置 SvnPathTarget.get_TargetPath() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPathTarget.TryParseStringBooleanSvnPathTargetOut">
            <summary>设置 SvnPathTarget.TryParse(String targetName, Boolean allowOperationalRevisions, SvnPathTarget&amp; target) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPathTarget.TryParseStringSvnPathTargetOut">
            <summary>设置 SvnPathTarget.TryParse(String targetName, SvnPathTarget&amp; target) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnPathTarget.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPathTarget.AllInstances.FileNameGet">
            <summary>设置 SvnPathTarget.get_FileName() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPathTarget.AllInstances.FullPathGet">
            <summary>设置 SvnPathTarget.get_FullPath() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPathTarget.AllInstances.GetSvnRevisionSvnRevisionSvnRevision">
            <summary>设置 SvnPathTarget.GetSvnRevision(SvnRevision fileNoneValue, SvnRevision uriNoneValue) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPathTarget.AllInstances.TargetNameGet">
            <summary>设置 SvnPathTarget.get_TargetName() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPathTarget.AllInstances.TargetPathGet">
            <summary>设置 SvnPathTarget.get_TargetPath() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnProcessingEventArgs">
            <summary>SharpSvn.SvnProcessingEventArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnProcessingEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnProcessingEventArgs.#ctor(SharpSvn.SvnProcessingEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnProcessingEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnProcessingEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnProcessingEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnProcessingEventArgs.CommandTypeGet">
            <summary>设置 SvnProcessingEventArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnProcessingEventArgs.ConstructorSvnCommandType">
            <summary>设置 SvnProcessingEventArgs.SvnProcessingEventArgs(SvnCommandType commandType) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnProcessingEventArgs.GetHashCode">
            <summary>设置 SvnProcessingEventArgs.GetHashCode() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnProcessingEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnProcessingEventArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnProcessingEventArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnProcessingEventArgs.AllInstances.GetHashCode01">
            <summary>设置 SvnProcessingEventArgs.GetHashCode() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnProgressEventArgs">
            <summary>SharpSvn.SvnProgressEventArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnProgressEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnProgressEventArgs.#ctor(SharpSvn.SvnProgressEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnProgressEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnProgressEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnProgressEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnProgressEventArgs.ConstructorInt64Int64">
            <summary>设置 SvnProgressEventArgs.SvnProgressEventArgs(Int64 progress, Int64 totalProgress) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnProgressEventArgs.GetHashCode">
            <summary>设置 SvnProgressEventArgs.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnProgressEventArgs.ProgressGet">
            <summary>设置 SvnProgressEventArgs.get_Progress() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnProgressEventArgs.TotalProgressGet">
            <summary>设置 SvnProgressEventArgs.get_TotalProgress() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnProgressEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnProgressEventArgs.AllInstances.GetHashCode01">
            <summary>设置 SvnProgressEventArgs.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnProgressEventArgs.AllInstances.ProgressGet">
            <summary>设置 SvnProgressEventArgs.get_Progress() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnProgressEventArgs.AllInstances.TotalProgressGet">
            <summary>设置 SvnProgressEventArgs.get_TotalProgress() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnPropertyCollection">
            <summary>SharpSvn.SvnPropertyCollection 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnPropertyCollection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnPropertyCollection.#ctor(SharpSvn.SvnPropertyCollection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnPropertyCollection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnPropertyCollection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnPropertyCollection.Bind(System.Collections.ICollection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnPropertyCollection.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnPropertyCollection.Bind(System.Collections.IList)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnPropertyCollection.Bind(System.Collections.Generic.ICollection{SharpSvn.SvnPropertyValue})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnPropertyCollection.Bind(System.Collections.Generic.IEnumerable{SharpSvn.SvnPropertyValue})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnPropertyCollection.Bind(System.Collections.Generic.IList{SharpSvn.SvnPropertyValue})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnPropertyCollection.Bind(System.Collections.Generic.IReadOnlyCollection{SharpSvn.SvnPropertyValue})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnPropertyCollection.Bind(System.Collections.Generic.IReadOnlyList{SharpSvn.SvnPropertyValue})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPropertyCollection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPropertyCollection.Constructor">
            <summary>设置 SvnPropertyCollection.SvnPropertyCollection() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPropertyCollection.GetKeyForItemSvnPropertyValue">
            <summary>设置 SvnPropertyCollection.GetKeyForItem(SvnPropertyValue item) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnPropertyCollection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPropertyCollection.AllInstances.GetKeyForItemSvnPropertyValue">
            <summary>设置 SvnPropertyCollection.GetKeyForItem(SvnPropertyValue item) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnPropertyListArgs">
            <summary>SharpSvn.SvnPropertyListArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnPropertyListArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnPropertyListArgs.#ctor(SharpSvn.SvnPropertyListArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnPropertyListArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnPropertyListArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPropertyListArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPropertyListArgs.ChangeListsGet">
            <summary>设置 SvnPropertyListArgs.get_ChangeLists() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPropertyListArgs.CommandTypeGet">
            <summary>设置 SvnPropertyListArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPropertyListArgs.Constructor">
            <summary>设置 SvnPropertyListArgs.SvnPropertyListArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPropertyListArgs.DepthGet">
            <summary>设置 SvnPropertyListArgs.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPropertyListArgs.DepthSetSvnDepth">
            <summary>设置 SvnPropertyListArgs.set_Depth(SvnDepth value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPropertyListArgs.OnPropertyListSvnPropertyListEventArgs">
            <summary>设置 SvnPropertyListArgs.OnPropertyList(SvnPropertyListEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPropertyListArgs.PropertyListAddEventHandlerOfSvnPropertyListEventArgs">
            <summary>设置 SvnPropertyListArgs.add_PropertyList(EventHandler`1&lt;SvnPropertyListEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPropertyListArgs.PropertyListRaiseObjectSvnPropertyListEventArgs">
            <summary>设置 SvnPropertyListArgs.raise_PropertyList(Object sender, SvnPropertyListEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPropertyListArgs.PropertyListRemoveEventHandlerOfSvnPropertyListEventArgs">
            <summary>设置 SvnPropertyListArgs.remove_PropertyList(EventHandler`1&lt;SvnPropertyListEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPropertyListArgs.RevisionGet">
            <summary>设置 SvnPropertyListArgs.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPropertyListArgs.RevisionSetSvnRevision">
            <summary>设置 SvnPropertyListArgs.set_Revision(SvnRevision value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnPropertyListArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPropertyListArgs.AllInstances.ChangeListsGet">
            <summary>设置 SvnPropertyListArgs.get_ChangeLists() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPropertyListArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnPropertyListArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPropertyListArgs.AllInstances.DepthGet">
            <summary>设置 SvnPropertyListArgs.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPropertyListArgs.AllInstances.DepthSetSvnDepth">
            <summary>设置 SvnPropertyListArgs.set_Depth(SvnDepth value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPropertyListArgs.AllInstances.OnPropertyListSvnPropertyListEventArgs">
            <summary>设置 SvnPropertyListArgs.OnPropertyList(SvnPropertyListEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPropertyListArgs.AllInstances.PropertyListAddEventHandlerOfSvnPropertyListEventArgs">
            <summary>设置 SvnPropertyListArgs.add_PropertyList(EventHandler`1&lt;SvnPropertyListEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPropertyListArgs.AllInstances.PropertyListRaiseObjectSvnPropertyListEventArgs">
            <summary>设置 SvnPropertyListArgs.raise_PropertyList(Object sender, SvnPropertyListEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPropertyListArgs.AllInstances.PropertyListRemoveEventHandlerOfSvnPropertyListEventArgs">
            <summary>设置 SvnPropertyListArgs.remove_PropertyList(EventHandler`1&lt;SvnPropertyListEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPropertyListArgs.AllInstances.RevisionGet">
            <summary>设置 SvnPropertyListArgs.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPropertyListArgs.AllInstances.RevisionSetSvnRevision">
            <summary>设置 SvnPropertyListArgs.set_Revision(SvnRevision value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnPropertyListEventArgs">
            <summary>SharpSvn.SvnPropertyListEventArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnPropertyListEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnPropertyListEventArgs.#ctor(SharpSvn.SvnPropertyListEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnPropertyListEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnPropertyListEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPropertyListEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPropertyListEventArgs.DetachBoolean">
            <summary>设置 SvnPropertyListEventArgs.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPropertyListEventArgs.GetHashCode">
            <summary>设置 SvnPropertyListEventArgs.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPropertyListEventArgs.PathGet">
            <summary>设置 SvnPropertyListEventArgs.get_Path() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPropertyListEventArgs.PropertiesGet">
            <summary>设置 SvnPropertyListEventArgs.get_Properties() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnPropertyListEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPropertyListEventArgs.AllInstances.DetachBoolean">
            <summary>设置 SvnPropertyListEventArgs.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPropertyListEventArgs.AllInstances.GetHashCode01">
            <summary>设置 SvnPropertyListEventArgs.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPropertyListEventArgs.AllInstances.PathGet">
            <summary>设置 SvnPropertyListEventArgs.get_Path() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPropertyListEventArgs.AllInstances.PropertiesGet">
            <summary>设置 SvnPropertyListEventArgs.get_Properties() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnPropertyNames">
            <summary>SharpSvn.SvnPropertyNames 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnPropertyNames.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnPropertyNames.#ctor(SharpSvn.SvnPropertyNames)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnPropertyNames.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnPropertyNames.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPropertyNames.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPropertyNames.Constructor">
            <summary>设置 SvnPropertyNames.SvnPropertyNames() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPropertyNames.FormatDateDateTime">
            <summary>设置 SvnPropertyNames.FormatDate(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPropertyNames.StaticConstructor">
            <summary>设置 SvnPropertyNames.SvnPropertyNames() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPropertyNames.TryParseDateStringDateTimeOut">
            <summary>设置 SvnPropertyNames.TryParseDate(String date, DateTime&amp; value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnPropertyNames.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnPropertyValue">
            <summary>SharpSvn.SvnPropertyValue 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnPropertyValue.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnPropertyValue.#ctor(SharpSvn.SvnPropertyValue)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnPropertyValue.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnPropertyValue.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnPropertyValue.Bind(System.IEquatable{SharpSvn.SvnPropertyValue})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPropertyValue.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPropertyValue.ConstructorStringByteArray">
            <summary>设置 SvnPropertyValue.SvnPropertyValue(String key, Byte[] value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPropertyValue.ConstructorStringByteArrayStringSvnTarget">
            <summary>设置 SvnPropertyValue.SvnPropertyValue(String key, Byte[] value, String strValue, SvnTarget target) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPropertyValue.ConstructorStringByteArraySvnTarget">
            <summary>设置 SvnPropertyValue.SvnPropertyValue(String key, Byte[] value, SvnTarget target) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPropertyValue.ConstructorStringString">
            <summary>设置 SvnPropertyValue.SvnPropertyValue(String key, String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPropertyValue.ConstructorStringSvnPropertyValue">
            <summary>设置 SvnPropertyValue.SvnPropertyValue(String key, SvnPropertyValue value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPropertyValue.EqualsObject">
            <summary>设置 SvnPropertyValue.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPropertyValue.EqualsSvnPropertyValue">
            <summary>设置 SvnPropertyValue.Equals(SvnPropertyValue other) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPropertyValue.GetHashCode">
            <summary>设置 SvnPropertyValue.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPropertyValue.KeyGet">
            <summary>设置 SvnPropertyValue.get_Key() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPropertyValue.RawValueGet">
            <summary>设置 SvnPropertyValue.get_RawValue() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPropertyValue.StringValueGet">
            <summary>设置 SvnPropertyValue.get_StringValue() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPropertyValue.TargetGet">
            <summary>设置 SvnPropertyValue.get_Target() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPropertyValue.ToByteArray">
            <summary>设置 SvnPropertyValue.ToByteArray() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPropertyValue.ToString">
            <summary>设置 SvnPropertyValue.ToString() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPropertyValue.ValueEqualsSvnPropertyValue">
            <summary>设置 SvnPropertyValue.ValueEquals(SvnPropertyValue other) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnPropertyValue.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPropertyValue.AllInstances.EqualsObject">
            <summary>设置 SvnPropertyValue.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPropertyValue.AllInstances.EqualsSvnPropertyValue">
            <summary>设置 SvnPropertyValue.Equals(SvnPropertyValue other) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPropertyValue.AllInstances.GetHashCode01">
            <summary>设置 SvnPropertyValue.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPropertyValue.AllInstances.KeyGet">
            <summary>设置 SvnPropertyValue.get_Key() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPropertyValue.AllInstances.RawValueGet">
            <summary>设置 SvnPropertyValue.get_RawValue() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPropertyValue.AllInstances.StringValueGet">
            <summary>设置 SvnPropertyValue.get_StringValue() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPropertyValue.AllInstances.TargetGet">
            <summary>设置 SvnPropertyValue.get_Target() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPropertyValue.AllInstances.ToByteArray">
            <summary>设置 SvnPropertyValue.ToByteArray() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPropertyValue.AllInstances.ToString01">
            <summary>设置 SvnPropertyValue.ToString() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnPropertyValue.AllInstances.ValueEqualsSvnPropertyValue">
            <summary>设置 SvnPropertyValue.ValueEquals(SvnPropertyValue other) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnRecoverRepositoryArgs">
            <summary>SharpSvn.SvnRecoverRepositoryArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRecoverRepositoryArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRecoverRepositoryArgs.#ctor(SharpSvn.SvnRecoverRepositoryArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRecoverRepositoryArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRecoverRepositoryArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRecoverRepositoryArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRecoverRepositoryArgs.CommandTypeGet">
            <summary>设置 SvnRecoverRepositoryArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRecoverRepositoryArgs.Constructor">
            <summary>设置 SvnRecoverRepositoryArgs.SvnRecoverRepositoryArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRecoverRepositoryArgs.NonBlockingGet">
            <summary>设置 SvnRecoverRepositoryArgs.get_NonBlocking() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRecoverRepositoryArgs.NonBlockingSetBoolean">
            <summary>设置 SvnRecoverRepositoryArgs.set_NonBlocking(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnRecoverRepositoryArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRecoverRepositoryArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnRecoverRepositoryArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRecoverRepositoryArgs.AllInstances.NonBlockingGet">
            <summary>设置 SvnRecoverRepositoryArgs.get_NonBlocking() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRecoverRepositoryArgs.AllInstances.NonBlockingSetBoolean">
            <summary>设置 SvnRecoverRepositoryArgs.set_NonBlocking(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnReintegrationMergeArgs">
            <summary>SharpSvn.SvnReintegrationMergeArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnReintegrationMergeArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnReintegrationMergeArgs.#ctor(SharpSvn.SvnReintegrationMergeArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnReintegrationMergeArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnReintegrationMergeArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnReintegrationMergeArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnReintegrationMergeArgs.CommandTypeGet">
            <summary>设置 SvnReintegrationMergeArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnReintegrationMergeArgs.Constructor">
            <summary>设置 SvnReintegrationMergeArgs.SvnReintegrationMergeArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnReintegrationMergeArgs.DryRunGet">
            <summary>设置 SvnReintegrationMergeArgs.get_DryRun() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnReintegrationMergeArgs.DryRunSetBoolean">
            <summary>设置 SvnReintegrationMergeArgs.set_DryRun(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnReintegrationMergeArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnReintegrationMergeArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnReintegrationMergeArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnReintegrationMergeArgs.AllInstances.DryRunGet">
            <summary>设置 SvnReintegrationMergeArgs.get_DryRun() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnReintegrationMergeArgs.AllInstances.DryRunSetBoolean">
            <summary>设置 SvnReintegrationMergeArgs.set_DryRun(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnRelocateArgs">
            <summary>SharpSvn.SvnRelocateArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRelocateArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRelocateArgs.#ctor(SharpSvn.SvnRelocateArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRelocateArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRelocateArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRelocateArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRelocateArgs.CommandTypeGet">
            <summary>设置 SvnRelocateArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRelocateArgs.Constructor">
            <summary>设置 SvnRelocateArgs.SvnRelocateArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRelocateArgs.IgnoreExternalsGet">
            <summary>设置 SvnRelocateArgs.get_IgnoreExternals() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRelocateArgs.IgnoreExternalsSetBoolean">
            <summary>设置 SvnRelocateArgs.set_IgnoreExternals(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRelocateArgs.NonRecursiveGet">
            <summary>设置 SvnRelocateArgs.get_NonRecursive() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRelocateArgs.NonRecursiveSetBoolean">
            <summary>设置 SvnRelocateArgs.set_NonRecursive(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnRelocateArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRelocateArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnRelocateArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRelocateArgs.AllInstances.IgnoreExternalsGet">
            <summary>设置 SvnRelocateArgs.get_IgnoreExternals() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRelocateArgs.AllInstances.IgnoreExternalsSetBoolean">
            <summary>设置 SvnRelocateArgs.set_IgnoreExternals(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRelocateArgs.AllInstances.NonRecursiveGet">
            <summary>设置 SvnRelocateArgs.get_NonRecursive() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRelocateArgs.AllInstances.NonRecursiveSetBoolean">
            <summary>设置 SvnRelocateArgs.set_NonRecursive(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnRemoveFromChangeListArgs">
            <summary>SharpSvn.SvnRemoveFromChangeListArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRemoveFromChangeListArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRemoveFromChangeListArgs.#ctor(SharpSvn.SvnRemoveFromChangeListArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRemoveFromChangeListArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRemoveFromChangeListArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRemoveFromChangeListArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRemoveFromChangeListArgs.ChangeListsGet">
            <summary>设置 SvnRemoveFromChangeListArgs.get_ChangeLists() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRemoveFromChangeListArgs.CommandTypeGet">
            <summary>设置 SvnRemoveFromChangeListArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRemoveFromChangeListArgs.Constructor">
            <summary>设置 SvnRemoveFromChangeListArgs.SvnRemoveFromChangeListArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRemoveFromChangeListArgs.DepthGet">
            <summary>设置 SvnRemoveFromChangeListArgs.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRemoveFromChangeListArgs.DepthSetSvnDepth">
            <summary>设置 SvnRemoveFromChangeListArgs.set_Depth(SvnDepth value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnRemoveFromChangeListArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRemoveFromChangeListArgs.AllInstances.ChangeListsGet">
            <summary>设置 SvnRemoveFromChangeListArgs.get_ChangeLists() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRemoveFromChangeListArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnRemoveFromChangeListArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRemoveFromChangeListArgs.AllInstances.DepthGet">
            <summary>设置 SvnRemoveFromChangeListArgs.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRemoveFromChangeListArgs.AllInstances.DepthSetSvnDepth">
            <summary>设置 SvnRemoveFromChangeListArgs.set_Depth(SvnDepth value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnReplayRevisionArgs">
            <summary>SharpSvn.SvnReplayRevisionArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnReplayRevisionArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnReplayRevisionArgs.#ctor(SharpSvn.SvnReplayRevisionArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnReplayRevisionArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnReplayRevisionArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnReplayRevisionArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnReplayRevisionArgs.CommandTypeGet">
            <summary>设置 SvnReplayRevisionArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnReplayRevisionArgs.Constructor">
            <summary>设置 SvnReplayRevisionArgs.SvnReplayRevisionArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnReplayRevisionArgs.InvokeRevisionEndSvnReplayRevisionEndEventArgs">
            <summary>设置 SvnReplayRevisionArgs.InvokeRevisionEnd(SvnReplayRevisionEndEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnReplayRevisionArgs.InvokeRevisionStartSvnReplayRevisionStartEventArgs">
            <summary>设置 SvnReplayRevisionArgs.InvokeRevisionStart(SvnReplayRevisionStartEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnReplayRevisionArgs.LowWatermarkRevisionGet">
            <summary>设置 SvnReplayRevisionArgs.get_LowWatermarkRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnReplayRevisionArgs.LowWatermarkRevisionSetSvnRevision">
            <summary>设置 SvnReplayRevisionArgs.set_LowWatermarkRevision(SvnRevision value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnReplayRevisionArgs.OnRevisionEndSvnReplayRevisionEndEventArgs">
            <summary>设置 SvnReplayRevisionArgs.OnRevisionEnd(SvnReplayRevisionEndEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnReplayRevisionArgs.OnRevisionStartSvnReplayRevisionStartEventArgs">
            <summary>设置 SvnReplayRevisionArgs.OnRevisionStart(SvnReplayRevisionStartEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnReplayRevisionArgs.RetrieveContentGet">
            <summary>设置 SvnReplayRevisionArgs.get_RetrieveContent() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnReplayRevisionArgs.RetrieveContentSetBoolean">
            <summary>设置 SvnReplayRevisionArgs.set_RetrieveContent(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnReplayRevisionArgs.RevisionEndAddEventHandlerOfSvnReplayRevisionEndEventArgs">
            <summary>设置 SvnReplayRevisionArgs.add_RevisionEnd(EventHandler`1&lt;SvnReplayRevisionEndEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnReplayRevisionArgs.RevisionEndRaiseObjectSvnReplayRevisionEndEventArgs">
            <summary>设置 SvnReplayRevisionArgs.raise_RevisionEnd(Object sender, SvnReplayRevisionEndEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnReplayRevisionArgs.RevisionEndRemoveEventHandlerOfSvnReplayRevisionEndEventArgs">
            <summary>设置 SvnReplayRevisionArgs.remove_RevisionEnd(EventHandler`1&lt;SvnReplayRevisionEndEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnReplayRevisionArgs.RevisionStartAddEventHandlerOfSvnReplayRevisionStartEventArgs">
            <summary>设置 SvnReplayRevisionArgs.add_RevisionStart(EventHandler`1&lt;SvnReplayRevisionStartEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnReplayRevisionArgs.RevisionStartRaiseObjectSvnReplayRevisionStartEventArgs">
            <summary>设置 SvnReplayRevisionArgs.raise_RevisionStart(Object sender, SvnReplayRevisionStartEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnReplayRevisionArgs.RevisionStartRemoveEventHandlerOfSvnReplayRevisionStartEventArgs">
            <summary>设置 SvnReplayRevisionArgs.remove_RevisionStart(EventHandler`1&lt;SvnReplayRevisionStartEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnReplayRevisionArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnReplayRevisionArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnReplayRevisionArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnReplayRevisionArgs.AllInstances.InvokeRevisionEndSvnReplayRevisionEndEventArgs">
            <summary>设置 SvnReplayRevisionArgs.InvokeRevisionEnd(SvnReplayRevisionEndEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnReplayRevisionArgs.AllInstances.InvokeRevisionStartSvnReplayRevisionStartEventArgs">
            <summary>设置 SvnReplayRevisionArgs.InvokeRevisionStart(SvnReplayRevisionStartEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnReplayRevisionArgs.AllInstances.LowWatermarkRevisionGet">
            <summary>设置 SvnReplayRevisionArgs.get_LowWatermarkRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnReplayRevisionArgs.AllInstances.LowWatermarkRevisionSetSvnRevision">
            <summary>设置 SvnReplayRevisionArgs.set_LowWatermarkRevision(SvnRevision value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnReplayRevisionArgs.AllInstances.OnRevisionEndSvnReplayRevisionEndEventArgs">
            <summary>设置 SvnReplayRevisionArgs.OnRevisionEnd(SvnReplayRevisionEndEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnReplayRevisionArgs.AllInstances.OnRevisionStartSvnReplayRevisionStartEventArgs">
            <summary>设置 SvnReplayRevisionArgs.OnRevisionStart(SvnReplayRevisionStartEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnReplayRevisionArgs.AllInstances.RetrieveContentGet">
            <summary>设置 SvnReplayRevisionArgs.get_RetrieveContent() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnReplayRevisionArgs.AllInstances.RetrieveContentSetBoolean">
            <summary>设置 SvnReplayRevisionArgs.set_RetrieveContent(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnReplayRevisionArgs.AllInstances.RevisionEndAddEventHandlerOfSvnReplayRevisionEndEventArgs">
            <summary>设置 SvnReplayRevisionArgs.add_RevisionEnd(EventHandler`1&lt;SvnReplayRevisionEndEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnReplayRevisionArgs.AllInstances.RevisionEndRaiseObjectSvnReplayRevisionEndEventArgs">
            <summary>设置 SvnReplayRevisionArgs.raise_RevisionEnd(Object sender, SvnReplayRevisionEndEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnReplayRevisionArgs.AllInstances.RevisionEndRemoveEventHandlerOfSvnReplayRevisionEndEventArgs">
            <summary>设置 SvnReplayRevisionArgs.remove_RevisionEnd(EventHandler`1&lt;SvnReplayRevisionEndEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnReplayRevisionArgs.AllInstances.RevisionStartAddEventHandlerOfSvnReplayRevisionStartEventArgs">
            <summary>设置 SvnReplayRevisionArgs.add_RevisionStart(EventHandler`1&lt;SvnReplayRevisionStartEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnReplayRevisionArgs.AllInstances.RevisionStartRaiseObjectSvnReplayRevisionStartEventArgs">
            <summary>设置 SvnReplayRevisionArgs.raise_RevisionStart(Object sender, SvnReplayRevisionStartEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnReplayRevisionArgs.AllInstances.RevisionStartRemoveEventHandlerOfSvnReplayRevisionStartEventArgs">
            <summary>设置 SvnReplayRevisionArgs.remove_RevisionStart(EventHandler`1&lt;SvnReplayRevisionStartEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnReplayRevisionEndEventArgs">
            <summary>SharpSvn.SvnReplayRevisionEndEventArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnReplayRevisionEndEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnReplayRevisionEndEventArgs.#ctor(SharpSvn.SvnReplayRevisionEndEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnReplayRevisionEndEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnReplayRevisionEndEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnReplayRevisionEndEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnReplayRevisionEndEventArgs.DetachBoolean">
            <summary>设置 SvnReplayRevisionEndEventArgs.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnReplayRevisionEndEventArgs.RevisionGet">
            <summary>设置 SvnReplayRevisionEndEventArgs.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnReplayRevisionEndEventArgs.RevisionPropertiesGet">
            <summary>设置 SvnReplayRevisionEndEventArgs.get_RevisionProperties() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnReplayRevisionEndEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnReplayRevisionEndEventArgs.AllInstances.DetachBoolean">
            <summary>设置 SvnReplayRevisionEndEventArgs.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnReplayRevisionEndEventArgs.AllInstances.RevisionGet">
            <summary>设置 SvnReplayRevisionEndEventArgs.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnReplayRevisionEndEventArgs.AllInstances.RevisionPropertiesGet">
            <summary>设置 SvnReplayRevisionEndEventArgs.get_RevisionProperties() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnReplayRevisionStartEventArgs">
            <summary>SharpSvn.SvnReplayRevisionStartEventArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnReplayRevisionStartEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnReplayRevisionStartEventArgs.#ctor(SharpSvn.SvnReplayRevisionStartEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnReplayRevisionStartEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnReplayRevisionStartEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnReplayRevisionStartEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnReplayRevisionStartEventArgs.DetachBoolean">
            <summary>设置 SvnReplayRevisionStartEventArgs.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnReplayRevisionStartEventArgs.EditorGet">
            <summary>设置 SvnReplayRevisionStartEventArgs.get_Editor() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnReplayRevisionStartEventArgs.EditorSetSvnDeltaEditor">
            <summary>设置 SvnReplayRevisionStartEventArgs.set_Editor(SvnDeltaEditor value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnReplayRevisionStartEventArgs.RevisionGet">
            <summary>设置 SvnReplayRevisionStartEventArgs.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnReplayRevisionStartEventArgs.RevisionPropertiesGet">
            <summary>设置 SvnReplayRevisionStartEventArgs.get_RevisionProperties() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnReplayRevisionStartEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnReplayRevisionStartEventArgs.AllInstances.DetachBoolean">
            <summary>设置 SvnReplayRevisionStartEventArgs.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnReplayRevisionStartEventArgs.AllInstances.EditorGet">
            <summary>设置 SvnReplayRevisionStartEventArgs.get_Editor() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnReplayRevisionStartEventArgs.AllInstances.EditorSetSvnDeltaEditor">
            <summary>设置 SvnReplayRevisionStartEventArgs.set_Editor(SvnDeltaEditor value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnReplayRevisionStartEventArgs.AllInstances.RevisionGet">
            <summary>设置 SvnReplayRevisionStartEventArgs.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnReplayRevisionStartEventArgs.AllInstances.RevisionPropertiesGet">
            <summary>设置 SvnReplayRevisionStartEventArgs.get_RevisionProperties() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnRepositoryClient">
            <summary>SharpSvn.SvnRepositoryClient 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRepositoryClient.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRepositoryClient.#ctor(SharpSvn.SvnRepositoryClient)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRepositoryClient.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRepositoryClient.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRepositoryClient.Bind(System.ComponentModel.IComponent)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRepositoryClient.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.CancelAddEventHandlerOfSvnCancelEventArgs">
            <summary>设置 SvnRepositoryClient.add_Cancel(EventHandler`1&lt;SvnCancelEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.CancelRaiseObjectSvnCancelEventArgs">
            <summary>设置 SvnRepositoryClient.raise_Cancel(Object sender, SvnCancelEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.CancelRemoveEventHandlerOfSvnCancelEventArgs">
            <summary>设置 SvnRepositoryClient.remove_Cancel(EventHandler`1&lt;SvnCancelEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.Constructor">
            <summary>设置 SvnRepositoryClient.SvnRepositoryClient() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.CreateRepositoryString">
            <summary>设置 SvnRepositoryClient.CreateRepository(String repositoryPath) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.CreateRepositoryStringSvnCreateRepositoryArgs">
            <summary>设置 SvnRepositoryClient.CreateRepository(String repositoryPath, SvnCreateRepositoryArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.CurrentCommandArgsGet">
            <summary>设置 SvnRepositoryClient.get_CurrentCommandArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.DeleteRepositoryString">
            <summary>设置 SvnRepositoryClient.DeleteRepository(String repositoryPath) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.DeleteRepositoryStringSvnDeleteRepositoryArgs">
            <summary>设置 SvnRepositoryClient.DeleteRepository(String repositoryPath, SvnDeleteRepositoryArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.DeleteRevisionPropertyStringSvnRevisionString">
            <summary>设置 SvnRepositoryClient.DeleteRevisionProperty(String repositoryPath, SvnRevision revision, String propertyName) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.DeleteRevisionPropertyStringSvnRevisionStringSvnSetRevisionPropertyRepositoryArgs">
            <summary>设置 SvnRepositoryClient.DeleteRevisionProperty(String repositoryPath, SvnRevision revision, String propertyName, SvnSetRevisionPropertyRepositoryArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.DisposeBoolean">
            <summary>设置 SvnRepositoryClient.Dispose(Boolean ) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.DumpRepositoryStringStream">
            <summary>设置 SvnRepositoryClient.DumpRepository(String repositoryPath, Stream to) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.DumpRepositoryStringStreamSvnDumpRepositoryArgs">
            <summary>设置 SvnRepositoryClient.DumpRepository(String repositoryPath, Stream to, SvnDumpRepositoryArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.FindRepositoryRootUri">
            <summary>设置 SvnRepositoryClient.FindRepositoryRoot(Uri repositoryUri) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.HandleClientCancelSvnCancelEventArgs">
            <summary>设置 SvnRepositoryClient.HandleClientCancel(SvnCancelEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.HandleClientNotifySvnRepositoryNotifyEventArgs">
            <summary>设置 SvnRepositoryClient.HandleClientNotify(SvnRepositoryNotifyEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.HotCopyStringString">
            <summary>设置 SvnRepositoryClient.HotCopy(String fromRepository, String toRepository) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.HotCopyStringStringSvnHotCopyRepositoryArgs">
            <summary>设置 SvnRepositoryClient.HotCopy(String fromRepository, String toRepository, SvnHotCopyRepositoryArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.LoadRepositoryStringStream">
            <summary>设置 SvnRepositoryClient.LoadRepository(String repositoryPath, Stream from) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.LoadRepositoryStringStreamSvnLoadRepositoryArgs">
            <summary>设置 SvnRepositoryClient.LoadRepository(String repositoryPath, Stream from, SvnLoadRepositoryArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.LoadRepositoryStringString">
            <summary>设置 SvnRepositoryClient.LoadRepository(String repositoryPath, String from) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.LoadRepositoryStringStringSvnLoadRepositoryArgs">
            <summary>设置 SvnRepositoryClient.LoadRepository(String repositoryPath, String from, SvnLoadRepositoryArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.NotifyAddEventHandlerOfSvnRepositoryNotifyEventArgs">
            <summary>设置 SvnRepositoryClient.add_Notify(EventHandler`1&lt;SvnRepositoryNotifyEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.NotifyRaiseObjectSvnRepositoryNotifyEventArgs">
            <summary>设置 SvnRepositoryClient.raise_Notify(Object sender, SvnRepositoryNotifyEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.NotifyRemoveEventHandlerOfSvnRepositoryNotifyEventArgs">
            <summary>设置 SvnRepositoryClient.remove_Notify(EventHandler`1&lt;SvnRepositoryNotifyEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnRepositoryClient.OnCancel(SvnCancelEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.OnNotifySvnRepositoryNotifyEventArgs">
            <summary>设置 SvnRepositoryClient.OnNotify(SvnRepositoryNotifyEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.PackString">
            <summary>设置 SvnRepositoryClient.Pack(String repositoryPath) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.PackStringSvnPackRepositoryArgs">
            <summary>设置 SvnRepositoryClient.Pack(String repositoryPath, SvnPackRepositoryArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.RecoverRepositoryString">
            <summary>设置 SvnRepositoryClient.RecoverRepository(String repositoryPath) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.RecoverRepositoryStringSvnRecoverRepositoryArgs">
            <summary>设置 SvnRepositoryClient.RecoverRepository(String repositoryPath, SvnRecoverRepositoryArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.SetRepositoryIdStringGuid">
            <summary>设置 SvnRepositoryClient.SetRepositoryId(String repositoryPath, Guid id) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.SetRepositoryIdStringGuidSvnSetRepositoryIdArgs">
            <summary>设置 SvnRepositoryClient.SetRepositoryId(String repositoryPath, Guid id, SvnSetRepositoryIdArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.SetRevisionPropertyStringSvnRevisionStringICollectionOfByte">
            <summary>设置 SvnRepositoryClient.SetRevisionProperty(String repositoryPath, SvnRevision revision, String propertyName, ICollection`1&lt;Byte&gt; bytes) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.SetRevisionPropertyStringSvnRevisionStringICollectionOfByteSvnSetRevisionPropertyRepositoryArgs">
            <summary>设置 SvnRepositoryClient.SetRevisionProperty(String repositoryPath, SvnRevision revision, String propertyName, ICollection`1&lt;Byte&gt; bytes, SvnSetRevisionPropertyRepositoryArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.SetRevisionPropertyStringSvnRevisionStringString">
            <summary>设置 SvnRepositoryClient.SetRevisionProperty(String repositoryPath, SvnRevision revision, String propertyName, String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.SetRevisionPropertyStringSvnRevisionStringStringSvnSetRevisionPropertyRepositoryArgs">
            <summary>设置 SvnRepositoryClient.SetRevisionProperty(String repositoryPath, SvnRevision revision, String propertyName, String value, SvnSetRevisionPropertyRepositoryArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.StaticConstructor">
            <summary>设置 SvnRepositoryClient.SvnRepositoryClient() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.UpgradeRepositoryString">
            <summary>设置 SvnRepositoryClient.UpgradeRepository(String repositoryPath) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.UpgradeRepositoryStringSvnUpgradeRepositoryArgs">
            <summary>设置 SvnRepositoryClient.UpgradeRepository(String repositoryPath, SvnUpgradeRepositoryArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.VerifyString">
            <summary>设置 SvnRepositoryClient.Verify(String repositoryPath) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.VerifyStringSvnVerifyRepositoryArgs">
            <summary>设置 SvnRepositoryClient.Verify(String repositoryPath, SvnVerifyRepositoryArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient._SvnRepositoryClient">
            <summary>设置 SvnRepositoryClient.~SvnRepositoryClient() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnRepositoryClient.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.AllInstances.CancelAddEventHandlerOfSvnCancelEventArgs">
            <summary>设置 SvnRepositoryClient.add_Cancel(EventHandler`1&lt;SvnCancelEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.AllInstances.CancelRaiseObjectSvnCancelEventArgs">
            <summary>设置 SvnRepositoryClient.raise_Cancel(Object sender, SvnCancelEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.AllInstances.CancelRemoveEventHandlerOfSvnCancelEventArgs">
            <summary>设置 SvnRepositoryClient.remove_Cancel(EventHandler`1&lt;SvnCancelEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.AllInstances.CreateRepositoryString">
            <summary>设置 SvnRepositoryClient.CreateRepository(String repositoryPath) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.AllInstances.CreateRepositoryStringSvnCreateRepositoryArgs">
            <summary>设置 SvnRepositoryClient.CreateRepository(String repositoryPath, SvnCreateRepositoryArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.AllInstances.CurrentCommandArgsGet">
            <summary>设置 SvnRepositoryClient.get_CurrentCommandArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.AllInstances.DeleteRepositoryString">
            <summary>设置 SvnRepositoryClient.DeleteRepository(String repositoryPath) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.AllInstances.DeleteRepositoryStringSvnDeleteRepositoryArgs">
            <summary>设置 SvnRepositoryClient.DeleteRepository(String repositoryPath, SvnDeleteRepositoryArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.AllInstances.DeleteRevisionPropertyStringSvnRevisionString">
            <summary>设置 SvnRepositoryClient.DeleteRevisionProperty(String repositoryPath, SvnRevision revision, String propertyName) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.AllInstances.DeleteRevisionPropertyStringSvnRevisionStringSvnSetRevisionPropertyRepositoryArgs">
            <summary>设置 SvnRepositoryClient.DeleteRevisionProperty(String repositoryPath, SvnRevision revision, String propertyName, SvnSetRevisionPropertyRepositoryArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.AllInstances.DisposeBoolean">
            <summary>设置 SvnRepositoryClient.Dispose(Boolean ) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.AllInstances.DumpRepositoryStringStream">
            <summary>设置 SvnRepositoryClient.DumpRepository(String repositoryPath, Stream to) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.AllInstances.DumpRepositoryStringStreamSvnDumpRepositoryArgs">
            <summary>设置 SvnRepositoryClient.DumpRepository(String repositoryPath, Stream to, SvnDumpRepositoryArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.AllInstances.FindRepositoryRootUri">
            <summary>设置 SvnRepositoryClient.FindRepositoryRoot(Uri repositoryUri) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.AllInstances.HandleClientCancelSvnCancelEventArgs">
            <summary>设置 SvnRepositoryClient.HandleClientCancel(SvnCancelEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.AllInstances.HandleClientNotifySvnRepositoryNotifyEventArgs">
            <summary>设置 SvnRepositoryClient.HandleClientNotify(SvnRepositoryNotifyEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.AllInstances.HotCopyStringString">
            <summary>设置 SvnRepositoryClient.HotCopy(String fromRepository, String toRepository) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.AllInstances.HotCopyStringStringSvnHotCopyRepositoryArgs">
            <summary>设置 SvnRepositoryClient.HotCopy(String fromRepository, String toRepository, SvnHotCopyRepositoryArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.AllInstances.LoadRepositoryStringStream">
            <summary>设置 SvnRepositoryClient.LoadRepository(String repositoryPath, Stream from) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.AllInstances.LoadRepositoryStringStreamSvnLoadRepositoryArgs">
            <summary>设置 SvnRepositoryClient.LoadRepository(String repositoryPath, Stream from, SvnLoadRepositoryArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.AllInstances.LoadRepositoryStringString">
            <summary>设置 SvnRepositoryClient.LoadRepository(String repositoryPath, String from) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.AllInstances.LoadRepositoryStringStringSvnLoadRepositoryArgs">
            <summary>设置 SvnRepositoryClient.LoadRepository(String repositoryPath, String from, SvnLoadRepositoryArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.AllInstances.NotifyAddEventHandlerOfSvnRepositoryNotifyEventArgs">
            <summary>设置 SvnRepositoryClient.add_Notify(EventHandler`1&lt;SvnRepositoryNotifyEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.AllInstances.NotifyRaiseObjectSvnRepositoryNotifyEventArgs">
            <summary>设置 SvnRepositoryClient.raise_Notify(Object sender, SvnRepositoryNotifyEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.AllInstances.NotifyRemoveEventHandlerOfSvnRepositoryNotifyEventArgs">
            <summary>设置 SvnRepositoryClient.remove_Notify(EventHandler`1&lt;SvnRepositoryNotifyEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.AllInstances.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnRepositoryClient.OnCancel(SvnCancelEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.AllInstances.OnNotifySvnRepositoryNotifyEventArgs">
            <summary>设置 SvnRepositoryClient.OnNotify(SvnRepositoryNotifyEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.AllInstances.PackString">
            <summary>设置 SvnRepositoryClient.Pack(String repositoryPath) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.AllInstances.PackStringSvnPackRepositoryArgs">
            <summary>设置 SvnRepositoryClient.Pack(String repositoryPath, SvnPackRepositoryArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.AllInstances.RecoverRepositoryString">
            <summary>设置 SvnRepositoryClient.RecoverRepository(String repositoryPath) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.AllInstances.RecoverRepositoryStringSvnRecoverRepositoryArgs">
            <summary>设置 SvnRepositoryClient.RecoverRepository(String repositoryPath, SvnRecoverRepositoryArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.AllInstances.SetRepositoryIdStringGuid">
            <summary>设置 SvnRepositoryClient.SetRepositoryId(String repositoryPath, Guid id) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.AllInstances.SetRepositoryIdStringGuidSvnSetRepositoryIdArgs">
            <summary>设置 SvnRepositoryClient.SetRepositoryId(String repositoryPath, Guid id, SvnSetRepositoryIdArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.AllInstances.SetRevisionPropertyStringSvnRevisionStringICollectionOfByte">
            <summary>设置 SvnRepositoryClient.SetRevisionProperty(String repositoryPath, SvnRevision revision, String propertyName, ICollection`1&lt;Byte&gt; bytes) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.AllInstances.SetRevisionPropertyStringSvnRevisionStringICollectionOfByteSvnSetRevisionPropertyRepositoryArgs">
            <summary>设置 SvnRepositoryClient.SetRevisionProperty(String repositoryPath, SvnRevision revision, String propertyName, ICollection`1&lt;Byte&gt; bytes, SvnSetRevisionPropertyRepositoryArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.AllInstances.SetRevisionPropertyStringSvnRevisionStringString">
            <summary>设置 SvnRepositoryClient.SetRevisionProperty(String repositoryPath, SvnRevision revision, String propertyName, String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.AllInstances.SetRevisionPropertyStringSvnRevisionStringStringSvnSetRevisionPropertyRepositoryArgs">
            <summary>设置 SvnRepositoryClient.SetRevisionProperty(String repositoryPath, SvnRevision revision, String propertyName, String value, SvnSetRevisionPropertyRepositoryArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.AllInstances.UpgradeRepositoryString">
            <summary>设置 SvnRepositoryClient.UpgradeRepository(String repositoryPath) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.AllInstances.UpgradeRepositoryStringSvnUpgradeRepositoryArgs">
            <summary>设置 SvnRepositoryClient.UpgradeRepository(String repositoryPath, SvnUpgradeRepositoryArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.AllInstances.VerifyString">
            <summary>设置 SvnRepositoryClient.Verify(String repositoryPath) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.AllInstances.VerifyStringSvnVerifyRepositoryArgs">
            <summary>设置 SvnRepositoryClient.Verify(String repositoryPath, SvnVerifyRepositoryArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClient.AllInstances._SvnRepositoryClient">
            <summary>设置 SvnRepositoryClient.~SvnRepositoryClient() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnRepositoryClientArgs">
            <summary>SharpSvn.SvnRepositoryClientArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRepositoryClientArgs.#ctor(SharpSvn.SvnRepositoryClientArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRepositoryClientArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRepositoryClientArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClientArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClientArgs.Constructor">
            <summary>设置 SvnRepositoryClientArgs.SvnRepositoryClientArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClientArgs.NotifyAddEventHandlerOfSvnRepositoryNotifyEventArgs">
            <summary>设置 SvnRepositoryClientArgs.add_Notify(EventHandler`1&lt;SvnRepositoryNotifyEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClientArgs.NotifyRaiseObjectSvnRepositoryNotifyEventArgs">
            <summary>设置 SvnRepositoryClientArgs.raise_Notify(Object sender, SvnRepositoryNotifyEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClientArgs.NotifyRemoveEventHandlerOfSvnRepositoryNotifyEventArgs">
            <summary>设置 SvnRepositoryClientArgs.remove_Notify(EventHandler`1&lt;SvnRepositoryNotifyEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClientArgs.OnNotifySvnRepositoryNotifyEventArgs">
            <summary>设置 SvnRepositoryClientArgs.OnNotify(SvnRepositoryNotifyEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClientArgs.RaiseOnNotifySvnRepositoryNotifyEventArgs">
            <summary>设置 SvnRepositoryClientArgs.RaiseOnNotify(SvnRepositoryNotifyEventArgs e) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnRepositoryClientArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClientArgs.AllInstances.NotifyAddEventHandlerOfSvnRepositoryNotifyEventArgs">
            <summary>设置 SvnRepositoryClientArgs.add_Notify(EventHandler`1&lt;SvnRepositoryNotifyEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClientArgs.AllInstances.NotifyRaiseObjectSvnRepositoryNotifyEventArgs">
            <summary>设置 SvnRepositoryClientArgs.raise_Notify(Object sender, SvnRepositoryNotifyEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClientArgs.AllInstances.NotifyRemoveEventHandlerOfSvnRepositoryNotifyEventArgs">
            <summary>设置 SvnRepositoryClientArgs.remove_Notify(EventHandler`1&lt;SvnRepositoryNotifyEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClientArgs.AllInstances.OnNotifySvnRepositoryNotifyEventArgs">
            <summary>设置 SvnRepositoryClientArgs.OnNotify(SvnRepositoryNotifyEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryClientArgs.AllInstances.RaiseOnNotifySvnRepositoryNotifyEventArgs">
            <summary>设置 SvnRepositoryClientArgs.RaiseOnNotify(SvnRepositoryNotifyEventArgs e) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnRepositoryCopyArgs">
            <summary>SharpSvn.SvnRepositoryCopyArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRepositoryCopyArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRepositoryCopyArgs.#ctor(SharpSvn.SvnRepositoryCopyArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRepositoryCopyArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRepositoryCopyArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryCopyArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryCopyArgs.Constructor">
            <summary>设置 SvnRepositoryCopyArgs.SvnRepositoryCopyArgs() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnRepositoryCopyArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnRepositoryCreateDirectoryArgs">
            <summary>SharpSvn.SvnRepositoryCreateDirectoryArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRepositoryCreateDirectoryArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRepositoryCreateDirectoryArgs.#ctor(SharpSvn.SvnRepositoryCreateDirectoryArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRepositoryCreateDirectoryArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRepositoryCreateDirectoryArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryCreateDirectoryArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryCreateDirectoryArgs.Constructor">
            <summary>设置 SvnRepositoryCreateDirectoryArgs.SvnRepositoryCreateDirectoryArgs() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnRepositoryCreateDirectoryArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnRepositoryCreateFileArgs">
            <summary>SharpSvn.SvnRepositoryCreateFileArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRepositoryCreateFileArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRepositoryCreateFileArgs.#ctor(SharpSvn.SvnRepositoryCreateFileArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRepositoryCreateFileArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRepositoryCreateFileArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryCreateFileArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryCreateFileArgs.Constructor">
            <summary>设置 SvnRepositoryCreateFileArgs.SvnRepositoryCreateFileArgs() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnRepositoryCreateFileArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnRepositoryDeleteArgs">
            <summary>SharpSvn.SvnRepositoryDeleteArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRepositoryDeleteArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRepositoryDeleteArgs.#ctor(SharpSvn.SvnRepositoryDeleteArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRepositoryDeleteArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRepositoryDeleteArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryDeleteArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryDeleteArgs.Constructor">
            <summary>设置 SvnRepositoryDeleteArgs.SvnRepositoryDeleteArgs() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnRepositoryDeleteArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnRepositoryException">
            <summary>SharpSvn.SvnRepositoryException 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRepositoryException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRepositoryException.#ctor(SharpSvn.SvnRepositoryException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRepositoryException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRepositoryException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRepositoryException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryException.Constructor">
            <summary>设置 SvnRepositoryException.SvnRepositoryException() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 SvnRepositoryException.SvnRepositoryException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryException.ConstructorString">
            <summary>设置 SvnRepositoryException.SvnRepositoryException(String message) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryException.ConstructorStringException">
            <summary>设置 SvnRepositoryException.SvnRepositoryException(String message, Exception inner) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnRepositoryException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnRepositoryGetNodeKindArgs">
            <summary>SharpSvn.SvnRepositoryGetNodeKindArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRepositoryGetNodeKindArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRepositoryGetNodeKindArgs.#ctor(SharpSvn.SvnRepositoryGetNodeKindArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRepositoryGetNodeKindArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRepositoryGetNodeKindArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryGetNodeKindArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryGetNodeKindArgs.Constructor">
            <summary>设置 SvnRepositoryGetNodeKindArgs.SvnRepositoryGetNodeKindArgs() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnRepositoryGetNodeKindArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnRepositoryHookException">
            <summary>SharpSvn.SvnRepositoryHookException 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRepositoryHookException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRepositoryHookException.#ctor(SharpSvn.SvnRepositoryHookException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRepositoryHookException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRepositoryHookException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRepositoryHookException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryHookException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryHookException.Constructor">
            <summary>设置 SvnRepositoryHookException.SvnRepositoryHookException() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryHookException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 SvnRepositoryHookException.SvnRepositoryHookException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryHookException.ConstructorString">
            <summary>设置 SvnRepositoryHookException.SvnRepositoryHookException(String message) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryHookException.ConstructorStringException">
            <summary>设置 SvnRepositoryHookException.SvnRepositoryHookException(String message, Exception inner) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnRepositoryHookException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnRepositoryIOException">
            <summary>SharpSvn.SvnRepositoryIOException 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRepositoryIOException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRepositoryIOException.#ctor(SharpSvn.SvnRepositoryIOException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRepositoryIOException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRepositoryIOException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRepositoryIOException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryIOException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryIOException.Constructor">
            <summary>设置 SvnRepositoryIOException.SvnRepositoryIOException() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryIOException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 SvnRepositoryIOException.SvnRepositoryIOException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryIOException.ConstructorString">
            <summary>设置 SvnRepositoryIOException.SvnRepositoryIOException(String message) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryIOException.ConstructorStringException">
            <summary>设置 SvnRepositoryIOException.SvnRepositoryIOException(String message, Exception inner) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnRepositoryIOException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnRepositoryIOForbiddenException">
            <summary>SharpSvn.SvnRepositoryIOForbiddenException 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRepositoryIOForbiddenException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRepositoryIOForbiddenException.#ctor(SharpSvn.SvnRepositoryIOForbiddenException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRepositoryIOForbiddenException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRepositoryIOForbiddenException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRepositoryIOForbiddenException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryIOForbiddenException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryIOForbiddenException.Constructor">
            <summary>设置 SvnRepositoryIOForbiddenException.SvnRepositoryIOForbiddenException() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryIOForbiddenException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 SvnRepositoryIOForbiddenException.SvnRepositoryIOForbiddenException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryIOForbiddenException.ConstructorString">
            <summary>设置 SvnRepositoryIOForbiddenException.SvnRepositoryIOForbiddenException(String message) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryIOForbiddenException.ConstructorStringException">
            <summary>设置 SvnRepositoryIOForbiddenException.SvnRepositoryIOForbiddenException(String message, Exception inner) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnRepositoryIOForbiddenException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnRepositoryMoveArgs">
            <summary>SharpSvn.SvnRepositoryMoveArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRepositoryMoveArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRepositoryMoveArgs.#ctor(SharpSvn.SvnRepositoryMoveArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRepositoryMoveArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRepositoryMoveArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryMoveArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryMoveArgs.Constructor">
            <summary>设置 SvnRepositoryMoveArgs.SvnRepositoryMoveArgs() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnRepositoryMoveArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnRepositoryNotifyEventArgs">
            <summary>SharpSvn.SvnRepositoryNotifyEventArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRepositoryNotifyEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRepositoryNotifyEventArgs.#ctor(SharpSvn.SvnRepositoryNotifyEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRepositoryNotifyEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRepositoryNotifyEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryNotifyEventArgs.ActionGet">
            <summary>设置 SvnRepositoryNotifyEventArgs.get_Action() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryNotifyEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryNotifyEventArgs.DetachBoolean">
            <summary>设置 SvnRepositoryNotifyEventArgs.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnRepositoryNotifyEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryNotifyEventArgs.AllInstances.ActionGet">
            <summary>设置 SvnRepositoryNotifyEventArgs.get_Action() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryNotifyEventArgs.AllInstances.DetachBoolean">
            <summary>设置 SvnRepositoryNotifyEventArgs.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnRepositoryOperationArgs">
            <summary>SharpSvn.SvnRepositoryOperationArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRepositoryOperationArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRepositoryOperationArgs.#ctor(SharpSvn.SvnRepositoryOperationArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRepositoryOperationArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRepositoryOperationArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryOperationArgs.BaseRevisionGet">
            <summary>设置 SvnRepositoryOperationArgs.get_BaseRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryOperationArgs.BaseRevisionSetInt64">
            <summary>设置 SvnRepositoryOperationArgs.set_BaseRevision(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryOperationArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryOperationArgs.CommandTypeGet">
            <summary>设置 SvnRepositoryOperationArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryOperationArgs.Constructor">
            <summary>设置 SvnRepositoryOperationArgs.SvnRepositoryOperationArgs() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnRepositoryOperationArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryOperationArgs.AllInstances.BaseRevisionGet">
            <summary>设置 SvnRepositoryOperationArgs.get_BaseRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryOperationArgs.AllInstances.BaseRevisionSetInt64">
            <summary>设置 SvnRepositoryOperationArgs.set_BaseRevision(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryOperationArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnRepositoryOperationArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnRepositoryOperationBaseArgs">
            <summary>SharpSvn.SvnRepositoryOperationBaseArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRepositoryOperationBaseArgs.#ctor(SharpSvn.SvnRepositoryOperationBaseArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRepositoryOperationBaseArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRepositoryOperationBaseArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryOperationBaseArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryOperationBaseArgs.CommandTypeGet">
            <summary>设置 SvnRepositoryOperationBaseArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryOperationBaseArgs.Constructor">
            <summary>设置 SvnRepositoryOperationBaseArgs.SvnRepositoryOperationBaseArgs() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnRepositoryOperationBaseArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryOperationBaseArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnRepositoryOperationBaseArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnRepositorySetPropertyArgs">
            <summary>SharpSvn.SvnRepositorySetPropertyArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRepositorySetPropertyArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRepositorySetPropertyArgs.#ctor(SharpSvn.SvnRepositorySetPropertyArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRepositorySetPropertyArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRepositorySetPropertyArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositorySetPropertyArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositorySetPropertyArgs.Constructor">
            <summary>设置 SvnRepositorySetPropertyArgs.SvnRepositorySetPropertyArgs() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnRepositorySetPropertyArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnRepositoryUpdateFileArgs">
            <summary>SharpSvn.SvnRepositoryUpdateFileArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRepositoryUpdateFileArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRepositoryUpdateFileArgs.#ctor(SharpSvn.SvnRepositoryUpdateFileArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRepositoryUpdateFileArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRepositoryUpdateFileArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryUpdateFileArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRepositoryUpdateFileArgs.Constructor">
            <summary>设置 SvnRepositoryUpdateFileArgs.SvnRepositoryUpdateFileArgs() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnRepositoryUpdateFileArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnReservedNameUsedException">
            <summary>SharpSvn.SvnReservedNameUsedException 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnReservedNameUsedException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnReservedNameUsedException.#ctor(SharpSvn.SvnReservedNameUsedException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnReservedNameUsedException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnReservedNameUsedException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnReservedNameUsedException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnReservedNameUsedException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnReservedNameUsedException.Constructor">
            <summary>设置 SvnReservedNameUsedException.SvnReservedNameUsedException() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnReservedNameUsedException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 SvnReservedNameUsedException.SvnReservedNameUsedException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnReservedNameUsedException.ConstructorString">
            <summary>设置 SvnReservedNameUsedException.SvnReservedNameUsedException(String message) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnReservedNameUsedException.ConstructorStringException">
            <summary>设置 SvnReservedNameUsedException.SvnReservedNameUsedException(String message, Exception inner) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnReservedNameUsedException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnResolveArgs">
            <summary>SharpSvn.SvnResolveArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnResolveArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnResolveArgs.#ctor(SharpSvn.SvnResolveArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnResolveArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnResolveArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnResolveArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnResolveArgs.CommandTypeGet">
            <summary>设置 SvnResolveArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnResolveArgs.Constructor">
            <summary>设置 SvnResolveArgs.SvnResolveArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnResolveArgs.DepthGet">
            <summary>设置 SvnResolveArgs.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnResolveArgs.DepthSetSvnDepth">
            <summary>设置 SvnResolveArgs.set_Depth(SvnDepth value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnResolveArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnResolveArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnResolveArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnResolveArgs.AllInstances.DepthGet">
            <summary>设置 SvnResolveArgs.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnResolveArgs.AllInstances.DepthSetSvnDepth">
            <summary>设置 SvnResolveArgs.set_Depth(SvnDepth value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnRevertArgs">
            <summary>SharpSvn.SvnRevertArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRevertArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRevertArgs.#ctor(SharpSvn.SvnRevertArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRevertArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRevertArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevertArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevertArgs.ChangeListsGet">
            <summary>设置 SvnRevertArgs.get_ChangeLists() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevertArgs.CommandTypeGet">
            <summary>设置 SvnRevertArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevertArgs.Constructor">
            <summary>设置 SvnRevertArgs.SvnRevertArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevertArgs.DepthGet">
            <summary>设置 SvnRevertArgs.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevertArgs.DepthSetSvnDepth">
            <summary>设置 SvnRevertArgs.set_Depth(SvnDepth value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnRevertArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevertArgs.AllInstances.ChangeListsGet">
            <summary>设置 SvnRevertArgs.get_ChangeLists() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevertArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnRevertArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevertArgs.AllInstances.DepthGet">
            <summary>设置 SvnRevertArgs.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevertArgs.AllInstances.DepthSetSvnDepth">
            <summary>设置 SvnRevertArgs.set_Depth(SvnDepth value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnRevision">
            <summary>SharpSvn.SvnRevision 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRevision.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRevision.#ctor(SharpSvn.SvnRevision)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRevision.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRevision.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRevision.Bind(System.IEquatable{SharpSvn.SvnRevision})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevision.BaseGet">
            <summary>设置 SvnRevision.get_Base() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevision.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevision.CommittedGet">
            <summary>设置 SvnRevision.get_Committed() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevision.Constructor">
            <summary>设置 SvnRevision.SvnRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevision.ConstructorDateTime">
            <summary>设置 SvnRevision.SvnRevision(DateTime date) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevision.ConstructorInt32">
            <summary>设置 SvnRevision.SvnRevision(Int32 revision) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevision.ConstructorInt64">
            <summary>设置 SvnRevision.SvnRevision(Int64 revision) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevision.ConstructorSvnRevisionType">
            <summary>设置 SvnRevision.SvnRevision(SvnRevisionType type) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevision.EqualityOpSvnRevisionSvnRevision">
            <summary>设置 SvnRevision.op_Equality(SvnRevision rev1, SvnRevision rev2) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevision.EqualsObject">
            <summary>设置 SvnRevision.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevision.EqualsSvnRevision">
            <summary>设置 SvnRevision.Equals(SvnRevision other) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevision.GetHashCode">
            <summary>设置 SvnRevision.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevision.HeadGet">
            <summary>设置 SvnRevision.get_Head() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevision.ImplicitOpDateTimeSvnRevision">
            <summary>设置 SvnRevision.op_Implicit(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevision.ImplicitOpInt64SvnRevision">
            <summary>设置 SvnRevision.op_Implicit(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevision.ImplicitOpSvnRevisionTypeSvnRevision">
            <summary>设置 SvnRevision.op_Implicit(SvnRevisionType value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevision.InequalityOpSvnRevisionSvnRevision">
            <summary>设置 SvnRevision.op_Inequality(SvnRevision rev1, SvnRevision rev2) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevision.IsExplicitGet">
            <summary>设置 SvnRevision.get_IsExplicit() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevision.NoneGet">
            <summary>设置 SvnRevision.get_None() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevision.OneGet">
            <summary>设置 SvnRevision.get_One() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevision.OrSvnRevision">
            <summary>设置 SvnRevision.Or(SvnRevision alternate) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevision.PreviousGet">
            <summary>设置 SvnRevision.get_Previous() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevision.RequiresWorkingCopyGet">
            <summary>设置 SvnRevision.get_RequiresWorkingCopy() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevision.RevisionGet">
            <summary>设置 SvnRevision.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevision.RevisionTypeGet">
            <summary>设置 SvnRevision.get_RevisionType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevision.StaticConstructor">
            <summary>设置 SvnRevision.SvnRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevision.TimeGet">
            <summary>设置 SvnRevision.get_Time() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevision.ToString">
            <summary>设置 SvnRevision.ToString() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevision.WorkingGet">
            <summary>设置 SvnRevision.get_Working() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevision.ZeroGet">
            <summary>设置 SvnRevision.get_Zero() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnRevision.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevision.AllInstances.EqualsObject">
            <summary>设置 SvnRevision.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevision.AllInstances.EqualsSvnRevision">
            <summary>设置 SvnRevision.Equals(SvnRevision other) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevision.AllInstances.GetHashCode01">
            <summary>设置 SvnRevision.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevision.AllInstances.IsExplicitGet">
            <summary>设置 SvnRevision.get_IsExplicit() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevision.AllInstances.OrSvnRevision">
            <summary>设置 SvnRevision.Or(SvnRevision alternate) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevision.AllInstances.RequiresWorkingCopyGet">
            <summary>设置 SvnRevision.get_RequiresWorkingCopy() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevision.AllInstances.RevisionGet">
            <summary>设置 SvnRevision.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevision.AllInstances.RevisionTypeGet">
            <summary>设置 SvnRevision.get_RevisionType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevision.AllInstances.TimeGet">
            <summary>设置 SvnRevision.get_Time() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevision.AllInstances.ToString01">
            <summary>设置 SvnRevision.ToString() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnRevisionPropertyCollection">
            <summary>SharpSvn.SvnRevisionPropertyCollection 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRevisionPropertyCollection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRevisionPropertyCollection.#ctor(SharpSvn.SvnRevisionPropertyCollection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRevisionPropertyCollection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRevisionPropertyCollection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRevisionPropertyCollection.Bind(System.Collections.ICollection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRevisionPropertyCollection.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRevisionPropertyCollection.Bind(System.Collections.IList)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRevisionPropertyCollection.Bind(System.Collections.Generic.ICollection{SharpSvn.SvnPropertyValue})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRevisionPropertyCollection.Bind(System.Collections.Generic.IEnumerable{SharpSvn.SvnPropertyValue})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRevisionPropertyCollection.Bind(System.Collections.Generic.IList{SharpSvn.SvnPropertyValue})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRevisionPropertyCollection.Bind(System.Collections.Generic.IReadOnlyCollection{SharpSvn.SvnPropertyValue})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRevisionPropertyCollection.Bind(System.Collections.Generic.IReadOnlyList{SharpSvn.SvnPropertyValue})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevisionPropertyCollection.AddStringByteArray">
            <summary>设置 SvnRevisionPropertyCollection.Add(String key, Byte[] value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevisionPropertyCollection.AddStringString">
            <summary>设置 SvnRevisionPropertyCollection.Add(String key, String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevisionPropertyCollection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevisionPropertyCollection.Constructor">
            <summary>设置 SvnRevisionPropertyCollection.SvnRevisionPropertyCollection() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevisionPropertyCollection.GetKeyForItemSvnPropertyValue">
            <summary>设置 SvnRevisionPropertyCollection.GetKeyForItem(SvnPropertyValue item) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnRevisionPropertyCollection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevisionPropertyCollection.AllInstances.AddStringByteArray">
            <summary>设置 SvnRevisionPropertyCollection.Add(String key, Byte[] value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevisionPropertyCollection.AllInstances.AddStringString">
            <summary>设置 SvnRevisionPropertyCollection.Add(String key, String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevisionPropertyCollection.AllInstances.GetKeyForItemSvnPropertyValue">
            <summary>设置 SvnRevisionPropertyCollection.GetKeyForItem(SvnPropertyValue item) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnRevisionPropertyListArgs">
            <summary>SharpSvn.SvnRevisionPropertyListArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRevisionPropertyListArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRevisionPropertyListArgs.#ctor(SharpSvn.SvnRevisionPropertyListArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRevisionPropertyListArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRevisionPropertyListArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevisionPropertyListArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevisionPropertyListArgs.CommandTypeGet">
            <summary>设置 SvnRevisionPropertyListArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevisionPropertyListArgs.Constructor">
            <summary>设置 SvnRevisionPropertyListArgs.SvnRevisionPropertyListArgs() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnRevisionPropertyListArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevisionPropertyListArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnRevisionPropertyListArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnRevisionPropertyNameCollection">
            <summary>SharpSvn.SvnRevisionPropertyNameCollection 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRevisionPropertyNameCollection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRevisionPropertyNameCollection.#ctor(SharpSvn.SvnRevisionPropertyNameCollection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRevisionPropertyNameCollection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRevisionPropertyNameCollection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRevisionPropertyNameCollection.Bind(System.Collections.ICollection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRevisionPropertyNameCollection.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRevisionPropertyNameCollection.Bind(System.Collections.IList)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRevisionPropertyNameCollection.Bind(System.Collections.Generic.ICollection{System.String})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRevisionPropertyNameCollection.Bind(System.Collections.Generic.IEnumerable{System.String})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRevisionPropertyNameCollection.Bind(System.Collections.Generic.IList{System.String})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRevisionPropertyNameCollection.Bind(System.Collections.Generic.IReadOnlyCollection{System.String})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRevisionPropertyNameCollection.Bind(System.Collections.Generic.IReadOnlyList{System.String})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevisionPropertyNameCollection.AddDefaultProperties">
            <summary>设置 SvnRevisionPropertyNameCollection.AddDefaultProperties() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevisionPropertyNameCollection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevisionPropertyNameCollection.ConstructorBoolean">
            <summary>设置 SvnRevisionPropertyNameCollection.SvnRevisionPropertyNameCollection(Boolean initialEmpty) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevisionPropertyNameCollection.GetKeyForItemString">
            <summary>设置 SvnRevisionPropertyNameCollection.GetKeyForItem(String item) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevisionPropertyNameCollection.StaticConstructor">
            <summary>设置 SvnRevisionPropertyNameCollection.SvnRevisionPropertyNameCollection() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnRevisionPropertyNameCollection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevisionPropertyNameCollection.AllInstances.AddDefaultProperties">
            <summary>设置 SvnRevisionPropertyNameCollection.AddDefaultProperties() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevisionPropertyNameCollection.AllInstances.GetKeyForItemString">
            <summary>设置 SvnRevisionPropertyNameCollection.GetKeyForItem(String item) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnRevisionRange">
            <summary>SharpSvn.SvnRevisionRange 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRevisionRange.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRevisionRange.#ctor(SharpSvn.SvnRevisionRange)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRevisionRange.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRevisionRange.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnRevisionRange.Bind(System.IEquatable{SharpSvn.SvnRevisionRange})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevisionRange.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevisionRange.ConstructorInt64Int64">
            <summary>设置 SvnRevisionRange.SvnRevisionRange(Int64 start, Int64 end) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevisionRange.ConstructorSvnRevisionSvnRevision">
            <summary>设置 SvnRevisionRange.SvnRevisionRange(SvnRevision start, SvnRevision end) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevisionRange.EndRevisionGet">
            <summary>设置 SvnRevisionRange.get_EndRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevisionRange.EqualsObject">
            <summary>设置 SvnRevisionRange.Equals(Object other) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevisionRange.EqualsSvnRevisionRange">
            <summary>设置 SvnRevisionRange.Equals(SvnRevisionRange range) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevisionRange.FromRevisionInt64">
            <summary>设置 SvnRevisionRange.FromRevision(Int64 revision) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevisionRange.GetHashCode">
            <summary>设置 SvnRevisionRange.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevisionRange.NoneGet">
            <summary>设置 SvnRevisionRange.get_None() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevisionRange.Reverse">
            <summary>设置 SvnRevisionRange.Reverse() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevisionRange.StartRevisionGet">
            <summary>设置 SvnRevisionRange.get_StartRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevisionRange.StaticConstructor">
            <summary>设置 SvnRevisionRange.SvnRevisionRange() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevisionRange.ToString">
            <summary>设置 SvnRevisionRange.ToString() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevisionRange.UnaryNegationOpSvnRevisionRange">
            <summary>设置 SvnRevisionRange.op_UnaryNegation(SvnRevisionRange from) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnRevisionRange.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevisionRange.AllInstances.EndRevisionGet">
            <summary>设置 SvnRevisionRange.get_EndRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevisionRange.AllInstances.EqualsObject">
            <summary>设置 SvnRevisionRange.Equals(Object other) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevisionRange.AllInstances.EqualsSvnRevisionRange">
            <summary>设置 SvnRevisionRange.Equals(SvnRevisionRange range) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevisionRange.AllInstances.GetHashCode01">
            <summary>设置 SvnRevisionRange.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevisionRange.AllInstances.Reverse">
            <summary>设置 SvnRevisionRange.Reverse() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevisionRange.AllInstances.StartRevisionGet">
            <summary>设置 SvnRevisionRange.get_StartRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnRevisionRange.AllInstances.ToString01">
            <summary>设置 SvnRevisionRange.ToString() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnSetPropertyArgs">
            <summary>SharpSvn.SvnSetPropertyArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnSetPropertyArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnSetPropertyArgs.#ctor(SharpSvn.SvnSetPropertyArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnSetPropertyArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnSetPropertyArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSetPropertyArgs.BaseRevisionGet">
            <summary>设置 SvnSetPropertyArgs.get_BaseRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSetPropertyArgs.BaseRevisionSetInt64">
            <summary>设置 SvnSetPropertyArgs.set_BaseRevision(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSetPropertyArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSetPropertyArgs.ChangeListsGet">
            <summary>设置 SvnSetPropertyArgs.get_ChangeLists() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSetPropertyArgs.CommandTypeGet">
            <summary>设置 SvnSetPropertyArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSetPropertyArgs.Constructor">
            <summary>设置 SvnSetPropertyArgs.SvnSetPropertyArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSetPropertyArgs.DepthGet">
            <summary>设置 SvnSetPropertyArgs.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSetPropertyArgs.DepthSetSvnDepth">
            <summary>设置 SvnSetPropertyArgs.set_Depth(SvnDepth value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSetPropertyArgs.SkipChecksGet">
            <summary>设置 SvnSetPropertyArgs.get_SkipChecks() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSetPropertyArgs.SkipChecksSetBoolean">
            <summary>设置 SvnSetPropertyArgs.set_SkipChecks(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnSetPropertyArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSetPropertyArgs.AllInstances.BaseRevisionGet">
            <summary>设置 SvnSetPropertyArgs.get_BaseRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSetPropertyArgs.AllInstances.BaseRevisionSetInt64">
            <summary>设置 SvnSetPropertyArgs.set_BaseRevision(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSetPropertyArgs.AllInstances.ChangeListsGet">
            <summary>设置 SvnSetPropertyArgs.get_ChangeLists() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSetPropertyArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnSetPropertyArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSetPropertyArgs.AllInstances.DepthGet">
            <summary>设置 SvnSetPropertyArgs.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSetPropertyArgs.AllInstances.DepthSetSvnDepth">
            <summary>设置 SvnSetPropertyArgs.set_Depth(SvnDepth value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSetPropertyArgs.AllInstances.SkipChecksGet">
            <summary>设置 SvnSetPropertyArgs.get_SkipChecks() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSetPropertyArgs.AllInstances.SkipChecksSetBoolean">
            <summary>设置 SvnSetPropertyArgs.set_SkipChecks(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnSetRepositoryIdArgs">
            <summary>SharpSvn.SvnSetRepositoryIdArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnSetRepositoryIdArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnSetRepositoryIdArgs.#ctor(SharpSvn.SvnSetRepositoryIdArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnSetRepositoryIdArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnSetRepositoryIdArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSetRepositoryIdArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSetRepositoryIdArgs.CommandTypeGet">
            <summary>设置 SvnSetRepositoryIdArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSetRepositoryIdArgs.Constructor">
            <summary>设置 SvnSetRepositoryIdArgs.SvnSetRepositoryIdArgs() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnSetRepositoryIdArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSetRepositoryIdArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnSetRepositoryIdArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnSetRevisionPropertyArgs">
            <summary>SharpSvn.SvnSetRevisionPropertyArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnSetRevisionPropertyArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnSetRevisionPropertyArgs.#ctor(SharpSvn.SvnSetRevisionPropertyArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnSetRevisionPropertyArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnSetRevisionPropertyArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSetRevisionPropertyArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSetRevisionPropertyArgs.CommandTypeGet">
            <summary>设置 SvnSetRevisionPropertyArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSetRevisionPropertyArgs.Constructor">
            <summary>设置 SvnSetRevisionPropertyArgs.SvnSetRevisionPropertyArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSetRevisionPropertyArgs.ForceGet">
            <summary>设置 SvnSetRevisionPropertyArgs.get_Force() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSetRevisionPropertyArgs.ForceSetBoolean">
            <summary>设置 SvnSetRevisionPropertyArgs.set_Force(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnSetRevisionPropertyArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSetRevisionPropertyArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnSetRevisionPropertyArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSetRevisionPropertyArgs.AllInstances.ForceGet">
            <summary>设置 SvnSetRevisionPropertyArgs.get_Force() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSetRevisionPropertyArgs.AllInstances.ForceSetBoolean">
            <summary>设置 SvnSetRevisionPropertyArgs.set_Force(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnSetRevisionPropertyRepositoryArgs">
            <summary>SharpSvn.SvnSetRevisionPropertyRepositoryArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnSetRevisionPropertyRepositoryArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnSetRevisionPropertyRepositoryArgs.#ctor(SharpSvn.SvnSetRevisionPropertyRepositoryArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnSetRevisionPropertyRepositoryArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnSetRevisionPropertyRepositoryArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSetRevisionPropertyRepositoryArgs.AuthorGet">
            <summary>设置 SvnSetRevisionPropertyRepositoryArgs.get_Author() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSetRevisionPropertyRepositoryArgs.AuthorSetString">
            <summary>设置 SvnSetRevisionPropertyRepositoryArgs.set_Author(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSetRevisionPropertyRepositoryArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSetRevisionPropertyRepositoryArgs.CallPostRevPropChangeHookGet">
            <summary>设置 SvnSetRevisionPropertyRepositoryArgs.get_CallPostRevPropChangeHook() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSetRevisionPropertyRepositoryArgs.CallPostRevPropChangeHookSetBoolean">
            <summary>设置 SvnSetRevisionPropertyRepositoryArgs.set_CallPostRevPropChangeHook(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSetRevisionPropertyRepositoryArgs.CallPreRevPropChangeHookGet">
            <summary>设置 SvnSetRevisionPropertyRepositoryArgs.get_CallPreRevPropChangeHook() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSetRevisionPropertyRepositoryArgs.CallPreRevPropChangeHookSetBoolean">
            <summary>设置 SvnSetRevisionPropertyRepositoryArgs.set_CallPreRevPropChangeHook(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSetRevisionPropertyRepositoryArgs.CommandTypeGet">
            <summary>设置 SvnSetRevisionPropertyRepositoryArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSetRevisionPropertyRepositoryArgs.Constructor">
            <summary>设置 SvnSetRevisionPropertyRepositoryArgs.SvnSetRevisionPropertyRepositoryArgs() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnSetRevisionPropertyRepositoryArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSetRevisionPropertyRepositoryArgs.AllInstances.AuthorGet">
            <summary>设置 SvnSetRevisionPropertyRepositoryArgs.get_Author() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSetRevisionPropertyRepositoryArgs.AllInstances.AuthorSetString">
            <summary>设置 SvnSetRevisionPropertyRepositoryArgs.set_Author(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSetRevisionPropertyRepositoryArgs.AllInstances.CallPostRevPropChangeHookGet">
            <summary>设置 SvnSetRevisionPropertyRepositoryArgs.get_CallPostRevPropChangeHook() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSetRevisionPropertyRepositoryArgs.AllInstances.CallPostRevPropChangeHookSetBoolean">
            <summary>设置 SvnSetRevisionPropertyRepositoryArgs.set_CallPostRevPropChangeHook(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSetRevisionPropertyRepositoryArgs.AllInstances.CallPreRevPropChangeHookGet">
            <summary>设置 SvnSetRevisionPropertyRepositoryArgs.get_CallPreRevPropChangeHook() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSetRevisionPropertyRepositoryArgs.AllInstances.CallPreRevPropChangeHookSetBoolean">
            <summary>设置 SvnSetRevisionPropertyRepositoryArgs.set_CallPreRevPropChangeHook(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSetRevisionPropertyRepositoryArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnSetRevisionPropertyRepositoryArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnStatusArgs">
            <summary>SharpSvn.SvnStatusArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnStatusArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnStatusArgs.#ctor(SharpSvn.SvnStatusArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnStatusArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnStatusArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusArgs.ChangeListsGet">
            <summary>设置 SvnStatusArgs.get_ChangeLists() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusArgs.CommandTypeGet">
            <summary>设置 SvnStatusArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusArgs.Constructor">
            <summary>设置 SvnStatusArgs.SvnStatusArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusArgs.ContactRepositoryGet">
            <summary>设置 SvnStatusArgs.get_ContactRepository() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusArgs.ContactRepositorySetBoolean">
            <summary>设置 SvnStatusArgs.set_ContactRepository(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusArgs.DepthGet">
            <summary>设置 SvnStatusArgs.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusArgs.DepthSetSvnDepth">
            <summary>设置 SvnStatusArgs.set_Depth(SvnDepth value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusArgs.IgnoreExternalsGet">
            <summary>设置 SvnStatusArgs.get_IgnoreExternals() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusArgs.IgnoreExternalsSetBoolean">
            <summary>设置 SvnStatusArgs.set_IgnoreExternals(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusArgs.KeepDepthGet">
            <summary>设置 SvnStatusArgs.get_KeepDepth() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusArgs.KeepDepthSetBoolean">
            <summary>设置 SvnStatusArgs.set_KeepDepth(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusArgs.OnStatusSvnStatusEventArgs">
            <summary>设置 SvnStatusArgs.OnStatus(SvnStatusEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusArgs.RetrieveAllEntriesGet">
            <summary>设置 SvnStatusArgs.get_RetrieveAllEntries() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusArgs.RetrieveAllEntriesSetBoolean">
            <summary>设置 SvnStatusArgs.set_RetrieveAllEntries(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusArgs.RetrieveIgnoredEntriesGet">
            <summary>设置 SvnStatusArgs.get_RetrieveIgnoredEntries() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusArgs.RetrieveIgnoredEntriesSetBoolean">
            <summary>设置 SvnStatusArgs.set_RetrieveIgnoredEntries(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusArgs.RetrieveRemoteStatusGet">
            <summary>设置 SvnStatusArgs.get_RetrieveRemoteStatus() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusArgs.RetrieveRemoteStatusSetBoolean">
            <summary>设置 SvnStatusArgs.set_RetrieveRemoteStatus(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusArgs.RevisionGet">
            <summary>设置 SvnStatusArgs.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusArgs.RevisionSetSvnRevision">
            <summary>设置 SvnStatusArgs.set_Revision(SvnRevision value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusArgs.StatusAddEventHandlerOfSvnStatusEventArgs">
            <summary>设置 SvnStatusArgs.add_Status(EventHandler`1&lt;SvnStatusEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusArgs.StatusRaiseObjectSvnStatusEventArgs">
            <summary>设置 SvnStatusArgs.raise_Status(Object sender, SvnStatusEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusArgs.StatusRemoveEventHandlerOfSvnStatusEventArgs">
            <summary>设置 SvnStatusArgs.remove_Status(EventHandler`1&lt;SvnStatusEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnStatusArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusArgs.AllInstances.ChangeListsGet">
            <summary>设置 SvnStatusArgs.get_ChangeLists() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnStatusArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusArgs.AllInstances.ContactRepositoryGet">
            <summary>设置 SvnStatusArgs.get_ContactRepository() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusArgs.AllInstances.ContactRepositorySetBoolean">
            <summary>设置 SvnStatusArgs.set_ContactRepository(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusArgs.AllInstances.DepthGet">
            <summary>设置 SvnStatusArgs.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusArgs.AllInstances.DepthSetSvnDepth">
            <summary>设置 SvnStatusArgs.set_Depth(SvnDepth value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusArgs.AllInstances.IgnoreExternalsGet">
            <summary>设置 SvnStatusArgs.get_IgnoreExternals() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusArgs.AllInstances.IgnoreExternalsSetBoolean">
            <summary>设置 SvnStatusArgs.set_IgnoreExternals(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusArgs.AllInstances.KeepDepthGet">
            <summary>设置 SvnStatusArgs.get_KeepDepth() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusArgs.AllInstances.KeepDepthSetBoolean">
            <summary>设置 SvnStatusArgs.set_KeepDepth(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusArgs.AllInstances.OnStatusSvnStatusEventArgs">
            <summary>设置 SvnStatusArgs.OnStatus(SvnStatusEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusArgs.AllInstances.RetrieveAllEntriesGet">
            <summary>设置 SvnStatusArgs.get_RetrieveAllEntries() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusArgs.AllInstances.RetrieveAllEntriesSetBoolean">
            <summary>设置 SvnStatusArgs.set_RetrieveAllEntries(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusArgs.AllInstances.RetrieveIgnoredEntriesGet">
            <summary>设置 SvnStatusArgs.get_RetrieveIgnoredEntries() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusArgs.AllInstances.RetrieveIgnoredEntriesSetBoolean">
            <summary>设置 SvnStatusArgs.set_RetrieveIgnoredEntries(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusArgs.AllInstances.RetrieveRemoteStatusGet">
            <summary>设置 SvnStatusArgs.get_RetrieveRemoteStatus() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusArgs.AllInstances.RetrieveRemoteStatusSetBoolean">
            <summary>设置 SvnStatusArgs.set_RetrieveRemoteStatus(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusArgs.AllInstances.RevisionGet">
            <summary>设置 SvnStatusArgs.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusArgs.AllInstances.RevisionSetSvnRevision">
            <summary>设置 SvnStatusArgs.set_Revision(SvnRevision value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusArgs.AllInstances.StatusAddEventHandlerOfSvnStatusEventArgs">
            <summary>设置 SvnStatusArgs.add_Status(EventHandler`1&lt;SvnStatusEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusArgs.AllInstances.StatusRaiseObjectSvnStatusEventArgs">
            <summary>设置 SvnStatusArgs.raise_Status(Object sender, SvnStatusEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusArgs.AllInstances.StatusRemoveEventHandlerOfSvnStatusEventArgs">
            <summary>设置 SvnStatusArgs.remove_Status(EventHandler`1&lt;SvnStatusEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnStatusEventArgs">
            <summary>SharpSvn.SvnStatusEventArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnStatusEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnStatusEventArgs.#ctor(SharpSvn.SvnStatusEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnStatusEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnStatusEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.ChangeListGet">
            <summary>设置 SvnStatusEventArgs.get_ChangeList() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.ConflictedGet">
            <summary>设置 SvnStatusEventArgs.get_Conflicted() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.DepthGet">
            <summary>设置 SvnStatusEventArgs.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.DetachBoolean">
            <summary>设置 SvnStatusEventArgs.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.FileLengthGet">
            <summary>设置 SvnStatusEventArgs.get_FileLength() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.FullPathGet">
            <summary>设置 SvnStatusEventArgs.get_FullPath() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.IsFileExternalGet">
            <summary>设置 SvnStatusEventArgs.get_IsFileExternal() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.IsRemoteUpdatedGet">
            <summary>设置 SvnStatusEventArgs.get_IsRemoteUpdated() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.LastChangeAuthorGet">
            <summary>设置 SvnStatusEventArgs.get_LastChangeAuthor() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.LastChangeRevisionGet">
            <summary>设置 SvnStatusEventArgs.get_LastChangeRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.LastChangeTimeGet">
            <summary>设置 SvnStatusEventArgs.get_LastChangeTime() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.LocalContentStatusGet">
            <summary>设置 SvnStatusEventArgs.get_LocalContentStatus() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.LocalCopiedGet">
            <summary>设置 SvnStatusEventArgs.get_LocalCopied() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.LocalLockGet">
            <summary>设置 SvnStatusEventArgs.get_LocalLock() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.LocalLockedGet">
            <summary>设置 SvnStatusEventArgs.get_LocalLocked() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.LocalNodeStatusGet">
            <summary>设置 SvnStatusEventArgs.get_LocalNodeStatus() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.LocalPropertyStatusGet">
            <summary>设置 SvnStatusEventArgs.get_LocalPropertyStatus() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.LocalTextStatusGet">
            <summary>设置 SvnStatusEventArgs.get_LocalTextStatus() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.ModifiedGet">
            <summary>设置 SvnStatusEventArgs.get_Modified() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.MovedFromGet">
            <summary>设置 SvnStatusEventArgs.get_MovedFrom() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.MovedToGet">
            <summary>设置 SvnStatusEventArgs.get_MovedTo() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.NodeKindGet">
            <summary>设置 SvnStatusEventArgs.get_NodeKind() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.PathGet">
            <summary>设置 SvnStatusEventArgs.get_Path() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.PristineContentStatusGet">
            <summary>设置 SvnStatusEventArgs.get_PristineContentStatus() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.PristinePropertyStatusGet">
            <summary>设置 SvnStatusEventArgs.get_PristinePropertyStatus() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.RemoteContentStatusGet">
            <summary>设置 SvnStatusEventArgs.get_RemoteContentStatus() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.RemoteLockGet">
            <summary>设置 SvnStatusEventArgs.get_RemoteLock() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.RemoteNodeStatusGet">
            <summary>设置 SvnStatusEventArgs.get_RemoteNodeStatus() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.RemotePropertyStatusGet">
            <summary>设置 SvnStatusEventArgs.get_RemotePropertyStatus() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.RemoteTextStatusGet">
            <summary>设置 SvnStatusEventArgs.get_RemoteTextStatus() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.RemoteUpdateCommitAuthorGet">
            <summary>设置 SvnStatusEventArgs.get_RemoteUpdateCommitAuthor() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.RemoteUpdateCommitTimeGet">
            <summary>设置 SvnStatusEventArgs.get_RemoteUpdateCommitTime() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.RemoteUpdateNodeKindGet">
            <summary>设置 SvnStatusEventArgs.get_RemoteUpdateNodeKind() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.RemoteUpdateRevisionGet">
            <summary>设置 SvnStatusEventArgs.get_RemoteUpdateRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.RepositoryIdGet">
            <summary>设置 SvnStatusEventArgs.get_RepositoryId() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.RepositoryIdValueGet">
            <summary>设置 SvnStatusEventArgs.get_RepositoryIdValue() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.RepositoryRootGet">
            <summary>设置 SvnStatusEventArgs.get_RepositoryRoot() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.RevisionGet">
            <summary>设置 SvnStatusEventArgs.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.SwitchedGet">
            <summary>设置 SvnStatusEventArgs.get_Switched() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.TreeConflictGet">
            <summary>设置 SvnStatusEventArgs.get_TreeConflict() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.UriGet">
            <summary>设置 SvnStatusEventArgs.get_Uri() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.VersionedGet">
            <summary>设置 SvnStatusEventArgs.get_Versioned() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.WedgedGet">
            <summary>设置 SvnStatusEventArgs.get_Wedged() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.WorkingCopyInfoGet">
            <summary>设置 SvnStatusEventArgs.get_WorkingCopyInfo() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnStatusEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.AllInstances.ChangeListGet">
            <summary>设置 SvnStatusEventArgs.get_ChangeList() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.AllInstances.ConflictedGet">
            <summary>设置 SvnStatusEventArgs.get_Conflicted() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.AllInstances.DepthGet">
            <summary>设置 SvnStatusEventArgs.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.AllInstances.DetachBoolean">
            <summary>设置 SvnStatusEventArgs.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.AllInstances.FileLengthGet">
            <summary>设置 SvnStatusEventArgs.get_FileLength() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.AllInstances.FullPathGet">
            <summary>设置 SvnStatusEventArgs.get_FullPath() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.AllInstances.IsFileExternalGet">
            <summary>设置 SvnStatusEventArgs.get_IsFileExternal() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.AllInstances.IsRemoteUpdatedGet">
            <summary>设置 SvnStatusEventArgs.get_IsRemoteUpdated() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.AllInstances.LastChangeAuthorGet">
            <summary>设置 SvnStatusEventArgs.get_LastChangeAuthor() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.AllInstances.LastChangeRevisionGet">
            <summary>设置 SvnStatusEventArgs.get_LastChangeRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.AllInstances.LastChangeTimeGet">
            <summary>设置 SvnStatusEventArgs.get_LastChangeTime() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.AllInstances.LocalContentStatusGet">
            <summary>设置 SvnStatusEventArgs.get_LocalContentStatus() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.AllInstances.LocalCopiedGet">
            <summary>设置 SvnStatusEventArgs.get_LocalCopied() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.AllInstances.LocalLockGet">
            <summary>设置 SvnStatusEventArgs.get_LocalLock() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.AllInstances.LocalLockedGet">
            <summary>设置 SvnStatusEventArgs.get_LocalLocked() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.AllInstances.LocalNodeStatusGet">
            <summary>设置 SvnStatusEventArgs.get_LocalNodeStatus() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.AllInstances.LocalPropertyStatusGet">
            <summary>设置 SvnStatusEventArgs.get_LocalPropertyStatus() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.AllInstances.LocalTextStatusGet">
            <summary>设置 SvnStatusEventArgs.get_LocalTextStatus() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.AllInstances.ModifiedGet">
            <summary>设置 SvnStatusEventArgs.get_Modified() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.AllInstances.MovedFromGet">
            <summary>设置 SvnStatusEventArgs.get_MovedFrom() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.AllInstances.MovedToGet">
            <summary>设置 SvnStatusEventArgs.get_MovedTo() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.AllInstances.NodeKindGet">
            <summary>设置 SvnStatusEventArgs.get_NodeKind() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.AllInstances.PathGet">
            <summary>设置 SvnStatusEventArgs.get_Path() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.AllInstances.PristineContentStatusGet">
            <summary>设置 SvnStatusEventArgs.get_PristineContentStatus() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.AllInstances.PristinePropertyStatusGet">
            <summary>设置 SvnStatusEventArgs.get_PristinePropertyStatus() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.AllInstances.RemoteContentStatusGet">
            <summary>设置 SvnStatusEventArgs.get_RemoteContentStatus() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.AllInstances.RemoteLockGet">
            <summary>设置 SvnStatusEventArgs.get_RemoteLock() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.AllInstances.RemoteNodeStatusGet">
            <summary>设置 SvnStatusEventArgs.get_RemoteNodeStatus() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.AllInstances.RemotePropertyStatusGet">
            <summary>设置 SvnStatusEventArgs.get_RemotePropertyStatus() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.AllInstances.RemoteTextStatusGet">
            <summary>设置 SvnStatusEventArgs.get_RemoteTextStatus() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.AllInstances.RemoteUpdateCommitAuthorGet">
            <summary>设置 SvnStatusEventArgs.get_RemoteUpdateCommitAuthor() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.AllInstances.RemoteUpdateCommitTimeGet">
            <summary>设置 SvnStatusEventArgs.get_RemoteUpdateCommitTime() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.AllInstances.RemoteUpdateNodeKindGet">
            <summary>设置 SvnStatusEventArgs.get_RemoteUpdateNodeKind() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.AllInstances.RemoteUpdateRevisionGet">
            <summary>设置 SvnStatusEventArgs.get_RemoteUpdateRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.AllInstances.RepositoryIdGet">
            <summary>设置 SvnStatusEventArgs.get_RepositoryId() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.AllInstances.RepositoryIdValueGet">
            <summary>设置 SvnStatusEventArgs.get_RepositoryIdValue() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.AllInstances.RepositoryRootGet">
            <summary>设置 SvnStatusEventArgs.get_RepositoryRoot() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.AllInstances.RevisionGet">
            <summary>设置 SvnStatusEventArgs.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.AllInstances.SwitchedGet">
            <summary>设置 SvnStatusEventArgs.get_Switched() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.AllInstances.TreeConflictGet">
            <summary>设置 SvnStatusEventArgs.get_TreeConflict() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.AllInstances.UriGet">
            <summary>设置 SvnStatusEventArgs.get_Uri() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.AllInstances.VersionedGet">
            <summary>设置 SvnStatusEventArgs.get_Versioned() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.AllInstances.WedgedGet">
            <summary>设置 SvnStatusEventArgs.get_Wedged() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStatusEventArgs.AllInstances.WorkingCopyInfoGet">
            <summary>设置 SvnStatusEventArgs.get_WorkingCopyInfo() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnStreamException">
            <summary>SharpSvn.SvnStreamException 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnStreamException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnStreamException.#ctor(SharpSvn.SvnStreamException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnStreamException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnStreamException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnStreamException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStreamException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStreamException.Constructor">
            <summary>设置 SvnStreamException.SvnStreamException() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStreamException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 SvnStreamException.SvnStreamException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStreamException.ConstructorString">
            <summary>设置 SvnStreamException.SvnStreamException(String message) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnStreamException.ConstructorStringException">
            <summary>设置 SvnStreamException.SvnStreamException(String message, Exception inner) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnStreamException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnSwitchArgs">
            <summary>SharpSvn.SvnSwitchArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnSwitchArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnSwitchArgs.#ctor(SharpSvn.SvnSwitchArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnSwitchArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnSwitchArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSwitchArgs.AllowObstructionsGet">
            <summary>设置 SvnSwitchArgs.get_AllowObstructions() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSwitchArgs.AllowObstructionsSetBoolean">
            <summary>设置 SvnSwitchArgs.set_AllowObstructions(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSwitchArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSwitchArgs.CommandTypeGet">
            <summary>设置 SvnSwitchArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSwitchArgs.Constructor">
            <summary>设置 SvnSwitchArgs.SvnSwitchArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSwitchArgs.DepthGet">
            <summary>设置 SvnSwitchArgs.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSwitchArgs.DepthSetSvnDepth">
            <summary>设置 SvnSwitchArgs.set_Depth(SvnDepth value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSwitchArgs.IgnoreExternalsGet">
            <summary>设置 SvnSwitchArgs.get_IgnoreExternals() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSwitchArgs.IgnoreExternalsSetBoolean">
            <summary>设置 SvnSwitchArgs.set_IgnoreExternals(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSwitchArgs.KeepDepthGet">
            <summary>设置 SvnSwitchArgs.get_KeepDepth() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSwitchArgs.KeepDepthSetBoolean">
            <summary>设置 SvnSwitchArgs.set_KeepDepth(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSwitchArgs.RevisionGet">
            <summary>设置 SvnSwitchArgs.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSwitchArgs.RevisionSetSvnRevision">
            <summary>设置 SvnSwitchArgs.set_Revision(SvnRevision value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSwitchArgs.VerifyAncestryGet">
            <summary>设置 SvnSwitchArgs.get_VerifyAncestry() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSwitchArgs.VerifyAncestrySetBoolean">
            <summary>设置 SvnSwitchArgs.set_VerifyAncestry(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnSwitchArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSwitchArgs.AllInstances.AllowObstructionsGet">
            <summary>设置 SvnSwitchArgs.get_AllowObstructions() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSwitchArgs.AllInstances.AllowObstructionsSetBoolean">
            <summary>设置 SvnSwitchArgs.set_AllowObstructions(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSwitchArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnSwitchArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSwitchArgs.AllInstances.DepthGet">
            <summary>设置 SvnSwitchArgs.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSwitchArgs.AllInstances.DepthSetSvnDepth">
            <summary>设置 SvnSwitchArgs.set_Depth(SvnDepth value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSwitchArgs.AllInstances.IgnoreExternalsGet">
            <summary>设置 SvnSwitchArgs.get_IgnoreExternals() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSwitchArgs.AllInstances.IgnoreExternalsSetBoolean">
            <summary>设置 SvnSwitchArgs.set_IgnoreExternals(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSwitchArgs.AllInstances.KeepDepthGet">
            <summary>设置 SvnSwitchArgs.get_KeepDepth() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSwitchArgs.AllInstances.KeepDepthSetBoolean">
            <summary>设置 SvnSwitchArgs.set_KeepDepth(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSwitchArgs.AllInstances.RevisionGet">
            <summary>设置 SvnSwitchArgs.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSwitchArgs.AllInstances.RevisionSetSvnRevision">
            <summary>设置 SvnSwitchArgs.set_Revision(SvnRevision value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSwitchArgs.AllInstances.VerifyAncestryGet">
            <summary>设置 SvnSwitchArgs.get_VerifyAncestry() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSwitchArgs.AllInstances.VerifyAncestrySetBoolean">
            <summary>设置 SvnSwitchArgs.set_VerifyAncestry(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnSystemException">
            <summary>SharpSvn.SvnSystemException 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnSystemException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnSystemException.#ctor(SharpSvn.SvnSystemException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnSystemException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnSystemException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnSystemException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSystemException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSystemException.Constructor">
            <summary>设置 SvnSystemException.SvnSystemException() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSystemException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 SvnSystemException.SvnSystemException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSystemException.ConstructorString">
            <summary>设置 SvnSystemException.SvnSystemException(String message) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnSystemException.ConstructorStringException">
            <summary>设置 SvnSystemException.SvnSystemException(String message, Exception inner) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnSystemException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnTarget">
            <summary>SharpSvn.SvnTarget 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnTarget.#ctor(SharpSvn.SvnTarget)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnTarget.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnTarget.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnTarget.Bind(System.IEquatable{SharpSvn.SvnTarget})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnTarget.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnTarget.ConstructorSvnRevision">
            <summary>设置 SvnTarget.SvnTarget(SvnRevision revision) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnTarget.EqualsObject">
            <summary>设置 SvnTarget.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnTarget.EqualsSvnTarget">
            <summary>设置 SvnTarget.Equals(SvnTarget other) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnTarget.FromStringString">
            <summary>设置 SvnTarget.FromString(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnTarget.FromStringStringBoolean">
            <summary>设置 SvnTarget.FromString(String value, Boolean allowOperationalRevision) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnTarget.FromUriUri">
            <summary>设置 SvnTarget.FromUri(Uri value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnTarget.GetHashCode">
            <summary>设置 SvnTarget.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnTarget.ImplicitOpISvnOriginSvnTarget">
            <summary>设置 SvnTarget.op_Implicit(ISvnOrigin origin) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnTarget.ImplicitOpStringSvnTarget">
            <summary>设置 SvnTarget.op_Implicit(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnTarget.ImplicitOpUriSvnTarget">
            <summary>设置 SvnTarget.op_Implicit(Uri value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnTarget.RevisionGet">
            <summary>设置 SvnTarget.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnTarget.ToString">
            <summary>设置 SvnTarget.ToString() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnTarget.TryParseStringBooleanSvnTargetOut">
            <summary>设置 SvnTarget.TryParse(String targetName, Boolean allowOperationalRevision, SvnTarget&amp; target) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnTarget.TryParseStringSvnTargetOut">
            <summary>设置 SvnTarget.TryParse(String targetName, SvnTarget&amp; target) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnTarget.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnTarget.AllInstances.EqualsObject">
            <summary>设置 SvnTarget.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnTarget.AllInstances.EqualsSvnTarget">
            <summary>设置 SvnTarget.Equals(SvnTarget other) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnTarget.AllInstances.GetHashCode01">
            <summary>设置 SvnTarget.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnTarget.AllInstances.RevisionGet">
            <summary>设置 SvnTarget.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnTarget.AllInstances.ToString01">
            <summary>设置 SvnTarget.ToString() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnTargetPropertyCollection">
            <summary>SharpSvn.SvnTargetPropertyCollection 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnTargetPropertyCollection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnTargetPropertyCollection.#ctor(SharpSvn.SvnTargetPropertyCollection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnTargetPropertyCollection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnTargetPropertyCollection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnTargetPropertyCollection.Bind(System.Collections.ICollection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnTargetPropertyCollection.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnTargetPropertyCollection.Bind(System.Collections.IList)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnTargetPropertyCollection.Bind(System.Collections.Generic.ICollection{SharpSvn.SvnPropertyValue})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnTargetPropertyCollection.Bind(System.Collections.Generic.IEnumerable{SharpSvn.SvnPropertyValue})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnTargetPropertyCollection.Bind(System.Collections.Generic.IList{SharpSvn.SvnPropertyValue})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnTargetPropertyCollection.Bind(System.Collections.Generic.IReadOnlyCollection{SharpSvn.SvnPropertyValue})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnTargetPropertyCollection.Bind(System.Collections.Generic.IReadOnlyList{SharpSvn.SvnPropertyValue})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnTargetPropertyCollection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnTargetPropertyCollection.Constructor">
            <summary>设置 SvnTargetPropertyCollection.SvnTargetPropertyCollection() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnTargetPropertyCollection.GetKeyForItemSvnPropertyValue">
            <summary>设置 SvnTargetPropertyCollection.GetKeyForItem(SvnPropertyValue item) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnTargetPropertyCollection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnTargetPropertyCollection.AllInstances.GetKeyForItemSvnPropertyValue">
            <summary>设置 SvnTargetPropertyCollection.GetKeyForItem(SvnPropertyValue item) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnTools">
            <summary>SharpSvn.SvnTools 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnTools.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnTools.#ctor(SharpSvn.SvnTools)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnTools.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnTools.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnTools.AppendPathSuffixUriString">
            <summary>设置 SvnTools.AppendPathSuffix(Uri uri, String pathSuffix) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnTools.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnTools.Constructor">
            <summary>设置 SvnTools.SvnTools() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnTools.FindTruePathStringStringBoolean">
            <summary>设置 SvnTools.FindTruePath(String path, String root, Boolean bestEffort) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnTools.GetFileNameUri">
            <summary>设置 SvnTools.GetFileName(Uri target) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnTools.GetFullTruePathString">
            <summary>设置 SvnTools.GetFullTruePath(String path) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnTools.GetNormalizedDirectoryNameString">
            <summary>设置 SvnTools.GetNormalizedDirectoryName(String path) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnTools.GetNormalizedFullPathString">
            <summary>设置 SvnTools.GetNormalizedFullPath(String path) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnTools.GetNormalizedUriUri">
            <summary>设置 SvnTools.GetNormalizedUri(Uri uri) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnTools.GetPathRootString">
            <summary>设置 SvnTools.GetPathRoot(String path) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnTools.GetTruePathString">
            <summary>设置 SvnTools.GetTruePath(String path) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnTools.GetTruePathStringBoolean">
            <summary>设置 SvnTools.GetTruePath(String path, Boolean bestEffort) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnTools.GetUriFromWorkingCopyString">
            <summary>设置 SvnTools.GetUriFromWorkingCopy(String path) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnTools.IsAbsolutePathString">
            <summary>设置 SvnTools.IsAbsolutePath(String path) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnTools.IsBelowManagedPathString">
            <summary>设置 SvnTools.IsBelowManagedPath(String path) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnTools.IsManagedPathString">
            <summary>设置 SvnTools.IsManagedPath(String path) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnTools.IsNormalizedFullPathString">
            <summary>设置 SvnTools.IsNormalizedFullPath(String path) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnTools.LocalPathToUriStringBoolean">
            <summary>设置 SvnTools.LocalPathToUri(String localPath, Boolean endSlash) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnTools.PathCombineStringString">
            <summary>设置 SvnTools.PathCombine(String path1, String path2) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnTools.PathToRelativeUriString">
            <summary>设置 SvnTools.PathToRelativeUri(String path) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnTools.TryFindApplicationStringStringOut">
            <summary>设置 SvnTools.TryFindApplication(String applicationName, String&amp; path) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnTools.TryGetDirentAncestorIEnumerableOfStringStringOut">
            <summary>设置 SvnTools.TryGetDirentAncestor(IEnumerable`1&lt;String&gt; uris, String&amp; ancestorDirent) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnTools.TryGetRelativePathAncestorIEnumerableOfStringStringOut">
            <summary>设置 SvnTools.TryGetRelativePathAncestor(IEnumerable`1&lt;String&gt; uris, String&amp; ancestorRelpath) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnTools.TryGetUriAncestorIEnumerableOfUriUriOut">
            <summary>设置 SvnTools.TryGetUriAncestor(IEnumerable`1&lt;Uri&gt; uris, Uri&amp; ancestorUri) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnTools.TrySplitCommandLineStringStringOutStringOut">
            <summary>设置 SvnTools.TrySplitCommandLine(String command, String&amp; application, String&amp; arguments) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnTools.TrySplitCommandLineStringSvnToolsSplitCommandExpanderStringOutStringOut">
            <summary>设置 SvnTools.TrySplitCommandLine(String command, SplitCommandExpander expander, String&amp; application, String&amp; arguments) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnTools.UriPartToPathString">
            <summary>设置 SvnTools.UriPartToPath(String uriPath) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnTools.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnUnknownCapabilityException">
            <summary>SharpSvn.SvnUnknownCapabilityException 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnUnknownCapabilityException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnUnknownCapabilityException.#ctor(SharpSvn.SvnUnknownCapabilityException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnUnknownCapabilityException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnUnknownCapabilityException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnUnknownCapabilityException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUnknownCapabilityException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUnknownCapabilityException.Constructor">
            <summary>设置 SvnUnknownCapabilityException.SvnUnknownCapabilityException() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUnknownCapabilityException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 SvnUnknownCapabilityException.SvnUnknownCapabilityException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUnknownCapabilityException.ConstructorString">
            <summary>设置 SvnUnknownCapabilityException.SvnUnknownCapabilityException(String message) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUnknownCapabilityException.ConstructorStringException">
            <summary>设置 SvnUnknownCapabilityException.SvnUnknownCapabilityException(String message, Exception inner) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnUnknownCapabilityException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnUnknownChangeListException">
            <summary>SharpSvn.SvnUnknownChangeListException 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnUnknownChangeListException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnUnknownChangeListException.#ctor(SharpSvn.SvnUnknownChangeListException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnUnknownChangeListException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnUnknownChangeListException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnUnknownChangeListException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUnknownChangeListException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUnknownChangeListException.Constructor">
            <summary>设置 SvnUnknownChangeListException.SvnUnknownChangeListException() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUnknownChangeListException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 SvnUnknownChangeListException.SvnUnknownChangeListException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUnknownChangeListException.ConstructorString">
            <summary>设置 SvnUnknownChangeListException.SvnUnknownChangeListException(String message) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUnknownChangeListException.ConstructorStringException">
            <summary>设置 SvnUnknownChangeListException.SvnUnknownChangeListException(String message, Exception inner) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnUnknownChangeListException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnUnlockArgs">
            <summary>SharpSvn.SvnUnlockArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnUnlockArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnUnlockArgs.#ctor(SharpSvn.SvnUnlockArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnUnlockArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnUnlockArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUnlockArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUnlockArgs.BreakLockGet">
            <summary>设置 SvnUnlockArgs.get_BreakLock() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUnlockArgs.BreakLockSetBoolean">
            <summary>设置 SvnUnlockArgs.set_BreakLock(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUnlockArgs.CommandTypeGet">
            <summary>设置 SvnUnlockArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUnlockArgs.Constructor">
            <summary>设置 SvnUnlockArgs.SvnUnlockArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUnlockArgs.RaiseOnNotifySvnNotifyEventArgs">
            <summary>设置 SvnUnlockArgs.RaiseOnNotify(SvnNotifyEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUnlockArgs.Reset">
            <summary>设置 SvnUnlockArgs.Reset() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUnlockArgs.UnlockResultGet">
            <summary>设置 SvnUnlockArgs.get_UnlockResult() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnUnlockArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUnlockArgs.AllInstances.BreakLockGet">
            <summary>设置 SvnUnlockArgs.get_BreakLock() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUnlockArgs.AllInstances.BreakLockSetBoolean">
            <summary>设置 SvnUnlockArgs.set_BreakLock(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUnlockArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnUnlockArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUnlockArgs.AllInstances.RaiseOnNotifySvnNotifyEventArgs">
            <summary>设置 SvnUnlockArgs.RaiseOnNotify(SvnNotifyEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUnlockArgs.AllInstances.Reset">
            <summary>设置 SvnUnlockArgs.Reset() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUnlockArgs.AllInstances.UnlockResultGet">
            <summary>设置 SvnUnlockArgs.get_UnlockResult() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnUnsupportedFeatureException">
            <summary>SharpSvn.SvnUnsupportedFeatureException 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnUnsupportedFeatureException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnUnsupportedFeatureException.#ctor(SharpSvn.SvnUnsupportedFeatureException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnUnsupportedFeatureException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnUnsupportedFeatureException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnUnsupportedFeatureException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUnsupportedFeatureException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUnsupportedFeatureException.Constructor">
            <summary>设置 SvnUnsupportedFeatureException.SvnUnsupportedFeatureException() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUnsupportedFeatureException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 SvnUnsupportedFeatureException.SvnUnsupportedFeatureException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUnsupportedFeatureException.ConstructorString">
            <summary>设置 SvnUnsupportedFeatureException.SvnUnsupportedFeatureException(String message) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUnsupportedFeatureException.ConstructorStringException">
            <summary>设置 SvnUnsupportedFeatureException.SvnUnsupportedFeatureException(String message, Exception inner) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnUnsupportedFeatureException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnUnversionedNodeException">
            <summary>SharpSvn.SvnUnversionedNodeException 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnUnversionedNodeException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnUnversionedNodeException.#ctor(SharpSvn.SvnUnversionedNodeException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnUnversionedNodeException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnUnversionedNodeException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnUnversionedNodeException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUnversionedNodeException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUnversionedNodeException.Constructor">
            <summary>设置 SvnUnversionedNodeException.SvnUnversionedNodeException() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUnversionedNodeException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 SvnUnversionedNodeException.SvnUnversionedNodeException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUnversionedNodeException.ConstructorString">
            <summary>设置 SvnUnversionedNodeException.SvnUnversionedNodeException(String message) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUnversionedNodeException.ConstructorStringException">
            <summary>设置 SvnUnversionedNodeException.SvnUnversionedNodeException(String message, Exception inner) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnUnversionedNodeException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnUpdateArgs">
            <summary>SharpSvn.SvnUpdateArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnUpdateArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnUpdateArgs.#ctor(SharpSvn.SvnUpdateArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnUpdateArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnUpdateArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUpdateArgs.AddsAsModificationsGet">
            <summary>设置 SvnUpdateArgs.get_AddsAsModifications() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUpdateArgs.AddsAsModificationsSetBoolean">
            <summary>设置 SvnUpdateArgs.set_AddsAsModifications(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUpdateArgs.AllowObstructionsGet">
            <summary>设置 SvnUpdateArgs.get_AllowObstructions() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUpdateArgs.AllowObstructionsSetBoolean">
            <summary>设置 SvnUpdateArgs.set_AllowObstructions(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUpdateArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUpdateArgs.CommandTypeGet">
            <summary>设置 SvnUpdateArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUpdateArgs.Constructor">
            <summary>设置 SvnUpdateArgs.SvnUpdateArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUpdateArgs.DepthGet">
            <summary>设置 SvnUpdateArgs.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUpdateArgs.DepthSetSvnDepth">
            <summary>设置 SvnUpdateArgs.set_Depth(SvnDepth value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUpdateArgs.IgnoreExternalsGet">
            <summary>设置 SvnUpdateArgs.get_IgnoreExternals() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUpdateArgs.IgnoreExternalsSetBoolean">
            <summary>设置 SvnUpdateArgs.set_IgnoreExternals(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUpdateArgs.KeepDepthGet">
            <summary>设置 SvnUpdateArgs.get_KeepDepth() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUpdateArgs.KeepDepthSetBoolean">
            <summary>设置 SvnUpdateArgs.set_KeepDepth(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUpdateArgs.RevisionGet">
            <summary>设置 SvnUpdateArgs.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUpdateArgs.RevisionSetSvnRevision">
            <summary>设置 SvnUpdateArgs.set_Revision(SvnRevision value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUpdateArgs.UpdateParentsGet">
            <summary>设置 SvnUpdateArgs.get_UpdateParents() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUpdateArgs.UpdateParentsSetBoolean">
            <summary>设置 SvnUpdateArgs.set_UpdateParents(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnUpdateArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUpdateArgs.AllInstances.AddsAsModificationsGet">
            <summary>设置 SvnUpdateArgs.get_AddsAsModifications() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUpdateArgs.AllInstances.AddsAsModificationsSetBoolean">
            <summary>设置 SvnUpdateArgs.set_AddsAsModifications(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUpdateArgs.AllInstances.AllowObstructionsGet">
            <summary>设置 SvnUpdateArgs.get_AllowObstructions() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUpdateArgs.AllInstances.AllowObstructionsSetBoolean">
            <summary>设置 SvnUpdateArgs.set_AllowObstructions(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUpdateArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnUpdateArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUpdateArgs.AllInstances.DepthGet">
            <summary>设置 SvnUpdateArgs.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUpdateArgs.AllInstances.DepthSetSvnDepth">
            <summary>设置 SvnUpdateArgs.set_Depth(SvnDepth value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUpdateArgs.AllInstances.IgnoreExternalsGet">
            <summary>设置 SvnUpdateArgs.get_IgnoreExternals() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUpdateArgs.AllInstances.IgnoreExternalsSetBoolean">
            <summary>设置 SvnUpdateArgs.set_IgnoreExternals(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUpdateArgs.AllInstances.KeepDepthGet">
            <summary>设置 SvnUpdateArgs.get_KeepDepth() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUpdateArgs.AllInstances.KeepDepthSetBoolean">
            <summary>设置 SvnUpdateArgs.set_KeepDepth(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUpdateArgs.AllInstances.RevisionGet">
            <summary>设置 SvnUpdateArgs.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUpdateArgs.AllInstances.RevisionSetSvnRevision">
            <summary>设置 SvnUpdateArgs.set_Revision(SvnRevision value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUpdateArgs.AllInstances.UpdateParentsGet">
            <summary>设置 SvnUpdateArgs.get_UpdateParents() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUpdateArgs.AllInstances.UpdateParentsSetBoolean">
            <summary>设置 SvnUpdateArgs.set_UpdateParents(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnUpdateResult">
            <summary>SharpSvn.SvnUpdateResult 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnUpdateResult.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnUpdateResult.#ctor(SharpSvn.SvnUpdateResult)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnUpdateResult.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnUpdateResult.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUpdateResult.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUpdateResult.ConstructorICollectionOfStringICollectionOfInt64Int64">
            <summary>设置 SvnUpdateResult.SvnUpdateResult(ICollection`1&lt;String&gt; paths, ICollection`1&lt;Int64&gt; revisions, Int64 revision) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUpdateResult.ConstructorIDictionaryOfStringSvnUpdateResultInt64">
            <summary>设置 SvnUpdateResult.SvnUpdateResult(IDictionary`2&lt;String,SvnUpdateResult&gt; resultMap, Int64 revision) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUpdateResult.ConstructorInt64">
            <summary>设置 SvnUpdateResult.SvnUpdateResult(Int64 revision) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUpdateResult.CreateSvnClientSvnClientArgsInt64">
            <summary>设置 SvnUpdateResult.Create(SvnClient client, SvnClientArgs args, Int64 revision) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUpdateResult.GetHashCode">
            <summary>设置 SvnUpdateResult.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUpdateResult.HasResultMapGet">
            <summary>设置 SvnUpdateResult.get_HasResultMap() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUpdateResult.HasRevisionGet">
            <summary>设置 SvnUpdateResult.get_HasRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUpdateResult.ResultMapGet">
            <summary>设置 SvnUpdateResult.get_ResultMap() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUpdateResult.RevisionGet">
            <summary>设置 SvnUpdateResult.get_Revision() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnUpdateResult.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUpdateResult.AllInstances.GetHashCode01">
            <summary>设置 SvnUpdateResult.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUpdateResult.AllInstances.HasResultMapGet">
            <summary>设置 SvnUpdateResult.get_HasResultMap() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUpdateResult.AllInstances.HasRevisionGet">
            <summary>设置 SvnUpdateResult.get_HasRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUpdateResult.AllInstances.ResultMapGet">
            <summary>设置 SvnUpdateResult.get_ResultMap() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUpdateResult.AllInstances.RevisionGet">
            <summary>设置 SvnUpdateResult.get_Revision() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnUpgradeArgs">
            <summary>SharpSvn.SvnUpgradeArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnUpgradeArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnUpgradeArgs.#ctor(SharpSvn.SvnUpgradeArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnUpgradeArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnUpgradeArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUpgradeArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUpgradeArgs.CommandTypeGet">
            <summary>设置 SvnUpgradeArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUpgradeArgs.Constructor">
            <summary>设置 SvnUpgradeArgs.SvnUpgradeArgs() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnUpgradeArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUpgradeArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnUpgradeArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnUpgradeRepositoryArgs">
            <summary>SharpSvn.SvnUpgradeRepositoryArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnUpgradeRepositoryArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnUpgradeRepositoryArgs.#ctor(SharpSvn.SvnUpgradeRepositoryArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnUpgradeRepositoryArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnUpgradeRepositoryArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUpgradeRepositoryArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUpgradeRepositoryArgs.CommandTypeGet">
            <summary>设置 SvnUpgradeRepositoryArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUpgradeRepositoryArgs.Constructor">
            <summary>设置 SvnUpgradeRepositoryArgs.SvnUpgradeRepositoryArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUpgradeRepositoryArgs.NonBlockingGet">
            <summary>设置 SvnUpgradeRepositoryArgs.get_NonBlocking() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUpgradeRepositoryArgs.NonBlockingSetBoolean">
            <summary>设置 SvnUpgradeRepositoryArgs.set_NonBlocking(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnUpgradeRepositoryArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUpgradeRepositoryArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnUpgradeRepositoryArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUpgradeRepositoryArgs.AllInstances.NonBlockingGet">
            <summary>设置 SvnUpgradeRepositoryArgs.get_NonBlocking() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUpgradeRepositoryArgs.AllInstances.NonBlockingSetBoolean">
            <summary>设置 SvnUpgradeRepositoryArgs.set_NonBlocking(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnUriOrigin">
            <summary>SharpSvn.SvnUriOrigin 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnUriOrigin.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnUriOrigin.#ctor(SharpSvn.SvnUriOrigin)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnUriOrigin.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnUriOrigin.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnUriOrigin.Bind(SharpSvn.ISvnOrigin)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUriOrigin.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUriOrigin.ConstructorSvnUriTargetUri">
            <summary>设置 SvnUriOrigin.SvnUriOrigin(SvnUriTarget target, Uri repositoryRoot) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUriOrigin.ConstructorSvnUriTargetUriSvnNodeKind">
            <summary>设置 SvnUriOrigin.SvnUriOrigin(SvnUriTarget target, Uri repositoryRoot, SvnNodeKind nodeKind) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUriOrigin.NodeKindGet">
            <summary>设置 SvnUriOrigin.get_NodeKind() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUriOrigin.RawTargetGet">
            <summary>设置 SvnUriOrigin.get_RawTarget() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUriOrigin.RepositoryRootGet">
            <summary>设置 SvnUriOrigin.get_RepositoryRoot() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUriOrigin.TargetGet">
            <summary>设置 SvnUriOrigin.get_Target() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUriOrigin.UriGet">
            <summary>设置 SvnUriOrigin.get_Uri() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnUriOrigin.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUriOrigin.AllInstances.NodeKindGet">
            <summary>设置 SvnUriOrigin.get_NodeKind() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUriOrigin.AllInstances.RawTargetGet">
            <summary>设置 SvnUriOrigin.get_RawTarget() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUriOrigin.AllInstances.RepositoryRootGet">
            <summary>设置 SvnUriOrigin.get_RepositoryRoot() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUriOrigin.AllInstances.TargetGet">
            <summary>设置 SvnUriOrigin.get_Target() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUriOrigin.AllInstances.UriGet">
            <summary>设置 SvnUriOrigin.get_Uri() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnUriTarget">
            <summary>SharpSvn.SvnUriTarget 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnUriTarget.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnUriTarget.#ctor(SharpSvn.SvnUriTarget)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnUriTarget.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnUriTarget.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnUriTarget.Bind(System.IEquatable{SharpSvn.SvnTarget})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUriTarget.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUriTarget.ConstructorString">
            <summary>设置 SvnUriTarget.SvnUriTarget(String uriString) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUriTarget.ConstructorStringSvnRevision">
            <summary>设置 SvnUriTarget.SvnUriTarget(String uriString, SvnRevision revision) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUriTarget.ConstructorUri">
            <summary>设置 SvnUriTarget.SvnUriTarget(Uri uri) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUriTarget.ConstructorUriDateTime">
            <summary>设置 SvnUriTarget.SvnUriTarget(Uri uri, DateTime date) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUriTarget.ConstructorUriInt64">
            <summary>设置 SvnUriTarget.SvnUriTarget(Uri uri, Int64 revision) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUriTarget.ConstructorUriSvnRevision">
            <summary>设置 SvnUriTarget.SvnUriTarget(Uri uri, SvnRevision revision) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUriTarget.ExplicitOpStringSvnUriTarget">
            <summary>设置 SvnUriTarget.op_Explicit(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUriTarget.FileNameGet">
            <summary>设置 SvnUriTarget.get_FileName() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUriTarget.FromStringString">
            <summary>设置 SvnUriTarget.FromString(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUriTarget.FromStringStringBoolean">
            <summary>设置 SvnUriTarget.FromString(String value, Boolean allowOperationalRevision) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUriTarget.FromUriUri">
            <summary>设置 SvnUriTarget.FromUri(Uri value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUriTarget.GetSvnRevisionSvnRevisionSvnRevision">
            <summary>设置 SvnUriTarget.GetSvnRevision(SvnRevision fileNoneValue, SvnRevision uriNoneValue) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUriTarget.ImplicitOpISvnOriginSvnUriTarget">
            <summary>设置 SvnUriTarget.op_Implicit(ISvnOrigin origin) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUriTarget.ImplicitOpUriSvnUriTarget">
            <summary>设置 SvnUriTarget.op_Implicit(Uri value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUriTarget.MapIEnumerableOfUri">
            <summary>设置 SvnUriTarget.Map(IEnumerable`1&lt;Uri&gt; uris) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUriTarget.TargetNameGet">
            <summary>设置 SvnUriTarget.get_TargetName() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUriTarget.TryParseStringBooleanSvnUriTargetOut">
            <summary>设置 SvnUriTarget.TryParse(String path, Boolean allowOperationalRevision, SvnUriTarget&amp; pegUri) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUriTarget.TryParseStringSvnUriTargetOut">
            <summary>设置 SvnUriTarget.TryParse(String path, SvnUriTarget&amp; pegUri) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUriTarget.UriGet">
            <summary>设置 SvnUriTarget.get_Uri() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUriTarget.VerifyBelowRootUri">
            <summary>设置 SvnUriTarget.VerifyBelowRoot(Uri repositoryRoot) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnUriTarget.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUriTarget.AllInstances.FileNameGet">
            <summary>设置 SvnUriTarget.get_FileName() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUriTarget.AllInstances.GetSvnRevisionSvnRevisionSvnRevision">
            <summary>设置 SvnUriTarget.GetSvnRevision(SvnRevision fileNoneValue, SvnRevision uriNoneValue) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUriTarget.AllInstances.TargetNameGet">
            <summary>设置 SvnUriTarget.get_TargetName() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUriTarget.AllInstances.UriGet">
            <summary>设置 SvnUriTarget.get_Uri() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnUriTarget.AllInstances.VerifyBelowRootUri">
            <summary>设置 SvnUriTarget.VerifyBelowRoot(Uri repositoryRoot) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnVerifyRepositoryArgs">
            <summary>SharpSvn.SvnVerifyRepositoryArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnVerifyRepositoryArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnVerifyRepositoryArgs.#ctor(SharpSvn.SvnVerifyRepositoryArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnVerifyRepositoryArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnVerifyRepositoryArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnVerifyRepositoryArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnVerifyRepositoryArgs.CommandTypeGet">
            <summary>设置 SvnVerifyRepositoryArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnVerifyRepositoryArgs.Constructor">
            <summary>设置 SvnVerifyRepositoryArgs.SvnVerifyRepositoryArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnVerifyRepositoryArgs.EndRevisionGet">
            <summary>设置 SvnVerifyRepositoryArgs.get_EndRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnVerifyRepositoryArgs.EndRevisionSetInt64">
            <summary>设置 SvnVerifyRepositoryArgs.set_EndRevision(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnVerifyRepositoryArgs.StartRevisionGet">
            <summary>设置 SvnVerifyRepositoryArgs.get_StartRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnVerifyRepositoryArgs.StartRevisionSetInt64">
            <summary>设置 SvnVerifyRepositoryArgs.set_StartRevision(Int64 value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnVerifyRepositoryArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnVerifyRepositoryArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnVerifyRepositoryArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnVerifyRepositoryArgs.AllInstances.EndRevisionGet">
            <summary>设置 SvnVerifyRepositoryArgs.get_EndRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnVerifyRepositoryArgs.AllInstances.EndRevisionSetInt64">
            <summary>设置 SvnVerifyRepositoryArgs.set_EndRevision(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnVerifyRepositoryArgs.AllInstances.StartRevisionGet">
            <summary>设置 SvnVerifyRepositoryArgs.get_StartRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnVerifyRepositoryArgs.AllInstances.StartRevisionSetInt64">
            <summary>设置 SvnVerifyRepositoryArgs.set_StartRevision(Int64 value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnWorkingCopyClient">
            <summary>SharpSvn.SvnWorkingCopyClient 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnWorkingCopyClient.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnWorkingCopyClient.#ctor(SharpSvn.SvnWorkingCopyClient)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnWorkingCopyClient.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnWorkingCopyClient.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnWorkingCopyClient.Bind(System.ComponentModel.IComponent)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnWorkingCopyClient.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.CancelAddEventHandlerOfSvnCancelEventArgs">
            <summary>设置 SvnWorkingCopyClient.add_Cancel(EventHandler`1&lt;SvnCancelEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.CancelRaiseObjectSvnCancelEventArgs">
            <summary>设置 SvnWorkingCopyClient.raise_Cancel(Object sender, SvnCancelEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.CancelRemoveEventHandlerOfSvnCancelEventArgs">
            <summary>设置 SvnWorkingCopyClient.remove_Cancel(EventHandler`1&lt;SvnCancelEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.Constructor">
            <summary>设置 SvnWorkingCopyClient.SvnWorkingCopyClient() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.CopyStringString">
            <summary>设置 SvnWorkingCopyClient.Copy(String sourcePath, String toPath) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.CopyStringStringSvnWorkingCopyCopyArgs">
            <summary>设置 SvnWorkingCopyClient.Copy(String sourcePath, String toPath, SvnWorkingCopyCopyArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.DisposeBoolean">
            <summary>设置 SvnWorkingCopyClient.Dispose(Boolean ) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.GetEntriesStringCollectionOfSvnWorkingCopyEntryEventArgsOut">
            <summary>设置 SvnWorkingCopyClient.GetEntries(String directory, Collection`1&lt;SvnWorkingCopyEntryEventArgs&gt;&amp; list) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.GetEntriesStringSvnWorkingCopyEntriesArgsCollectionOfSvnWorkingCopyEntryEventArgsOut">
            <summary>设置 SvnWorkingCopyClient.GetEntries(String directory, SvnWorkingCopyEntriesArgs args, Collection`1&lt;SvnWorkingCopyEntryEventArgs&gt;&amp; list) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.GetStateStringSvnWorkingCopyStateArgsSvnWorkingCopyStateOut">
            <summary>设置 SvnWorkingCopyClient.GetState(String targetPath, SvnWorkingCopyStateArgs args, SvnWorkingCopyState&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.GetStateStringSvnWorkingCopyStateOut">
            <summary>设置 SvnWorkingCopyClient.GetState(String targetPath, SvnWorkingCopyState&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.GetVersionStringSvnGetWorkingCopyVersionArgsSvnWorkingCopyVersionOut">
            <summary>设置 SvnWorkingCopyClient.GetVersion(String targetPath, SvnGetWorkingCopyVersionArgs args, SvnWorkingCopyVersion&amp; version) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.GetVersionStringSvnWorkingCopyVersionOut">
            <summary>设置 SvnWorkingCopyClient.GetVersion(String targetPath, SvnWorkingCopyVersion&amp; version) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.HandleClientCancelSvnCancelEventArgs">
            <summary>设置 SvnWorkingCopyClient.HandleClientCancel(SvnCancelEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.HandleClientErrorSvnErrorEventArgs">
            <summary>设置 SvnWorkingCopyClient.HandleClientError(SvnErrorEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.HandleClientNotifySvnNotifyEventArgs">
            <summary>设置 SvnWorkingCopyClient.HandleClientNotify(SvnNotifyEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.HandleProcessingSvnProcessingEventArgs">
            <summary>设置 SvnWorkingCopyClient.HandleProcessing(SvnProcessingEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.Initialize">
            <summary>设置 SvnWorkingCopyClient.Initialize() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.InstallConflictStringSvnUriOriginSvnUriOriginSvnWorkingCopyInstallConflictArgs">
            <summary>设置 SvnWorkingCopyClient.InstallConflict(String targetPath, SvnUriOrigin leftSource, SvnUriOrigin rightSource, SvnWorkingCopyInstallConflictArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.ListEntriesStringEventHandlerOfSvnWorkingCopyEntryEventArgs">
            <summary>设置 SvnWorkingCopyClient.ListEntries(String directory, EventHandler`1&lt;SvnWorkingCopyEntryEventArgs&gt; entryHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.ListEntriesStringSvnWorkingCopyEntriesArgsEventHandlerOfSvnWorkingCopyEntryEventArgs">
            <summary>设置 SvnWorkingCopyClient.ListEntries(String directory, SvnWorkingCopyEntriesArgs args, EventHandler`1&lt;SvnWorkingCopyEntryEventArgs&gt; entryHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.MoveStringString">
            <summary>设置 SvnWorkingCopyClient.Move(String sourcePath, String toPath) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.MoveStringStringSvnWorkingCopyMoveArgs">
            <summary>设置 SvnWorkingCopyClient.Move(String sourcePath, String toPath, SvnWorkingCopyMoveArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.NotifyAddEventHandlerOfSvnNotifyEventArgs">
            <summary>设置 SvnWorkingCopyClient.add_Notify(EventHandler`1&lt;SvnNotifyEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.NotifyRaiseObjectSvnNotifyEventArgs">
            <summary>设置 SvnWorkingCopyClient.raise_Notify(Object sender, SvnNotifyEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.NotifyRemoveEventHandlerOfSvnNotifyEventArgs">
            <summary>设置 SvnWorkingCopyClient.remove_Notify(EventHandler`1&lt;SvnNotifyEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnWorkingCopyClient.OnCancel(SvnCancelEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnWorkingCopyClient.OnNotify(SvnNotifyEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.OnProcessingSvnProcessingEventArgs">
            <summary>设置 SvnWorkingCopyClient.OnProcessing(SvnProcessingEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnWorkingCopyClient.OnSvnError(SvnErrorEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.ProcessingAddEventHandlerOfSvnProcessingEventArgs">
            <summary>设置 SvnWorkingCopyClient.add_Processing(EventHandler`1&lt;SvnProcessingEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.ProcessingRaiseObjectSvnProcessingEventArgs">
            <summary>设置 SvnWorkingCopyClient.raise_Processing(Object sender, SvnProcessingEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.ProcessingRemoveEventHandlerOfSvnProcessingEventArgs">
            <summary>设置 SvnWorkingCopyClient.remove_Processing(EventHandler`1&lt;SvnProcessingEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.RestoreString">
            <summary>设置 SvnWorkingCopyClient.Restore(String path) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.RestoreStringSvnWorkingCopyRestoreArgs">
            <summary>设置 SvnWorkingCopyClient.Restore(String path, SvnWorkingCopyRestoreArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.SvnErrorAddEventHandlerOfSvnErrorEventArgs">
            <summary>设置 SvnWorkingCopyClient.add_SvnError(EventHandler`1&lt;SvnErrorEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.SvnErrorRaiseObjectSvnErrorEventArgs">
            <summary>设置 SvnWorkingCopyClient.raise_SvnError(Object sender, SvnErrorEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.SvnErrorRemoveEventHandlerOfSvnErrorEventArgs">
            <summary>设置 SvnWorkingCopyClient.remove_SvnError(EventHandler`1&lt;SvnErrorEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient._SvnWorkingCopyClient">
            <summary>设置 SvnWorkingCopyClient.~SvnWorkingCopyClient() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnWorkingCopyClient.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.AllInstances.CancelAddEventHandlerOfSvnCancelEventArgs">
            <summary>设置 SvnWorkingCopyClient.add_Cancel(EventHandler`1&lt;SvnCancelEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.AllInstances.CancelRaiseObjectSvnCancelEventArgs">
            <summary>设置 SvnWorkingCopyClient.raise_Cancel(Object sender, SvnCancelEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.AllInstances.CancelRemoveEventHandlerOfSvnCancelEventArgs">
            <summary>设置 SvnWorkingCopyClient.remove_Cancel(EventHandler`1&lt;SvnCancelEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.AllInstances.CopyStringString">
            <summary>设置 SvnWorkingCopyClient.Copy(String sourcePath, String toPath) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.AllInstances.CopyStringStringSvnWorkingCopyCopyArgs">
            <summary>设置 SvnWorkingCopyClient.Copy(String sourcePath, String toPath, SvnWorkingCopyCopyArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.AllInstances.DisposeBoolean">
            <summary>设置 SvnWorkingCopyClient.Dispose(Boolean ) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.AllInstances.GetEntriesStringCollectionOfSvnWorkingCopyEntryEventArgsOut">
            <summary>设置 SvnWorkingCopyClient.GetEntries(String directory, Collection`1&lt;SvnWorkingCopyEntryEventArgs&gt;&amp; list) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.AllInstances.GetEntriesStringSvnWorkingCopyEntriesArgsCollectionOfSvnWorkingCopyEntryEventArgsOut">
            <summary>设置 SvnWorkingCopyClient.GetEntries(String directory, SvnWorkingCopyEntriesArgs args, Collection`1&lt;SvnWorkingCopyEntryEventArgs&gt;&amp; list) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.AllInstances.GetStateStringSvnWorkingCopyStateArgsSvnWorkingCopyStateOut">
            <summary>设置 SvnWorkingCopyClient.GetState(String targetPath, SvnWorkingCopyStateArgs args, SvnWorkingCopyState&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.AllInstances.GetStateStringSvnWorkingCopyStateOut">
            <summary>设置 SvnWorkingCopyClient.GetState(String targetPath, SvnWorkingCopyState&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.AllInstances.GetVersionStringSvnGetWorkingCopyVersionArgsSvnWorkingCopyVersionOut">
            <summary>设置 SvnWorkingCopyClient.GetVersion(String targetPath, SvnGetWorkingCopyVersionArgs args, SvnWorkingCopyVersion&amp; version) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.AllInstances.GetVersionStringSvnWorkingCopyVersionOut">
            <summary>设置 SvnWorkingCopyClient.GetVersion(String targetPath, SvnWorkingCopyVersion&amp; version) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.AllInstances.HandleClientCancelSvnCancelEventArgs">
            <summary>设置 SvnWorkingCopyClient.HandleClientCancel(SvnCancelEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.AllInstances.HandleClientErrorSvnErrorEventArgs">
            <summary>设置 SvnWorkingCopyClient.HandleClientError(SvnErrorEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.AllInstances.HandleClientNotifySvnNotifyEventArgs">
            <summary>设置 SvnWorkingCopyClient.HandleClientNotify(SvnNotifyEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.AllInstances.HandleProcessingSvnProcessingEventArgs">
            <summary>设置 SvnWorkingCopyClient.HandleProcessing(SvnProcessingEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.AllInstances.Initialize">
            <summary>设置 SvnWorkingCopyClient.Initialize() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.AllInstances.InstallConflictStringSvnUriOriginSvnUriOriginSvnWorkingCopyInstallConflictArgs">
            <summary>设置 SvnWorkingCopyClient.InstallConflict(String targetPath, SvnUriOrigin leftSource, SvnUriOrigin rightSource, SvnWorkingCopyInstallConflictArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.AllInstances.ListEntriesStringEventHandlerOfSvnWorkingCopyEntryEventArgs">
            <summary>设置 SvnWorkingCopyClient.ListEntries(String directory, EventHandler`1&lt;SvnWorkingCopyEntryEventArgs&gt; entryHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.AllInstances.ListEntriesStringSvnWorkingCopyEntriesArgsEventHandlerOfSvnWorkingCopyEntryEventArgs">
            <summary>设置 SvnWorkingCopyClient.ListEntries(String directory, SvnWorkingCopyEntriesArgs args, EventHandler`1&lt;SvnWorkingCopyEntryEventArgs&gt; entryHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.AllInstances.MoveStringString">
            <summary>设置 SvnWorkingCopyClient.Move(String sourcePath, String toPath) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.AllInstances.MoveStringStringSvnWorkingCopyMoveArgs">
            <summary>设置 SvnWorkingCopyClient.Move(String sourcePath, String toPath, SvnWorkingCopyMoveArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.AllInstances.NotifyAddEventHandlerOfSvnNotifyEventArgs">
            <summary>设置 SvnWorkingCopyClient.add_Notify(EventHandler`1&lt;SvnNotifyEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.AllInstances.NotifyRaiseObjectSvnNotifyEventArgs">
            <summary>设置 SvnWorkingCopyClient.raise_Notify(Object sender, SvnNotifyEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.AllInstances.NotifyRemoveEventHandlerOfSvnNotifyEventArgs">
            <summary>设置 SvnWorkingCopyClient.remove_Notify(EventHandler`1&lt;SvnNotifyEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.AllInstances.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnWorkingCopyClient.OnCancel(SvnCancelEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.AllInstances.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnWorkingCopyClient.OnNotify(SvnNotifyEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.AllInstances.OnProcessingSvnProcessingEventArgs">
            <summary>设置 SvnWorkingCopyClient.OnProcessing(SvnProcessingEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.AllInstances.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnWorkingCopyClient.OnSvnError(SvnErrorEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.AllInstances.ProcessingAddEventHandlerOfSvnProcessingEventArgs">
            <summary>设置 SvnWorkingCopyClient.add_Processing(EventHandler`1&lt;SvnProcessingEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.AllInstances.ProcessingRaiseObjectSvnProcessingEventArgs">
            <summary>设置 SvnWorkingCopyClient.raise_Processing(Object sender, SvnProcessingEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.AllInstances.ProcessingRemoveEventHandlerOfSvnProcessingEventArgs">
            <summary>设置 SvnWorkingCopyClient.remove_Processing(EventHandler`1&lt;SvnProcessingEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.AllInstances.RestoreString">
            <summary>设置 SvnWorkingCopyClient.Restore(String path) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.AllInstances.RestoreStringSvnWorkingCopyRestoreArgs">
            <summary>设置 SvnWorkingCopyClient.Restore(String path, SvnWorkingCopyRestoreArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.AllInstances.SvnErrorAddEventHandlerOfSvnErrorEventArgs">
            <summary>设置 SvnWorkingCopyClient.add_SvnError(EventHandler`1&lt;SvnErrorEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.AllInstances.SvnErrorRaiseObjectSvnErrorEventArgs">
            <summary>设置 SvnWorkingCopyClient.raise_SvnError(Object sender, SvnErrorEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.AllInstances.SvnErrorRemoveEventHandlerOfSvnErrorEventArgs">
            <summary>设置 SvnWorkingCopyClient.remove_SvnError(EventHandler`1&lt;SvnErrorEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyClient.AllInstances._SvnWorkingCopyClient">
            <summary>设置 SvnWorkingCopyClient.~SvnWorkingCopyClient() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnWorkingCopyCopyArgs">
            <summary>SharpSvn.SvnWorkingCopyCopyArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnWorkingCopyCopyArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnWorkingCopyCopyArgs.#ctor(SharpSvn.SvnWorkingCopyCopyArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnWorkingCopyCopyArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnWorkingCopyCopyArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyCopyArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyCopyArgs.CommandTypeGet">
            <summary>设置 SvnWorkingCopyCopyArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyCopyArgs.Constructor">
            <summary>设置 SvnWorkingCopyCopyArgs.SvnWorkingCopyCopyArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyCopyArgs.MetaDataOnlyGet">
            <summary>设置 SvnWorkingCopyCopyArgs.get_MetaDataOnly() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyCopyArgs.MetaDataOnlySetBoolean">
            <summary>设置 SvnWorkingCopyCopyArgs.set_MetaDataOnly(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnWorkingCopyCopyArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyCopyArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnWorkingCopyCopyArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyCopyArgs.AllInstances.MetaDataOnlyGet">
            <summary>设置 SvnWorkingCopyCopyArgs.get_MetaDataOnly() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyCopyArgs.AllInstances.MetaDataOnlySetBoolean">
            <summary>设置 SvnWorkingCopyCopyArgs.set_MetaDataOnly(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnWorkingCopyEntriesArgs">
            <summary>SharpSvn.SvnWorkingCopyEntriesArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnWorkingCopyEntriesArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnWorkingCopyEntriesArgs.#ctor(SharpSvn.SvnWorkingCopyEntriesArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnWorkingCopyEntriesArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnWorkingCopyEntriesArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntriesArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntriesArgs.CommandTypeGet">
            <summary>设置 SvnWorkingCopyEntriesArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntriesArgs.Constructor">
            <summary>设置 SvnWorkingCopyEntriesArgs.SvnWorkingCopyEntriesArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntriesArgs.DepthGet">
            <summary>设置 SvnWorkingCopyEntriesArgs.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntriesArgs.DepthSetSvnDepth">
            <summary>设置 SvnWorkingCopyEntriesArgs.set_Depth(SvnDepth value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntriesArgs.EntryAddEventHandlerOfSvnWorkingCopyEntryEventArgs">
            <summary>设置 SvnWorkingCopyEntriesArgs.add_Entry(EventHandler`1&lt;SvnWorkingCopyEntryEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntriesArgs.EntryRaiseObjectSvnWorkingCopyEntryEventArgs">
            <summary>设置 SvnWorkingCopyEntriesArgs.raise_Entry(Object sender, SvnWorkingCopyEntryEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntriesArgs.EntryRemoveEventHandlerOfSvnWorkingCopyEntryEventArgs">
            <summary>设置 SvnWorkingCopyEntriesArgs.remove_Entry(EventHandler`1&lt;SvnWorkingCopyEntryEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntriesArgs.OnEntrySvnWorkingCopyEntryEventArgs">
            <summary>设置 SvnWorkingCopyEntriesArgs.OnEntry(SvnWorkingCopyEntryEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntriesArgs.RetrieveHiddenGet">
            <summary>设置 SvnWorkingCopyEntriesArgs.get_RetrieveHidden() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntriesArgs.RetrieveHiddenSetBoolean">
            <summary>设置 SvnWorkingCopyEntriesArgs.set_RetrieveHidden(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnWorkingCopyEntriesArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntriesArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnWorkingCopyEntriesArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntriesArgs.AllInstances.DepthGet">
            <summary>设置 SvnWorkingCopyEntriesArgs.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntriesArgs.AllInstances.DepthSetSvnDepth">
            <summary>设置 SvnWorkingCopyEntriesArgs.set_Depth(SvnDepth value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntriesArgs.AllInstances.EntryAddEventHandlerOfSvnWorkingCopyEntryEventArgs">
            <summary>设置 SvnWorkingCopyEntriesArgs.add_Entry(EventHandler`1&lt;SvnWorkingCopyEntryEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntriesArgs.AllInstances.EntryRaiseObjectSvnWorkingCopyEntryEventArgs">
            <summary>设置 SvnWorkingCopyEntriesArgs.raise_Entry(Object sender, SvnWorkingCopyEntryEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntriesArgs.AllInstances.EntryRemoveEventHandlerOfSvnWorkingCopyEntryEventArgs">
            <summary>设置 SvnWorkingCopyEntriesArgs.remove_Entry(EventHandler`1&lt;SvnWorkingCopyEntryEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntriesArgs.AllInstances.OnEntrySvnWorkingCopyEntryEventArgs">
            <summary>设置 SvnWorkingCopyEntriesArgs.OnEntry(SvnWorkingCopyEntryEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntriesArgs.AllInstances.RetrieveHiddenGet">
            <summary>设置 SvnWorkingCopyEntriesArgs.get_RetrieveHidden() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntriesArgs.AllInstances.RetrieveHiddenSetBoolean">
            <summary>设置 SvnWorkingCopyEntriesArgs.set_RetrieveHidden(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs">
            <summary>SharpSvn.SvnWorkingCopyEntryEventArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.#ctor(SharpSvn.SvnWorkingCopyEntryEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.AbsentGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_Absent() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.AvailablePropertiesGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_AvailableProperties() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.CacheablePropertiesGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_CacheableProperties() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.ChangeListGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_ChangeList() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.ChecksumGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_Checksum() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.ConflictNewFileGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_ConflictNewFile() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.ConflictOldFileGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_ConflictOldFile() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.ConflictWorkFileGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_ConflictWorkFile() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.ContentChangeTimeGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_ContentChangeTime() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.CopiedFromGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_CopiedFrom() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.CopiedFromRevisionGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_CopiedFromRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.DepthGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.DetachBoolean">
            <summary>设置 SvnWorkingCopyEntryEventArgs.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.FullPathGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_FullPath() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.HasPropertiesGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_HasProperties() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.HasPropertyChangesGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_HasPropertyChanges() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.IncompleteGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_Incomplete() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.IsCopiedGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_IsCopied() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.IsDeletedGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_IsDeleted() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.KeepLocalGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_KeepLocal() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.LastChangeAuthorGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_LastChangeAuthor() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.LastChangeRevisionGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_LastChangeRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.LastChangeTimeGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_LastChangeTime() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.LockCommentGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_LockComment() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.LockOwnerGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_LockOwner() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.LockTimeGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_LockTime() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.LockTokenGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_LockToken() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.NameGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_Name() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.NodeKindGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_NodeKind() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.PathGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_Path() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.PropertyChangeTimeGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_PropertyChangeTime() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.PropertyRejectFileGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_PropertyRejectFile() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.RepositoryIdGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_RepositoryId() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.RepositoryIdValueGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_RepositoryIdValue() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.RepositoryUriGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_RepositoryUri() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.RevisionGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.ScheduleGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_Schedule() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.UriGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_Uri() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.WorkingCopySizeGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_WorkingCopySize() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.AllInstances.AbsentGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_Absent() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.AllInstances.AvailablePropertiesGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_AvailableProperties() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.AllInstances.CacheablePropertiesGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_CacheableProperties() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.AllInstances.ChangeListGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_ChangeList() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.AllInstances.ChecksumGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_Checksum() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.AllInstances.ConflictNewFileGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_ConflictNewFile() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.AllInstances.ConflictOldFileGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_ConflictOldFile() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.AllInstances.ConflictWorkFileGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_ConflictWorkFile() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.AllInstances.ContentChangeTimeGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_ContentChangeTime() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.AllInstances.CopiedFromGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_CopiedFrom() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.AllInstances.CopiedFromRevisionGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_CopiedFromRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.AllInstances.DepthGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.AllInstances.DetachBoolean">
            <summary>设置 SvnWorkingCopyEntryEventArgs.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.AllInstances.FullPathGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_FullPath() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.AllInstances.HasPropertiesGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_HasProperties() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.AllInstances.HasPropertyChangesGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_HasPropertyChanges() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.AllInstances.IncompleteGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_Incomplete() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.AllInstances.IsCopiedGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_IsCopied() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.AllInstances.IsDeletedGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_IsDeleted() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.AllInstances.KeepLocalGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_KeepLocal() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.AllInstances.LastChangeAuthorGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_LastChangeAuthor() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.AllInstances.LastChangeRevisionGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_LastChangeRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.AllInstances.LastChangeTimeGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_LastChangeTime() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.AllInstances.LockCommentGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_LockComment() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.AllInstances.LockOwnerGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_LockOwner() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.AllInstances.LockTimeGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_LockTime() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.AllInstances.LockTokenGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_LockToken() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.AllInstances.NameGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_Name() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.AllInstances.NodeKindGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_NodeKind() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.AllInstances.PathGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_Path() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.AllInstances.PropertyChangeTimeGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_PropertyChangeTime() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.AllInstances.PropertyRejectFileGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_PropertyRejectFile() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.AllInstances.RepositoryIdGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_RepositoryId() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.AllInstances.RepositoryIdValueGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_RepositoryIdValue() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.AllInstances.RepositoryUriGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_RepositoryUri() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.AllInstances.RevisionGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.AllInstances.ScheduleGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_Schedule() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.AllInstances.UriGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_Uri() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyEntryEventArgs.AllInstances.WorkingCopySizeGet">
            <summary>设置 SvnWorkingCopyEntryEventArgs.get_WorkingCopySize() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnWorkingCopyException">
            <summary>SharpSvn.SvnWorkingCopyException 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnWorkingCopyException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnWorkingCopyException.#ctor(SharpSvn.SvnWorkingCopyException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnWorkingCopyException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnWorkingCopyException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnWorkingCopyException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyException.Constructor">
            <summary>设置 SvnWorkingCopyException.SvnWorkingCopyException() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 SvnWorkingCopyException.SvnWorkingCopyException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyException.ConstructorString">
            <summary>设置 SvnWorkingCopyException.SvnWorkingCopyException(String message) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyException.ConstructorStringException">
            <summary>设置 SvnWorkingCopyException.SvnWorkingCopyException(String message, Exception inner) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnWorkingCopyException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnWorkingCopyInfo">
            <summary>SharpSvn.SvnWorkingCopyInfo 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.#ctor(SharpSvn.SvnWorkingCopyInfo)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.ChangeListGet">
            <summary>设置 SvnWorkingCopyInfo.get_ChangeList() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.ChecksumGet">
            <summary>设置 SvnWorkingCopyInfo.get_Checksum() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.ConflictNewFileGet">
            <summary>设置 SvnWorkingCopyInfo.get_ConflictNewFile() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.ConflictOldFileGet">
            <summary>设置 SvnWorkingCopyInfo.get_ConflictOldFile() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.ConflictWorkFileGet">
            <summary>设置 SvnWorkingCopyInfo.get_ConflictWorkFile() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.ContentChangeTimeGet">
            <summary>设置 SvnWorkingCopyInfo.get_ContentChangeTime() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.CopiedFromGet">
            <summary>设置 SvnWorkingCopyInfo.get_CopiedFrom() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.CopiedFromRevisionGet">
            <summary>设置 SvnWorkingCopyInfo.get_CopiedFromRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.DepthGet">
            <summary>设置 SvnWorkingCopyInfo.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.Detach">
            <summary>设置 SvnWorkingCopyInfo.Detach() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.DetachBoolean">
            <summary>设置 SvnWorkingCopyInfo.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.Ensure">
            <summary>设置 SvnWorkingCopyInfo.Ensure() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.FileExternalOperationalRevisionGet">
            <summary>设置 SvnWorkingCopyInfo.get_FileExternalOperationalRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.FileExternalPathGet">
            <summary>设置 SvnWorkingCopyInfo.get_FileExternalPath() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.FileExternalRevisionGet">
            <summary>设置 SvnWorkingCopyInfo.get_FileExternalRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.GetHashCode">
            <summary>设置 SvnWorkingCopyInfo.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.HasPropertiesGet">
            <summary>设置 SvnWorkingCopyInfo.get_HasProperties() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.HasPropertyChangesGet">
            <summary>设置 SvnWorkingCopyInfo.get_HasPropertyChanges() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.IsAbsentGet">
            <summary>设置 SvnWorkingCopyInfo.get_IsAbsent() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.IsCopyGet">
            <summary>设置 SvnWorkingCopyInfo.get_IsCopy() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.IsDeletedGet">
            <summary>设置 SvnWorkingCopyInfo.get_IsDeleted() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.IsIncompleteGet">
            <summary>设置 SvnWorkingCopyInfo.get_IsIncomplete() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.KeepLocalGet">
            <summary>设置 SvnWorkingCopyInfo.get_KeepLocal() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.LastChangeAuthorGet">
            <summary>设置 SvnWorkingCopyInfo.get_LastChangeAuthor() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.LastChangeRevisionGet">
            <summary>设置 SvnWorkingCopyInfo.get_LastChangeRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.LastChangeTimeGet">
            <summary>设置 SvnWorkingCopyInfo.get_LastChangeTime() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.LockCommentGet">
            <summary>设置 SvnWorkingCopyInfo.get_LockComment() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.LockOwnerGet">
            <summary>设置 SvnWorkingCopyInfo.get_LockOwner() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.LockTimeGet">
            <summary>设置 SvnWorkingCopyInfo.get_LockTime() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.LockTokenGet">
            <summary>设置 SvnWorkingCopyInfo.get_LockToken() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.NameGet">
            <summary>设置 SvnWorkingCopyInfo.get_Name() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.NodeKindGet">
            <summary>设置 SvnWorkingCopyInfo.get_NodeKind() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.PropertyChangeTimeGet">
            <summary>设置 SvnWorkingCopyInfo.get_PropertyChangeTime() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.PropertyRejectFileGet">
            <summary>设置 SvnWorkingCopyInfo.get_PropertyRejectFile() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.RepositoryIdGet">
            <summary>设置 SvnWorkingCopyInfo.get_RepositoryId() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.RepositoryIdValueGet">
            <summary>设置 SvnWorkingCopyInfo.get_RepositoryIdValue() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.RepositoryUriGet">
            <summary>设置 SvnWorkingCopyInfo.get_RepositoryUri() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.RevisionGet">
            <summary>设置 SvnWorkingCopyInfo.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.ScheduleGet">
            <summary>设置 SvnWorkingCopyInfo.get_Schedule() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.UriGet">
            <summary>设置 SvnWorkingCopyInfo.get_Uri() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.WorkingCopySizeGet">
            <summary>设置 SvnWorkingCopyInfo.get_WorkingCopySize() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.AllInstances.ChangeListGet">
            <summary>设置 SvnWorkingCopyInfo.get_ChangeList() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.AllInstances.ChecksumGet">
            <summary>设置 SvnWorkingCopyInfo.get_Checksum() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.AllInstances.ConflictNewFileGet">
            <summary>设置 SvnWorkingCopyInfo.get_ConflictNewFile() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.AllInstances.ConflictOldFileGet">
            <summary>设置 SvnWorkingCopyInfo.get_ConflictOldFile() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.AllInstances.ConflictWorkFileGet">
            <summary>设置 SvnWorkingCopyInfo.get_ConflictWorkFile() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.AllInstances.ContentChangeTimeGet">
            <summary>设置 SvnWorkingCopyInfo.get_ContentChangeTime() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.AllInstances.CopiedFromGet">
            <summary>设置 SvnWorkingCopyInfo.get_CopiedFrom() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.AllInstances.CopiedFromRevisionGet">
            <summary>设置 SvnWorkingCopyInfo.get_CopiedFromRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.AllInstances.DepthGet">
            <summary>设置 SvnWorkingCopyInfo.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.AllInstances.Detach">
            <summary>设置 SvnWorkingCopyInfo.Detach() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.AllInstances.DetachBoolean">
            <summary>设置 SvnWorkingCopyInfo.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.AllInstances.Ensure">
            <summary>设置 SvnWorkingCopyInfo.Ensure() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.AllInstances.FileExternalOperationalRevisionGet">
            <summary>设置 SvnWorkingCopyInfo.get_FileExternalOperationalRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.AllInstances.FileExternalPathGet">
            <summary>设置 SvnWorkingCopyInfo.get_FileExternalPath() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.AllInstances.FileExternalRevisionGet">
            <summary>设置 SvnWorkingCopyInfo.get_FileExternalRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.AllInstances.GetHashCode01">
            <summary>设置 SvnWorkingCopyInfo.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.AllInstances.HasPropertiesGet">
            <summary>设置 SvnWorkingCopyInfo.get_HasProperties() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.AllInstances.HasPropertyChangesGet">
            <summary>设置 SvnWorkingCopyInfo.get_HasPropertyChanges() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.AllInstances.IsAbsentGet">
            <summary>设置 SvnWorkingCopyInfo.get_IsAbsent() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.AllInstances.IsCopyGet">
            <summary>设置 SvnWorkingCopyInfo.get_IsCopy() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.AllInstances.IsDeletedGet">
            <summary>设置 SvnWorkingCopyInfo.get_IsDeleted() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.AllInstances.IsIncompleteGet">
            <summary>设置 SvnWorkingCopyInfo.get_IsIncomplete() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.AllInstances.KeepLocalGet">
            <summary>设置 SvnWorkingCopyInfo.get_KeepLocal() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.AllInstances.LastChangeAuthorGet">
            <summary>设置 SvnWorkingCopyInfo.get_LastChangeAuthor() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.AllInstances.LastChangeRevisionGet">
            <summary>设置 SvnWorkingCopyInfo.get_LastChangeRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.AllInstances.LastChangeTimeGet">
            <summary>设置 SvnWorkingCopyInfo.get_LastChangeTime() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.AllInstances.LockCommentGet">
            <summary>设置 SvnWorkingCopyInfo.get_LockComment() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.AllInstances.LockOwnerGet">
            <summary>设置 SvnWorkingCopyInfo.get_LockOwner() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.AllInstances.LockTimeGet">
            <summary>设置 SvnWorkingCopyInfo.get_LockTime() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.AllInstances.LockTokenGet">
            <summary>设置 SvnWorkingCopyInfo.get_LockToken() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.AllInstances.NameGet">
            <summary>设置 SvnWorkingCopyInfo.get_Name() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.AllInstances.NodeKindGet">
            <summary>设置 SvnWorkingCopyInfo.get_NodeKind() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.AllInstances.PropertyChangeTimeGet">
            <summary>设置 SvnWorkingCopyInfo.get_PropertyChangeTime() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.AllInstances.PropertyRejectFileGet">
            <summary>设置 SvnWorkingCopyInfo.get_PropertyRejectFile() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.AllInstances.RepositoryIdGet">
            <summary>设置 SvnWorkingCopyInfo.get_RepositoryId() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.AllInstances.RepositoryIdValueGet">
            <summary>设置 SvnWorkingCopyInfo.get_RepositoryIdValue() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.AllInstances.RepositoryUriGet">
            <summary>设置 SvnWorkingCopyInfo.get_RepositoryUri() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.AllInstances.RevisionGet">
            <summary>设置 SvnWorkingCopyInfo.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.AllInstances.ScheduleGet">
            <summary>设置 SvnWorkingCopyInfo.get_Schedule() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.AllInstances.UriGet">
            <summary>设置 SvnWorkingCopyInfo.get_Uri() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInfo.AllInstances.WorkingCopySizeGet">
            <summary>设置 SvnWorkingCopyInfo.get_WorkingCopySize() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnWorkingCopyInstallConflictArgs">
            <summary>SharpSvn.SvnWorkingCopyInstallConflictArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnWorkingCopyInstallConflictArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnWorkingCopyInstallConflictArgs.#ctor(SharpSvn.SvnWorkingCopyInstallConflictArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnWorkingCopyInstallConflictArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnWorkingCopyInstallConflictArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInstallConflictArgs.ActionGet">
            <summary>设置 SvnWorkingCopyInstallConflictArgs.get_Action() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInstallConflictArgs.ActionSetSvnConflictAction">
            <summary>设置 SvnWorkingCopyInstallConflictArgs.set_Action(SvnConflictAction value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInstallConflictArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInstallConflictArgs.CommandTypeGet">
            <summary>设置 SvnWorkingCopyInstallConflictArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInstallConflictArgs.Constructor">
            <summary>设置 SvnWorkingCopyInstallConflictArgs.SvnWorkingCopyInstallConflictArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInstallConflictArgs.OperationGet">
            <summary>设置 SvnWorkingCopyInstallConflictArgs.get_Operation() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInstallConflictArgs.OperationSetSvnOperation">
            <summary>设置 SvnWorkingCopyInstallConflictArgs.set_Operation(SvnOperation value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInstallConflictArgs.ReasonGet">
            <summary>设置 SvnWorkingCopyInstallConflictArgs.get_Reason() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInstallConflictArgs.ReasonSetSvnConflictReason">
            <summary>设置 SvnWorkingCopyInstallConflictArgs.set_Reason(SvnConflictReason value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInstallConflictArgs.TreeConflictGet">
            <summary>设置 SvnWorkingCopyInstallConflictArgs.get_TreeConflict() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInstallConflictArgs.TreeConflictSetBoolean">
            <summary>设置 SvnWorkingCopyInstallConflictArgs.set_TreeConflict(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnWorkingCopyInstallConflictArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInstallConflictArgs.AllInstances.ActionGet">
            <summary>设置 SvnWorkingCopyInstallConflictArgs.get_Action() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInstallConflictArgs.AllInstances.ActionSetSvnConflictAction">
            <summary>设置 SvnWorkingCopyInstallConflictArgs.set_Action(SvnConflictAction value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInstallConflictArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnWorkingCopyInstallConflictArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInstallConflictArgs.AllInstances.OperationGet">
            <summary>设置 SvnWorkingCopyInstallConflictArgs.get_Operation() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInstallConflictArgs.AllInstances.OperationSetSvnOperation">
            <summary>设置 SvnWorkingCopyInstallConflictArgs.set_Operation(SvnOperation value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInstallConflictArgs.AllInstances.ReasonGet">
            <summary>设置 SvnWorkingCopyInstallConflictArgs.get_Reason() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInstallConflictArgs.AllInstances.ReasonSetSvnConflictReason">
            <summary>设置 SvnWorkingCopyInstallConflictArgs.set_Reason(SvnConflictReason value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInstallConflictArgs.AllInstances.TreeConflictGet">
            <summary>设置 SvnWorkingCopyInstallConflictArgs.get_TreeConflict() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyInstallConflictArgs.AllInstances.TreeConflictSetBoolean">
            <summary>设置 SvnWorkingCopyInstallConflictArgs.set_TreeConflict(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnWorkingCopyLockException">
            <summary>SharpSvn.SvnWorkingCopyLockException 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnWorkingCopyLockException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnWorkingCopyLockException.#ctor(SharpSvn.SvnWorkingCopyLockException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnWorkingCopyLockException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnWorkingCopyLockException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnWorkingCopyLockException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyLockException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyLockException.Constructor">
            <summary>设置 SvnWorkingCopyLockException.SvnWorkingCopyLockException() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyLockException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 SvnWorkingCopyLockException.SvnWorkingCopyLockException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyLockException.ConstructorString">
            <summary>设置 SvnWorkingCopyLockException.SvnWorkingCopyLockException(String message) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyLockException.ConstructorStringException">
            <summary>设置 SvnWorkingCopyLockException.SvnWorkingCopyLockException(String message, Exception inner) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnWorkingCopyLockException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnWorkingCopyMoveArgs">
            <summary>SharpSvn.SvnWorkingCopyMoveArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnWorkingCopyMoveArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnWorkingCopyMoveArgs.#ctor(SharpSvn.SvnWorkingCopyMoveArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnWorkingCopyMoveArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnWorkingCopyMoveArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyMoveArgs.AllowMixedRevisionMoveGet">
            <summary>设置 SvnWorkingCopyMoveArgs.get_AllowMixedRevisionMove() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyMoveArgs.AllowMixedRevisionMoveSetBoolean">
            <summary>设置 SvnWorkingCopyMoveArgs.set_AllowMixedRevisionMove(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyMoveArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyMoveArgs.CommandTypeGet">
            <summary>设置 SvnWorkingCopyMoveArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyMoveArgs.Constructor">
            <summary>设置 SvnWorkingCopyMoveArgs.SvnWorkingCopyMoveArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyMoveArgs.MetaDataOnlyGet">
            <summary>设置 SvnWorkingCopyMoveArgs.get_MetaDataOnly() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyMoveArgs.MetaDataOnlySetBoolean">
            <summary>设置 SvnWorkingCopyMoveArgs.set_MetaDataOnly(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnWorkingCopyMoveArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyMoveArgs.AllInstances.AllowMixedRevisionMoveGet">
            <summary>设置 SvnWorkingCopyMoveArgs.get_AllowMixedRevisionMove() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyMoveArgs.AllInstances.AllowMixedRevisionMoveSetBoolean">
            <summary>设置 SvnWorkingCopyMoveArgs.set_AllowMixedRevisionMove(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyMoveArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnWorkingCopyMoveArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyMoveArgs.AllInstances.MetaDataOnlyGet">
            <summary>设置 SvnWorkingCopyMoveArgs.get_MetaDataOnly() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyMoveArgs.AllInstances.MetaDataOnlySetBoolean">
            <summary>设置 SvnWorkingCopyMoveArgs.set_MetaDataOnly(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnWorkingCopyPathNotFoundException">
            <summary>SharpSvn.SvnWorkingCopyPathNotFoundException 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnWorkingCopyPathNotFoundException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnWorkingCopyPathNotFoundException.#ctor(SharpSvn.SvnWorkingCopyPathNotFoundException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnWorkingCopyPathNotFoundException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnWorkingCopyPathNotFoundException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnWorkingCopyPathNotFoundException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyPathNotFoundException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyPathNotFoundException.Constructor">
            <summary>设置 SvnWorkingCopyPathNotFoundException.SvnWorkingCopyPathNotFoundException() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyPathNotFoundException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 SvnWorkingCopyPathNotFoundException.SvnWorkingCopyPathNotFoundException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyPathNotFoundException.ConstructorString">
            <summary>设置 SvnWorkingCopyPathNotFoundException.SvnWorkingCopyPathNotFoundException(String message) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyPathNotFoundException.ConstructorStringException">
            <summary>设置 SvnWorkingCopyPathNotFoundException.SvnWorkingCopyPathNotFoundException(String message, Exception inner) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnWorkingCopyPathNotFoundException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnWorkingCopyRestoreArgs">
            <summary>SharpSvn.SvnWorkingCopyRestoreArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnWorkingCopyRestoreArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnWorkingCopyRestoreArgs.#ctor(SharpSvn.SvnWorkingCopyRestoreArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnWorkingCopyRestoreArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnWorkingCopyRestoreArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyRestoreArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyRestoreArgs.CommandTypeGet">
            <summary>设置 SvnWorkingCopyRestoreArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyRestoreArgs.Constructor">
            <summary>设置 SvnWorkingCopyRestoreArgs.SvnWorkingCopyRestoreArgs() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnWorkingCopyRestoreArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyRestoreArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnWorkingCopyRestoreArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnWorkingCopyState">
            <summary>SharpSvn.SvnWorkingCopyState 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnWorkingCopyState.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnWorkingCopyState.#ctor(SharpSvn.SvnWorkingCopyState)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnWorkingCopyState.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnWorkingCopyState.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyState.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyState.ConstructorBoolean">
            <summary>设置 SvnWorkingCopyState.SvnWorkingCopyState(Boolean isText) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyState.IsTextFileGet">
            <summary>设置 SvnWorkingCopyState.get_IsTextFile() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnWorkingCopyState.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyState.AllInstances.IsTextFileGet">
            <summary>设置 SvnWorkingCopyState.get_IsTextFile() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnWorkingCopyStateArgs">
            <summary>SharpSvn.SvnWorkingCopyStateArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnWorkingCopyStateArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnWorkingCopyStateArgs.#ctor(SharpSvn.SvnWorkingCopyStateArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnWorkingCopyStateArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnWorkingCopyStateArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyStateArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyStateArgs.CommandTypeGet">
            <summary>设置 SvnWorkingCopyStateArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyStateArgs.Constructor">
            <summary>设置 SvnWorkingCopyStateArgs.SvnWorkingCopyStateArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyStateArgs.RetrieveFileDataGet">
            <summary>设置 SvnWorkingCopyStateArgs.get_RetrieveFileData() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyStateArgs.RetrieveFileDataSetBoolean">
            <summary>设置 SvnWorkingCopyStateArgs.set_RetrieveFileData(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnWorkingCopyStateArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyStateArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnWorkingCopyStateArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyStateArgs.AllInstances.RetrieveFileDataGet">
            <summary>设置 SvnWorkingCopyStateArgs.get_RetrieveFileData() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyStateArgs.AllInstances.RetrieveFileDataSetBoolean">
            <summary>设置 SvnWorkingCopyStateArgs.set_RetrieveFileData(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnWorkingCopyVersion">
            <summary>SharpSvn.SvnWorkingCopyVersion 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnWorkingCopyVersion.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnWorkingCopyVersion.#ctor(SharpSvn.SvnWorkingCopyVersion)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnWorkingCopyVersion.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnWorkingCopyVersion.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyVersion.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyVersion.ConstructorInt64Int64BooleanBooleanBoolean">
            <summary>设置 SvnWorkingCopyVersion.SvnWorkingCopyVersion(Int64 minrev, Int64 maxrev, Boolean switched, Boolean modified, Boolean sparse) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyVersion.EndGet">
            <summary>设置 SvnWorkingCopyVersion.get_End() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyVersion.IncompleteWorkingCopyGet">
            <summary>设置 SvnWorkingCopyVersion.get_IncompleteWorkingCopy() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyVersion.ModifiedGet">
            <summary>设置 SvnWorkingCopyVersion.get_Modified() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyVersion.StartGet">
            <summary>设置 SvnWorkingCopyVersion.get_Start() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyVersion.SwitchedGet">
            <summary>设置 SvnWorkingCopyVersion.get_Switched() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnWorkingCopyVersion.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyVersion.AllInstances.EndGet">
            <summary>设置 SvnWorkingCopyVersion.get_End() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyVersion.AllInstances.IncompleteWorkingCopyGet">
            <summary>设置 SvnWorkingCopyVersion.get_IncompleteWorkingCopy() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyVersion.AllInstances.ModifiedGet">
            <summary>设置 SvnWorkingCopyVersion.get_Modified() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyVersion.AllInstances.StartGet">
            <summary>设置 SvnWorkingCopyVersion.get_Start() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWorkingCopyVersion.AllInstances.SwitchedGet">
            <summary>设置 SvnWorkingCopyVersion.get_Switched() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnWriteArgs">
            <summary>SharpSvn.SvnWriteArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnWriteArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnWriteArgs.#ctor(SharpSvn.SvnWriteArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnWriteArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnWriteArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWriteArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWriteArgs.CommandTypeGet">
            <summary>设置 SvnWriteArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWriteArgs.Constructor">
            <summary>设置 SvnWriteArgs.SvnWriteArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWriteArgs.IgnoreKeywordsGet">
            <summary>设置 SvnWriteArgs.get_IgnoreKeywords() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWriteArgs.IgnoreKeywordsSetBoolean">
            <summary>设置 SvnWriteArgs.set_IgnoreKeywords(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWriteArgs.RevisionGet">
            <summary>设置 SvnWriteArgs.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWriteArgs.RevisionSetSvnRevision">
            <summary>设置 SvnWriteArgs.set_Revision(SvnRevision value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnWriteArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWriteArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnWriteArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWriteArgs.AllInstances.IgnoreKeywordsGet">
            <summary>设置 SvnWriteArgs.get_IgnoreKeywords() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWriteArgs.AllInstances.IgnoreKeywordsSetBoolean">
            <summary>设置 SvnWriteArgs.set_IgnoreKeywords(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWriteArgs.AllInstances.RevisionGet">
            <summary>设置 SvnWriteArgs.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnWriteArgs.AllInstances.RevisionSetSvnRevision">
            <summary>设置 SvnWriteArgs.set_Revision(SvnRevision value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnXmlException">
            <summary>SharpSvn.SvnXmlException 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnXmlException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnXmlException.#ctor(SharpSvn.SvnXmlException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnXmlException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnXmlException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Fakes.ShimSvnXmlException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnXmlException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnXmlException.Constructor">
            <summary>设置 SvnXmlException.SvnXmlException() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnXmlException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 SvnXmlException.SvnXmlException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnXmlException.ConstructorString">
            <summary>设置 SvnXmlException.SvnXmlException(String message) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Fakes.ShimSvnXmlException.ConstructorStringException">
            <summary>设置 SvnXmlException.SvnXmlException(String message, Exception inner) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.ShimSvnXmlException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubISvnOrigin">
            <summary>SharpSvn.ISvnOrigin 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubISvnOrigin.#ctor">
            <summary>初始化 type StubISvnOrigin 的新实例</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubISvnOrigin.NodeKindGet">
            <summary>设置 ISvnOrigin.get_NodeKind() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubISvnOrigin.RepositoryRootGet">
            <summary>设置 ISvnOrigin.get_RepositoryRoot() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubISvnOrigin.TargetGet">
            <summary>设置 ISvnOrigin.get_Target() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubISvnOrigin.UriGet">
            <summary>设置 ISvnOrigin.get_Uri() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubISvnOrigin.ss::SharpSvn#ISvnOrigin#NodeKind">
            <summary>设置 ISvnOrigin.get_NodeKind() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubISvnOrigin.ss::SharpSvn#ISvnOrigin#RepositoryRoot">
            <summary>设置 ISvnOrigin.get_RepositoryRoot() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubISvnOrigin.ss::SharpSvn#ISvnOrigin#Target">
            <summary>设置 ISvnOrigin.get_Target() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubISvnOrigin.ss::SharpSvn#ISvnOrigin#Uri">
            <summary>设置 ISvnOrigin.get_Uri() 的 stub</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnAddArgs">
            <summary>SharpSvn.SvnAddArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnAddArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnAddArgs.InitializeStub">
            <summary>初始化 type StubSvnAddArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnAddArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnAddArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnAddArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnAddArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnAddArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnAddArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnAddArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnAddArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnAddArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnAddArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnAddArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnAddToChangeListArgs">
            <summary>SharpSvn.SvnAddToChangeListArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnAddToChangeListArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnAddToChangeListArgs.InitializeStub">
            <summary>初始化 type StubSvnAddToChangeListArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnAddToChangeListArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnAddToChangeListArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnAddToChangeListArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnAddToChangeListArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnAddToChangeListArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnAddToChangeListArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnAddToChangeListArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnAddToChangeListArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnAddToChangeListArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnAddToChangeListArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnAddToChangeListArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnAuthenticationException">
            <summary>SharpSvn.SvnAuthenticationException 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnAuthenticationException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnAuthenticationException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnAuthenticationException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnAuthenticationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnAuthenticationException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubSvnAuthenticationException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnAuthenticationException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubSvnAuthenticationException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnAuthenticationException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnAuthenticationException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnAuthenticationException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnAuthenticationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnAuthenticationException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnAuthenticationException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnAuthenticationException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnAuthenticationException.InitializeStub">
            <summary>初始化 type StubSvnAuthenticationException 的新实例</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnAuthenticationException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnAuthenticationException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnAuthenticationException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnAuthenticationException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnAuthenticationException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnAuthenticationException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnAuthenticationException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnAuthenticationException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnAuthenticationException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnAuthenticationException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnAuthenticationException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnAuthenticationException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnAuthenticationException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnAuthenticationException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnAuthorizationException">
            <summary>SharpSvn.SvnAuthorizationException 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnAuthorizationException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnAuthorizationException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnAuthorizationException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnAuthorizationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnAuthorizationException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubSvnAuthorizationException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnAuthorizationException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubSvnAuthorizationException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnAuthorizationException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnAuthorizationException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnAuthorizationException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnAuthorizationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnAuthorizationException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnAuthorizationException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnAuthorizationException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnAuthorizationException.InitializeStub">
            <summary>初始化 type StubSvnAuthorizationException 的新实例</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnAuthorizationException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnAuthorizationException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnAuthorizationException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnAuthorizationException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnAuthorizationException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnAuthorizationException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnAuthorizationException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnAuthorizationException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnAuthorizationException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnAuthorizationException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnAuthorizationException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnAuthorizationException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnAuthorizationException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnAuthorizationException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnBlameArgs">
            <summary>SharpSvn.SvnBlameArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnBlameArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnBlameArgs.InitializeStub">
            <summary>初始化 type StubSvnBlameArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnBlameArgs.OnBlame(SharpSvn.SvnBlameEventArgs)">
            <summary>设置 SvnBlameArgs.OnBlame(SvnBlameEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnBlameArgs.OnBlameSvnBlameEventArgs">
            <summary>设置 SvnBlameArgs.OnBlame(SvnBlameEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnBlameArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnBlameArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnBlameArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnBlameArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnBlameArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnBlameArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnBlameArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnBlameArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnBlameArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnBlameArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnBlameArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnBreakIterationException">
            <summary>SharpSvn.SvnBreakIterationException 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnBreakIterationException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnBreakIterationException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnBreakIterationException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnBreakIterationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnBreakIterationException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubSvnBreakIterationException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnBreakIterationException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubSvnBreakIterationException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnBreakIterationException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnBreakIterationException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnBreakIterationException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnBreakIterationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnBreakIterationException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnBreakIterationException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnBreakIterationException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnBreakIterationException.InitializeStub">
            <summary>初始化 type StubSvnBreakIterationException 的新实例</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnBreakIterationException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnBreakIterationException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnBreakIterationException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnBreakIterationException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnBreakIterationException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnBreakIterationException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnBreakIterationException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnBreakIterationException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnBreakIterationException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnBreakIterationException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnBreakIterationException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnBreakIterationException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnBreakIterationException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnBreakIterationException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnCancelEventArgs">
            <summary>SharpSvn.SvnCancelEventArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnCancelEventArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnCancelEventArgs.Detach(System.Boolean)">
            <summary>设置 SvnEventArgs.Detach(Boolean keepProperties) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnCancelEventArgs.DetachBoolean">
            <summary>设置 SvnEventArgs.Detach(Boolean keepProperties) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnCancelEventArgs.InitializeStub">
            <summary>初始化 type StubSvnCancelEventArgs 的新实例</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnCancelEventArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnCancelEventArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnCancelEventArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnChangeInfoArgs">
            <summary>SharpSvn.SvnChangeInfoArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnChangeInfoArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnChangeInfoArgs.InitializeStub">
            <summary>初始化 type StubSvnChangeInfoArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnChangeInfoArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnChangeInfoArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnChangeInfoArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnChangeInfoArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnChangeInfoArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnChangeInfoArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnChangeInfoArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnChangeInfoArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnChangeInfoArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnChangeInfoArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnChangeInfoArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnChangeListCollection">
            <summary>SharpSvn.SvnChangeListCollection 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnChangeListCollection.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnChangeListCollection.ClearItems">
            <summary>设置 Collection`1.ClearItems() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnChangeListCollection.ClearItems01">
            <summary>设置 Collection`1.ClearItems() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnChangeListCollection.InitializeStub">
            <summary>初始化 type StubSvnChangeListCollection 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnChangeListCollection.InsertItem(System.Int32,System.String)">
            <summary>设置 Collection`1.InsertItem(Int32 index, !0 item) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnChangeListCollection.InsertItemInt32String">
            <summary>设置 Collection`1.InsertItem(Int32 index, !0 item) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnChangeListCollection.RemoveItem(System.Int32)">
            <summary>设置 Collection`1.RemoveItem(Int32 index) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnChangeListCollection.RemoveItemInt32">
            <summary>设置 Collection`1.RemoveItem(Int32 index) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnChangeListCollection.SetItem(System.Int32,System.String)">
            <summary>设置 Collection`1.SetItem(Int32 index, !0 item) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnChangeListCollection.SetItemInt32String">
            <summary>设置 Collection`1.SetItem(Int32 index, !0 item) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnChangeListCollection.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnChangeListCollection.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnChangeListCollection.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnChangedArgs">
            <summary>SharpSvn.SvnChangedArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnChangedArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnChangedArgs.InitializeStub">
            <summary>初始化 type StubSvnChangedArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnChangedArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnChangedArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnChangedArgs.OnChanged(SharpSvn.SvnChangedEventArgs)">
            <summary>设置 SvnChangedArgs.OnChanged(SvnChangedEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnChangedArgs.OnChangedSvnChangedEventArgs">
            <summary>设置 SvnChangedArgs.OnChanged(SvnChangedEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnChangedArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnChangedArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnChangedArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnChangedArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnChangedArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnChangedArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnChangedArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnChangedArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnChangedArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnCheckOutArgs">
            <summary>SharpSvn.SvnCheckOutArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnCheckOutArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnCheckOutArgs.InitializeStub">
            <summary>初始化 type StubSvnCheckOutArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnCheckOutArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnCheckOutArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnCheckOutArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnCheckOutArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnCheckOutArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnCheckOutArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnCheckOutArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnCheckOutArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnCheckOutArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnCheckOutArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnCheckOutArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnChecksumMismatchException">
            <summary>SharpSvn.SvnChecksumMismatchException 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnChecksumMismatchException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnChecksumMismatchException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnChecksumMismatchException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnChecksumMismatchException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnChecksumMismatchException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubSvnChecksumMismatchException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnChecksumMismatchException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubSvnChecksumMismatchException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnChecksumMismatchException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnChecksumMismatchException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnChecksumMismatchException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnChecksumMismatchException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnChecksumMismatchException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnChecksumMismatchException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnChecksumMismatchException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnChecksumMismatchException.InitializeStub">
            <summary>初始化 type StubSvnChecksumMismatchException 的新实例</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnChecksumMismatchException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnChecksumMismatchException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnChecksumMismatchException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnChecksumMismatchException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnChecksumMismatchException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnChecksumMismatchException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnChecksumMismatchException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnChecksumMismatchException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnChecksumMismatchException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnChecksumMismatchException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnChecksumMismatchException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnChecksumMismatchException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnChecksumMismatchException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnChecksumMismatchException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnCleanUpArgs">
            <summary>SharpSvn.SvnCleanUpArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnCleanUpArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnCleanUpArgs.InitializeStub">
            <summary>初始化 type StubSvnCleanUpArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnCleanUpArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnCleanUpArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnCleanUpArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnCleanUpArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnCleanUpArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnCleanUpArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnCleanUpArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnCleanUpArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnCleanUpArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnCleanUpArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnCleanUpArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnClient">
            <summary>SharpSvn.SvnClient 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClient.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClient.AttachBackingFieldToSite">
            <summary>附加委托以将 StubSvnClient.Site 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClient.Dispose(System.Boolean)">
            <summary>设置 SvnClient.Dispose(Boolean ) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClient.DisposeBoolean">
            <summary>设置 SvnClient.Dispose(Boolean ) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClient.InitializeStub">
            <summary>初始化 type StubSvnClient 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClient.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClient.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClient.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClient.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClient.OnCommitted(SharpSvn.SvnCommittedEventArgs)">
            <summary>设置 SvnClient.OnCommitted(SvnCommittedEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClient.OnCommittedSvnCommittedEventArgs">
            <summary>设置 SvnClient.OnCommitted(SvnCommittedEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClient.OnCommitting(SharpSvn.SvnCommittingEventArgs)">
            <summary>设置 SvnClient.OnCommitting(SvnCommittingEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClient.OnCommittingSvnCommittingEventArgs">
            <summary>设置 SvnClient.OnCommitting(SvnCommittingEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClient.OnConflict(SharpSvn.SvnConflictEventArgs)">
            <summary>设置 SvnClient.OnConflict(SvnConflictEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClient.OnConflictSvnConflictEventArgs">
            <summary>设置 SvnClient.OnConflict(SvnConflictEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClient.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClient.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClient.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClient.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClient.OnProcessing(SharpSvn.SvnProcessingEventArgs)">
            <summary>设置 SvnClient.OnProcessing(SvnProcessingEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClient.OnProcessingSvnProcessingEventArgs">
            <summary>设置 SvnClient.OnProcessing(SvnProcessingEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClient.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClient.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClient.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClient.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClient.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClient.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClient.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClient.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClient.SiteGet">
            <summary>设置 SvnClientContext.get_Site() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClient.SiteSetISite">
            <summary>设置 SvnClientContext.set_Site(ISite value) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClient.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClient.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClient.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClient.Site">
            <summary>设置 SvnClientContext.get_Site() 的 stub</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnClientApiException">
            <summary>SharpSvn.SvnClientApiException 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientApiException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientApiException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientApiException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientApiException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientApiException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubSvnClientApiException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientApiException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubSvnClientApiException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientApiException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientApiException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientApiException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientApiException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientApiException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientApiException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientApiException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientApiException.InitializeStub">
            <summary>初始化 type StubSvnClientApiException 的新实例</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientApiException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientApiException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientApiException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientApiException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientApiException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientApiException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientApiException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientApiException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientApiException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientApiException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientApiException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientApiException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientApiException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientApiException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnClientArgsWithCommit">
            <summary>SharpSvn.SvnClientArgsWithCommit 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientArgsWithCommit.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientArgsWithCommit.CommandTypeGet">
            <summary>设置 SvnClientArgs.get_CommandType() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientArgsWithCommit.InitializeStub">
            <summary>初始化 type StubSvnClientArgsWithCommit 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientArgsWithCommit.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientArgsWithCommit.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientArgsWithCommit.OnCommitted(SharpSvn.SvnCommittedEventArgs)">
            <summary>设置 SvnClientArgsWithCommit.OnCommitted(SvnCommittedEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientArgsWithCommit.OnCommittedSvnCommittedEventArgs">
            <summary>设置 SvnClientArgsWithCommit.OnCommitted(SvnCommittedEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientArgsWithCommit.OnCommitting(SharpSvn.SvnCommittingEventArgs)">
            <summary>设置 SvnClientArgsWithCommit.OnCommitting(SvnCommittingEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientArgsWithCommit.OnCommittingSvnCommittingEventArgs">
            <summary>设置 SvnClientArgsWithCommit.OnCommitting(SvnCommittingEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientArgsWithCommit.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientArgsWithCommit.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientArgsWithCommit.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientArgsWithCommit.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientArgsWithCommit.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientArgsWithCommit.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientArgsWithCommit.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientArgsWithCommit.CommandType">
            <summary>设置 SvnClientArgs.get_CommandType() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientArgsWithCommit.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientArgsWithCommit.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnClientArgsWithConflict">
            <summary>SharpSvn.SvnClientArgsWithConflict 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientArgsWithConflict.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientArgsWithConflict.CommandTypeGet">
            <summary>设置 SvnClientArgs.get_CommandType() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientArgsWithConflict.InitializeStub">
            <summary>初始化 type StubSvnClientArgsWithConflict 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientArgsWithConflict.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientArgsWithConflict.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientArgsWithConflict.OnConflict(SharpSvn.SvnConflictEventArgs)">
            <summary>设置 SvnClientArgsWithConflict.OnConflict(SvnConflictEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientArgsWithConflict.OnConflictSvnConflictEventArgs">
            <summary>设置 SvnClientArgsWithConflict.OnConflict(SvnConflictEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientArgsWithConflict.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientArgsWithConflict.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientArgsWithConflict.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientArgsWithConflict.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientArgsWithConflict.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientArgsWithConflict.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientArgsWithConflict.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientArgsWithConflict.CommandType">
            <summary>设置 SvnClientArgs.get_CommandType() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientArgsWithConflict.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientArgsWithConflict.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnClientBinaryFileException">
            <summary>SharpSvn.SvnClientBinaryFileException 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientBinaryFileException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientBinaryFileException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientBinaryFileException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientBinaryFileException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientBinaryFileException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubSvnClientBinaryFileException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientBinaryFileException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubSvnClientBinaryFileException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientBinaryFileException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientBinaryFileException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientBinaryFileException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientBinaryFileException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientBinaryFileException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientBinaryFileException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientBinaryFileException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientBinaryFileException.InitializeStub">
            <summary>初始化 type StubSvnClientBinaryFileException 的新实例</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientBinaryFileException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientBinaryFileException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientBinaryFileException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientBinaryFileException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientBinaryFileException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientBinaryFileException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientBinaryFileException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientBinaryFileException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientBinaryFileException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientBinaryFileException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientBinaryFileException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientBinaryFileException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientBinaryFileException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientBinaryFileException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnClientConfigurationException">
            <summary>SharpSvn.SvnClientConfigurationException 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientConfigurationException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientConfigurationException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientConfigurationException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientConfigurationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientConfigurationException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubSvnClientConfigurationException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientConfigurationException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubSvnClientConfigurationException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientConfigurationException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientConfigurationException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientConfigurationException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientConfigurationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientConfigurationException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientConfigurationException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientConfigurationException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientConfigurationException.InitializeStub">
            <summary>初始化 type StubSvnClientConfigurationException 的新实例</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientConfigurationException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientConfigurationException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientConfigurationException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientConfigurationException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientConfigurationException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientConfigurationException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientConfigurationException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientConfigurationException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientConfigurationException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientConfigurationException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientConfigurationException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientConfigurationException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientConfigurationException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientConfigurationException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnClientException">
            <summary>SharpSvn.SvnClientException 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubSvnClientException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubSvnClientException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientException.InitializeStub">
            <summary>初始化 type StubSvnClientException 的新实例</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnClientHookException">
            <summary>SharpSvn.SvnClientHookException 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientHookException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientHookException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientHookException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientHookException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientHookException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubSvnClientHookException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientHookException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubSvnClientHookException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientHookException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientHookException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientHookException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientHookException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientHookException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientHookException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientHookException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientHookException.InitializeStub">
            <summary>初始化 type StubSvnClientHookException 的新实例</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientHookException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientHookException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientHookException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientHookException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientHookException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientHookException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientHookException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientHookException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientHookException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientHookException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientHookException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientHookException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientHookException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientHookException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnClientMissingLockTokenException">
            <summary>SharpSvn.SvnClientMissingLockTokenException 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientMissingLockTokenException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientMissingLockTokenException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientMissingLockTokenException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientMissingLockTokenException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientMissingLockTokenException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubSvnClientMissingLockTokenException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientMissingLockTokenException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubSvnClientMissingLockTokenException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientMissingLockTokenException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientMissingLockTokenException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientMissingLockTokenException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientMissingLockTokenException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientMissingLockTokenException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientMissingLockTokenException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientMissingLockTokenException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientMissingLockTokenException.InitializeStub">
            <summary>初始化 type StubSvnClientMissingLockTokenException 的新实例</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientMissingLockTokenException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientMissingLockTokenException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientMissingLockTokenException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientMissingLockTokenException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientMissingLockTokenException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientMissingLockTokenException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientMissingLockTokenException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientMissingLockTokenException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientMissingLockTokenException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientMissingLockTokenException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientMissingLockTokenException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientMissingLockTokenException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientMissingLockTokenException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientMissingLockTokenException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnClientNoVersionedParentException">
            <summary>SharpSvn.SvnClientNoVersionedParentException 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientNoVersionedParentException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientNoVersionedParentException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientNoVersionedParentException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientNoVersionedParentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientNoVersionedParentException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubSvnClientNoVersionedParentException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientNoVersionedParentException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubSvnClientNoVersionedParentException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientNoVersionedParentException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientNoVersionedParentException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientNoVersionedParentException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientNoVersionedParentException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientNoVersionedParentException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientNoVersionedParentException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientNoVersionedParentException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientNoVersionedParentException.InitializeStub">
            <summary>初始化 type StubSvnClientNoVersionedParentException 的新实例</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientNoVersionedParentException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientNoVersionedParentException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientNoVersionedParentException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientNoVersionedParentException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientNoVersionedParentException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientNoVersionedParentException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientNoVersionedParentException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientNoVersionedParentException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientNoVersionedParentException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientNoVersionedParentException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientNoVersionedParentException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientNoVersionedParentException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientNoVersionedParentException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientNoVersionedParentException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnClientNoVersionedPathException">
            <summary>SharpSvn.SvnClientNoVersionedPathException 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientNoVersionedPathException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientNoVersionedPathException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientNoVersionedPathException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientNoVersionedPathException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientNoVersionedPathException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubSvnClientNoVersionedPathException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientNoVersionedPathException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubSvnClientNoVersionedPathException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientNoVersionedPathException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientNoVersionedPathException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientNoVersionedPathException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientNoVersionedPathException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientNoVersionedPathException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientNoVersionedPathException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientNoVersionedPathException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientNoVersionedPathException.InitializeStub">
            <summary>初始化 type StubSvnClientNoVersionedPathException 的新实例</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientNoVersionedPathException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientNoVersionedPathException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientNoVersionedPathException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientNoVersionedPathException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientNoVersionedPathException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientNoVersionedPathException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientNoVersionedPathException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientNoVersionedPathException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientNoVersionedPathException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientNoVersionedPathException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientNoVersionedPathException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientNoVersionedPathException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientNoVersionedPathException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientNoVersionedPathException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnClientNodeKindException">
            <summary>SharpSvn.SvnClientNodeKindException 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientNodeKindException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientNodeKindException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientNodeKindException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientNodeKindException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientNodeKindException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubSvnClientNodeKindException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientNodeKindException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubSvnClientNodeKindException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientNodeKindException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientNodeKindException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientNodeKindException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientNodeKindException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientNodeKindException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientNodeKindException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientNodeKindException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientNodeKindException.InitializeStub">
            <summary>初始化 type StubSvnClientNodeKindException 的新实例</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientNodeKindException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientNodeKindException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientNodeKindException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientNodeKindException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientNodeKindException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientNodeKindException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientNodeKindException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientNodeKindException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientNodeKindException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientNodeKindException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientNodeKindException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientNodeKindException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientNodeKindException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientNodeKindException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnClientNotReadyToMergeException">
            <summary>SharpSvn.SvnClientNotReadyToMergeException 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientNotReadyToMergeException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientNotReadyToMergeException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientNotReadyToMergeException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientNotReadyToMergeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientNotReadyToMergeException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubSvnClientNotReadyToMergeException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientNotReadyToMergeException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubSvnClientNotReadyToMergeException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientNotReadyToMergeException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientNotReadyToMergeException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientNotReadyToMergeException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientNotReadyToMergeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientNotReadyToMergeException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientNotReadyToMergeException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientNotReadyToMergeException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientNotReadyToMergeException.InitializeStub">
            <summary>初始化 type StubSvnClientNotReadyToMergeException 的新实例</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientNotReadyToMergeException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientNotReadyToMergeException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientNotReadyToMergeException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientNotReadyToMergeException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientNotReadyToMergeException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientNotReadyToMergeException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientNotReadyToMergeException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientNotReadyToMergeException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientNotReadyToMergeException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientNotReadyToMergeException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientNotReadyToMergeException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientNotReadyToMergeException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientNotReadyToMergeException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientNotReadyToMergeException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnClientReporter">
            <summary>SharpSvn.SvnClientReporter 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientReporter.#ctor(SharpSvn.SvnClient,System.IO.TextWriter)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientReporter.#ctor(SharpSvn.SvnClient,System.Text.StringBuilder)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientReporter.#ctor(SharpSvn.SvnClientArgs,System.IO.TextWriter)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientReporter.#ctor(SharpSvn.SvnClientArgs,System.Text.StringBuilder)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientReporter.#ctor(SharpSvn.SvnClient,System.Text.StringBuilder,System.IFormatProvider)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientReporter.#ctor(SharpSvn.SvnClientArgs,System.Text.StringBuilder,System.IFormatProvider)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientReporter.Dispose(System.Boolean)">
            <summary>设置 SvnClientReporter.Dispose(Boolean ) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientReporter.DisposeBoolean">
            <summary>设置 SvnClientReporter.Dispose(Boolean ) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientReporter.InitializeStub">
            <summary>初始化 type StubSvnClientReporter 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientReporter.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientReporter.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientReporter.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientReporter.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientReporter.OnProcessing(SharpSvn.SvnProcessingEventArgs)">
            <summary>设置 SvnClientReporter.OnProcessing(SvnProcessingEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientReporter.OnProcessingSvnProcessingEventArgs">
            <summary>设置 SvnClientReporter.OnProcessing(SvnProcessingEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientReporter.Write(System.String)">
            <summary>设置 SvnClientReporter.Write(String value) 的 存根</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientReporter.WriteLine(System.String)">
            <summary>设置 SvnClientReporter.WriteLine(String value) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientReporter.WriteLineString">
            <summary>设置 SvnClientReporter.WriteLine(String value) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientReporter.WriteProgress(System.String)">
            <summary>设置 SvnClientReporter.WriteProgress(String value) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientReporter.WriteProgressString">
            <summary>设置 SvnClientReporter.WriteProgress(String value) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientReporter.WriteString">
            <summary>设置 SvnClientReporter.Write(String value) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientReporter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientReporter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientReporter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnClientUnrelatedResourcesException">
            <summary>SharpSvn.SvnClientUnrelatedResourcesException 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientUnrelatedResourcesException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientUnrelatedResourcesException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientUnrelatedResourcesException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientUnrelatedResourcesException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientUnrelatedResourcesException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubSvnClientUnrelatedResourcesException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientUnrelatedResourcesException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubSvnClientUnrelatedResourcesException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientUnrelatedResourcesException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientUnrelatedResourcesException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientUnrelatedResourcesException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientUnrelatedResourcesException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientUnrelatedResourcesException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientUnrelatedResourcesException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientUnrelatedResourcesException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientUnrelatedResourcesException.InitializeStub">
            <summary>初始化 type StubSvnClientUnrelatedResourcesException 的新实例</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientUnrelatedResourcesException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientUnrelatedResourcesException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientUnrelatedResourcesException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientUnrelatedResourcesException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnClientUnrelatedResourcesException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnClientUnrelatedResourcesException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientUnrelatedResourcesException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientUnrelatedResourcesException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientUnrelatedResourcesException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientUnrelatedResourcesException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientUnrelatedResourcesException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientUnrelatedResourcesException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientUnrelatedResourcesException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnClientUnrelatedResourcesException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnCommitArgs">
            <summary>SharpSvn.SvnCommitArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnCommitArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnCommitArgs.InitializeStub">
            <summary>初始化 type StubSvnCommitArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnCommitArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnCommitArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnCommitArgs.OnCommitted(SharpSvn.SvnCommittedEventArgs)">
            <summary>设置 SvnClientArgsWithCommit.OnCommitted(SvnCommittedEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnCommitArgs.OnCommittedSvnCommittedEventArgs">
            <summary>设置 SvnClientArgsWithCommit.OnCommitted(SvnCommittedEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnCommitArgs.OnCommitting(SharpSvn.SvnCommittingEventArgs)">
            <summary>设置 SvnClientArgsWithCommit.OnCommitting(SvnCommittingEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnCommitArgs.OnCommittingSvnCommittingEventArgs">
            <summary>设置 SvnClientArgsWithCommit.OnCommitting(SvnCommittingEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnCommitArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnCommitArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnCommitArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnCommitArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnCommitArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnCommitArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnCommitArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnCommitArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnCommitArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnCopyArgs">
            <summary>SharpSvn.SvnCopyArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnCopyArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnCopyArgs.InitializeStub">
            <summary>初始化 type StubSvnCopyArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnCopyArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnCopyArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnCopyArgs.OnCommitted(SharpSvn.SvnCommittedEventArgs)">
            <summary>设置 SvnClientArgsWithCommit.OnCommitted(SvnCommittedEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnCopyArgs.OnCommittedSvnCommittedEventArgs">
            <summary>设置 SvnClientArgsWithCommit.OnCommitted(SvnCommittedEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnCopyArgs.OnCommitting(SharpSvn.SvnCommittingEventArgs)">
            <summary>设置 SvnClientArgsWithCommit.OnCommitting(SvnCommittingEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnCopyArgs.OnCommittingSvnCommittingEventArgs">
            <summary>设置 SvnClientArgsWithCommit.OnCommitting(SvnCommittingEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnCopyArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnCopyArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnCopyArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnCopyArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnCopyArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnCopyArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnCopyArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnCopyArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnCopyArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnCreateDirectoryArgs">
            <summary>SharpSvn.SvnCreateDirectoryArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnCreateDirectoryArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnCreateDirectoryArgs.InitializeStub">
            <summary>初始化 type StubSvnCreateDirectoryArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnCreateDirectoryArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnCreateDirectoryArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnCreateDirectoryArgs.OnCommitted(SharpSvn.SvnCommittedEventArgs)">
            <summary>设置 SvnClientArgsWithCommit.OnCommitted(SvnCommittedEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnCreateDirectoryArgs.OnCommittedSvnCommittedEventArgs">
            <summary>设置 SvnClientArgsWithCommit.OnCommitted(SvnCommittedEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnCreateDirectoryArgs.OnCommitting(SharpSvn.SvnCommittingEventArgs)">
            <summary>设置 SvnClientArgsWithCommit.OnCommitting(SvnCommittingEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnCreateDirectoryArgs.OnCommittingSvnCommittingEventArgs">
            <summary>设置 SvnClientArgsWithCommit.OnCommitting(SvnCommittingEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnCreateDirectoryArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnCreateDirectoryArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnCreateDirectoryArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnCreateDirectoryArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnCreateDirectoryArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnCreateDirectoryArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnCreateDirectoryArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnCreateDirectoryArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnCreateDirectoryArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnCreateRepositoryArgs">
            <summary>SharpSvn.SvnCreateRepositoryArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnCreateRepositoryArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnCreateRepositoryArgs.InitializeStub">
            <summary>初始化 type StubSvnCreateRepositoryArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnCreateRepositoryArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnCreateRepositoryArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnCreateRepositoryArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnCreateRepositoryArgs.OnNotify(SharpSvn.SvnRepositoryNotifyEventArgs)">
            <summary>设置 SvnRepositoryClientArgs.OnNotify(SvnRepositoryNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnCreateRepositoryArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnCreateRepositoryArgs.OnNotifySvnRepositoryNotifyEventArgs">
            <summary>设置 SvnRepositoryClientArgs.OnNotify(SvnRepositoryNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnCreateRepositoryArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnCreateRepositoryArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnCreateRepositoryArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnCreateRepositoryArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnCreateRepositoryArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnCreateRepositoryArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnCreateRepositoryArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnCropWorkingCopyArgs">
            <summary>SharpSvn.SvnCropWorkingCopyArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnCropWorkingCopyArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnCropWorkingCopyArgs.InitializeStub">
            <summary>初始化 type StubSvnCropWorkingCopyArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnCropWorkingCopyArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnCropWorkingCopyArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnCropWorkingCopyArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnCropWorkingCopyArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnCropWorkingCopyArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnCropWorkingCopyArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnCropWorkingCopyArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnCropWorkingCopyArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnCropWorkingCopyArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnCropWorkingCopyArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnCropWorkingCopyArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnDeleteArgs">
            <summary>SharpSvn.SvnDeleteArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnDeleteArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnDeleteArgs.InitializeStub">
            <summary>初始化 type StubSvnDeleteArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnDeleteArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnDeleteArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnDeleteArgs.OnCommitted(SharpSvn.SvnCommittedEventArgs)">
            <summary>设置 SvnClientArgsWithCommit.OnCommitted(SvnCommittedEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnDeleteArgs.OnCommittedSvnCommittedEventArgs">
            <summary>设置 SvnClientArgsWithCommit.OnCommitted(SvnCommittedEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnDeleteArgs.OnCommitting(SharpSvn.SvnCommittingEventArgs)">
            <summary>设置 SvnClientArgsWithCommit.OnCommitting(SvnCommittingEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnDeleteArgs.OnCommittingSvnCommittingEventArgs">
            <summary>设置 SvnClientArgsWithCommit.OnCommitting(SvnCommittingEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnDeleteArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnDeleteArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnDeleteArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnDeleteArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnDeleteArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnDeleteArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnDeleteArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnDeleteArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnDeleteArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnDeleteRepositoryArgs">
            <summary>SharpSvn.SvnDeleteRepositoryArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnDeleteRepositoryArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnDeleteRepositoryArgs.InitializeStub">
            <summary>初始化 type StubSvnDeleteRepositoryArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnDeleteRepositoryArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnDeleteRepositoryArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnDeleteRepositoryArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnDeleteRepositoryArgs.OnNotify(SharpSvn.SvnRepositoryNotifyEventArgs)">
            <summary>设置 SvnRepositoryClientArgs.OnNotify(SvnRepositoryNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnDeleteRepositoryArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnDeleteRepositoryArgs.OnNotifySvnRepositoryNotifyEventArgs">
            <summary>设置 SvnRepositoryClientArgs.OnNotify(SvnRepositoryNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnDeleteRepositoryArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnDeleteRepositoryArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnDeleteRepositoryArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnDeleteRepositoryArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnDeleteRepositoryArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnDeleteRepositoryArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnDeleteRepositoryArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnDiffArgs">
            <summary>SharpSvn.SvnDiffArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnDiffArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnDiffArgs.InitializeStub">
            <summary>初始化 type StubSvnDiffArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnDiffArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnDiffArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnDiffArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnDiffArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnDiffArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnDiffArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnDiffArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnDiffArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnDiffArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnDiffArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnDiffArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnDiffException">
            <summary>SharpSvn.SvnDiffException 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnDiffException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnDiffException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnDiffException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnDiffException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnDiffException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubSvnDiffException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnDiffException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubSvnDiffException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnDiffException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnDiffException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnDiffException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnDiffException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnDiffException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnDiffException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnDiffException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnDiffException.InitializeStub">
            <summary>初始化 type StubSvnDiffException 的新实例</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnDiffException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnDiffException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnDiffException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnDiffException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnDiffException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnDiffException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnDiffException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnDiffException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnDiffException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnDiffException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnDiffException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnDiffException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnDiffException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnDiffException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnDiffMergeArgs">
            <summary>SharpSvn.SvnDiffMergeArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnDiffMergeArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnDiffMergeArgs.InitializeStub">
            <summary>初始化 type StubSvnDiffMergeArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnDiffMergeArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnDiffMergeArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnDiffMergeArgs.OnConflict(SharpSvn.SvnConflictEventArgs)">
            <summary>设置 SvnClientArgsWithConflict.OnConflict(SvnConflictEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnDiffMergeArgs.OnConflictSvnConflictEventArgs">
            <summary>设置 SvnClientArgsWithConflict.OnConflict(SvnConflictEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnDiffMergeArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnDiffMergeArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnDiffMergeArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnDiffMergeArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnDiffMergeArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnDiffMergeArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnDiffMergeArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnDiffMergeArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnDiffMergeArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnDiffSummaryArgs">
            <summary>SharpSvn.SvnDiffSummaryArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnDiffSummaryArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnDiffSummaryArgs.InitializeStub">
            <summary>初始化 type StubSvnDiffSummaryArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnDiffSummaryArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnDiffSummaryArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnDiffSummaryArgs.OnDiffSummary(SharpSvn.SvnDiffSummaryEventArgs)">
            <summary>设置 SvnDiffSummaryArgs.OnDiffSummary(SvnDiffSummaryEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnDiffSummaryArgs.OnDiffSummarySvnDiffSummaryEventArgs">
            <summary>设置 SvnDiffSummaryArgs.OnDiffSummary(SvnDiffSummaryEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnDiffSummaryArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnDiffSummaryArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnDiffSummaryArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnDiffSummaryArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnDiffSummaryArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnDiffSummaryArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnDiffSummaryArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnDiffSummaryArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnDiffSummaryArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnDiskFullException">
            <summary>SharpSvn.SvnDiskFullException 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnDiskFullException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnDiskFullException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnDiskFullException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnDiskFullException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnDiskFullException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubSvnDiskFullException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnDiskFullException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubSvnDiskFullException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnDiskFullException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnDiskFullException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnDiskFullException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnDiskFullException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnDiskFullException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnDiskFullException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnDiskFullException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnDiskFullException.InitializeStub">
            <summary>初始化 type StubSvnDiskFullException 的新实例</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnDiskFullException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnDiskFullException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnDiskFullException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnDiskFullException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnDiskFullException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnDiskFullException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnDiskFullException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnDiskFullException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnDiskFullException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnDiskFullException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnDiskFullException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnDiskFullException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnDiskFullException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnDiskFullException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnDumpRepositoryArgs">
            <summary>SharpSvn.SvnDumpRepositoryArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnDumpRepositoryArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnDumpRepositoryArgs.InitializeStub">
            <summary>初始化 type StubSvnDumpRepositoryArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnDumpRepositoryArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnDumpRepositoryArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnDumpRepositoryArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnDumpRepositoryArgs.OnNotify(SharpSvn.SvnRepositoryNotifyEventArgs)">
            <summary>设置 SvnRepositoryClientArgs.OnNotify(SvnRepositoryNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnDumpRepositoryArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnDumpRepositoryArgs.OnNotifySvnRepositoryNotifyEventArgs">
            <summary>设置 SvnRepositoryClientArgs.OnNotify(SvnRepositoryNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnDumpRepositoryArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnDumpRepositoryArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnDumpRepositoryArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnDumpRepositoryArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnDumpRepositoryArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnDumpRepositoryArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnDumpRepositoryArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnEntryException">
            <summary>SharpSvn.SvnEntryException 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnEntryException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnEntryException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnEntryException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnEntryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnEntryException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubSvnEntryException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnEntryException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubSvnEntryException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnEntryException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnEntryException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnEntryException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnEntryException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnEntryException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnEntryException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnEntryException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnEntryException.InitializeStub">
            <summary>初始化 type StubSvnEntryException 的新实例</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnEntryException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnEntryException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnEntryException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnEntryException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnEntryException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnEntryException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnEntryException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnEntryException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnEntryException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnEntryException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnEntryException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnEntryException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnEntryException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnEntryException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnEntryNotFoundException">
            <summary>SharpSvn.SvnEntryNotFoundException 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnEntryNotFoundException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnEntryNotFoundException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnEntryNotFoundException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnEntryNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnEntryNotFoundException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubSvnEntryNotFoundException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnEntryNotFoundException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubSvnEntryNotFoundException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnEntryNotFoundException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnEntryNotFoundException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnEntryNotFoundException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnEntryNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnEntryNotFoundException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnEntryNotFoundException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnEntryNotFoundException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnEntryNotFoundException.InitializeStub">
            <summary>初始化 type StubSvnEntryNotFoundException 的新实例</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnEntryNotFoundException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnEntryNotFoundException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnEntryNotFoundException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnEntryNotFoundException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnEntryNotFoundException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnEntryNotFoundException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnEntryNotFoundException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnEntryNotFoundException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnEntryNotFoundException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnEntryNotFoundException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnEntryNotFoundException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnEntryNotFoundException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnEntryNotFoundException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnEntryNotFoundException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnErrorEventArgs">
            <summary>SharpSvn.SvnErrorEventArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnErrorEventArgs.#ctor(SharpSvn.SvnException)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnErrorEventArgs.Detach(System.Boolean)">
            <summary>设置 SvnEventArgs.Detach(Boolean keepProperties) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnErrorEventArgs.DetachBoolean">
            <summary>设置 SvnEventArgs.Detach(Boolean keepProperties) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnErrorEventArgs.InitializeStub">
            <summary>初始化 type StubSvnErrorEventArgs 的新实例</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnErrorEventArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnErrorEventArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnErrorEventArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnEventArgs">
            <summary>SharpSvn.SvnEventArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnEventArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnEventArgs.Detach(System.Boolean)">
            <summary>设置 SvnEventArgs.Detach(Boolean keepProperties) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnEventArgs.DetachBoolean">
            <summary>设置 SvnEventArgs.Detach(Boolean keepProperties) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnEventArgs.InitializeStub">
            <summary>初始化 type StubSvnEventArgs 的新实例</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnEventArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnEventArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnEventArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnException">
            <summary>SharpSvn.SvnException 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubSvnException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubSvnException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnException.InitializeStub">
            <summary>初始化 type StubSvnException 的新实例</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnExportArgs">
            <summary>SharpSvn.SvnExportArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnExportArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnExportArgs.InitializeStub">
            <summary>初始化 type StubSvnExportArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnExportArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnExportArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnExportArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnExportArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnExportArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnExportArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnExportArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnExportArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnExportArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnExportArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnExportArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnFileSystemException">
            <summary>SharpSvn.SvnFileSystemException 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnFileSystemException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnFileSystemException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnFileSystemException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnFileSystemException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnFileSystemException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubSvnFileSystemException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnFileSystemException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubSvnFileSystemException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnFileSystemException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnFileSystemException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnFileSystemException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnFileSystemException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnFileSystemException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnFileSystemException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnFileSystemException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnFileSystemException.InitializeStub">
            <summary>初始化 type StubSvnFileSystemException 的新实例</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnFileSystemException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnFileSystemException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnFileSystemException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnFileSystemException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnFileSystemException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnFileSystemException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnFileSystemException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnFileSystemException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnFileSystemException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnFileSystemException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnFileSystemException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnFileSystemException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnFileSystemException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnFileSystemException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnFileSystemLockException">
            <summary>SharpSvn.SvnFileSystemLockException 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnFileSystemLockException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnFileSystemLockException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnFileSystemLockException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnFileSystemLockException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnFileSystemLockException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubSvnFileSystemLockException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnFileSystemLockException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubSvnFileSystemLockException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnFileSystemLockException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnFileSystemLockException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnFileSystemLockException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnFileSystemLockException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnFileSystemLockException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnFileSystemLockException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnFileSystemLockException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnFileSystemLockException.InitializeStub">
            <summary>初始化 type StubSvnFileSystemLockException 的新实例</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnFileSystemLockException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnFileSystemLockException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnFileSystemLockException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnFileSystemLockException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnFileSystemLockException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnFileSystemLockException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnFileSystemLockException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnFileSystemLockException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnFileSystemLockException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnFileSystemLockException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnFileSystemLockException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnFileSystemLockException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnFileSystemLockException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnFileSystemLockException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnFileSystemNodeTypeException">
            <summary>SharpSvn.SvnFileSystemNodeTypeException 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnFileSystemNodeTypeException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnFileSystemNodeTypeException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnFileSystemNodeTypeException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnFileSystemNodeTypeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnFileSystemNodeTypeException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubSvnFileSystemNodeTypeException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnFileSystemNodeTypeException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubSvnFileSystemNodeTypeException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnFileSystemNodeTypeException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnFileSystemNodeTypeException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnFileSystemNodeTypeException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnFileSystemNodeTypeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnFileSystemNodeTypeException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnFileSystemNodeTypeException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnFileSystemNodeTypeException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnFileSystemNodeTypeException.InitializeStub">
            <summary>初始化 type StubSvnFileSystemNodeTypeException 的新实例</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnFileSystemNodeTypeException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnFileSystemNodeTypeException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnFileSystemNodeTypeException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnFileSystemNodeTypeException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnFileSystemNodeTypeException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnFileSystemNodeTypeException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnFileSystemNodeTypeException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnFileSystemNodeTypeException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnFileSystemNodeTypeException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnFileSystemNodeTypeException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnFileSystemNodeTypeException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnFileSystemNodeTypeException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnFileSystemNodeTypeException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnFileSystemNodeTypeException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnFileSystemOutOfDateException">
            <summary>SharpSvn.SvnFileSystemOutOfDateException 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnFileSystemOutOfDateException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnFileSystemOutOfDateException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnFileSystemOutOfDateException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnFileSystemOutOfDateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnFileSystemOutOfDateException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubSvnFileSystemOutOfDateException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnFileSystemOutOfDateException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubSvnFileSystemOutOfDateException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnFileSystemOutOfDateException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnFileSystemOutOfDateException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnFileSystemOutOfDateException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnFileSystemOutOfDateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnFileSystemOutOfDateException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnFileSystemOutOfDateException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnFileSystemOutOfDateException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnFileSystemOutOfDateException.InitializeStub">
            <summary>初始化 type StubSvnFileSystemOutOfDateException 的新实例</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnFileSystemOutOfDateException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnFileSystemOutOfDateException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnFileSystemOutOfDateException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnFileSystemOutOfDateException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnFileSystemOutOfDateException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnFileSystemOutOfDateException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnFileSystemOutOfDateException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnFileSystemOutOfDateException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnFileSystemOutOfDateException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnFileSystemOutOfDateException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnFileSystemOutOfDateException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnFileSystemOutOfDateException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnFileSystemOutOfDateException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnFileSystemOutOfDateException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnFileVersionWriteArgs">
            <summary>SharpSvn.SvnFileVersionWriteArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnFileVersionWriteArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnFileVersionWriteArgs.InitializeStub">
            <summary>初始化 type StubSvnFileVersionWriteArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnFileVersionWriteArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnFileVersionWriteArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnFileVersionWriteArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnFileVersionWriteArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnFileVersionWriteArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnFileVersionWriteArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnFileVersionWriteArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnFileVersionWriteArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnFileVersionWriteArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnFileVersionWriteArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnFileVersionWriteArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnFileVersionsArgs">
            <summary>SharpSvn.SvnFileVersionsArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnFileVersionsArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnFileVersionsArgs.InitializeStub">
            <summary>初始化 type StubSvnFileVersionsArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnFileVersionsArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnFileVersionsArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnFileVersionsArgs.OnFileVersion(SharpSvn.SvnFileVersionEventArgs)">
            <summary>设置 SvnFileVersionsArgs.OnFileVersion(SvnFileVersionEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnFileVersionsArgs.OnFileVersionSvnFileVersionEventArgs">
            <summary>设置 SvnFileVersionsArgs.OnFileVersion(SvnFileVersionEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnFileVersionsArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnFileVersionsArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnFileVersionsArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnFileVersionsArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnFileVersionsArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnFileVersionsArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnFileVersionsArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnFileVersionsArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnFileVersionsArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnFormatException">
            <summary>SharpSvn.SvnFormatException 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnFormatException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnFormatException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnFormatException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnFormatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnFormatException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubSvnFormatException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnFormatException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubSvnFormatException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnFormatException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnFormatException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnFormatException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnFormatException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnFormatException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnFormatException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnFormatException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnFormatException.InitializeStub">
            <summary>初始化 type StubSvnFormatException 的新实例</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnFormatException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnFormatException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnFormatException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnFormatException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnFormatException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnFormatException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnFormatException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnFormatException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnFormatException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnFormatException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnFormatException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnFormatException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnFormatException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnFormatException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnGetAppliedMergeInfoArgs">
            <summary>SharpSvn.SvnGetAppliedMergeInfoArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnGetAppliedMergeInfoArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnGetAppliedMergeInfoArgs.InitializeStub">
            <summary>初始化 type StubSvnGetAppliedMergeInfoArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnGetAppliedMergeInfoArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnGetAppliedMergeInfoArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnGetAppliedMergeInfoArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnGetAppliedMergeInfoArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnGetAppliedMergeInfoArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnGetAppliedMergeInfoArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnGetAppliedMergeInfoArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnGetAppliedMergeInfoArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnGetAppliedMergeInfoArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnGetAppliedMergeInfoArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnGetAppliedMergeInfoArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnGetCapabilitiesArgs">
            <summary>SharpSvn.SvnGetCapabilitiesArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnGetCapabilitiesArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnGetCapabilitiesArgs.InitializeStub">
            <summary>初始化 type StubSvnGetCapabilitiesArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnGetCapabilitiesArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnGetCapabilitiesArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnGetCapabilitiesArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnGetCapabilitiesArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnGetCapabilitiesArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnGetCapabilitiesArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnGetCapabilitiesArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnGetCapabilitiesArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnGetCapabilitiesArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnGetCapabilitiesArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnGetCapabilitiesArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnGetPropertyArgs">
            <summary>SharpSvn.SvnGetPropertyArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnGetPropertyArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnGetPropertyArgs.InitializeStub">
            <summary>初始化 type StubSvnGetPropertyArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnGetPropertyArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnGetPropertyArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnGetPropertyArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnGetPropertyArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnGetPropertyArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnGetPropertyArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnGetPropertyArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnGetPropertyArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnGetPropertyArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnGetPropertyArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnGetPropertyArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnGetRevisionPropertyArgs">
            <summary>SharpSvn.SvnGetRevisionPropertyArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnGetRevisionPropertyArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnGetRevisionPropertyArgs.InitializeStub">
            <summary>初始化 type StubSvnGetRevisionPropertyArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnGetRevisionPropertyArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnGetRevisionPropertyArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnGetRevisionPropertyArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnGetRevisionPropertyArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnGetRevisionPropertyArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnGetRevisionPropertyArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnGetRevisionPropertyArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnGetRevisionPropertyArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnGetRevisionPropertyArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnGetRevisionPropertyArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnGetRevisionPropertyArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnGetSuggestedMergeSourcesArgs">
            <summary>SharpSvn.SvnGetSuggestedMergeSourcesArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnGetSuggestedMergeSourcesArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnGetSuggestedMergeSourcesArgs.InitializeStub">
            <summary>初始化 type StubSvnGetSuggestedMergeSourcesArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnGetSuggestedMergeSourcesArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnGetSuggestedMergeSourcesArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnGetSuggestedMergeSourcesArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnGetSuggestedMergeSourcesArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnGetSuggestedMergeSourcesArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnGetSuggestedMergeSourcesArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnGetSuggestedMergeSourcesArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnGetSuggestedMergeSourcesArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnGetSuggestedMergeSourcesArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnGetSuggestedMergeSourcesArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnGetSuggestedMergeSourcesArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnGetWorkingCopyVersionArgs">
            <summary>SharpSvn.SvnGetWorkingCopyVersionArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnGetWorkingCopyVersionArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnGetWorkingCopyVersionArgs.InitializeStub">
            <summary>初始化 type StubSvnGetWorkingCopyVersionArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnGetWorkingCopyVersionArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnGetWorkingCopyVersionArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnGetWorkingCopyVersionArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnGetWorkingCopyVersionArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnGetWorkingCopyVersionArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnGetWorkingCopyVersionArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnGetWorkingCopyVersionArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnGetWorkingCopyVersionArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnGetWorkingCopyVersionArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnGetWorkingCopyVersionArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnGetWorkingCopyVersionArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnHookArguments">
            <summary>SharpSvn.SvnHookArguments 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnHookArguments.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnHookArguments.InitializeStub">
            <summary>初始化 type StubSvnHookArguments 的新实例</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnHookArguments.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnHookArguments.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnHookArguments.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnHotCopyRepositoryArgs">
            <summary>SharpSvn.SvnHotCopyRepositoryArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnHotCopyRepositoryArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnHotCopyRepositoryArgs.InitializeStub">
            <summary>初始化 type StubSvnHotCopyRepositoryArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnHotCopyRepositoryArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnHotCopyRepositoryArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnHotCopyRepositoryArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnHotCopyRepositoryArgs.OnNotify(SharpSvn.SvnRepositoryNotifyEventArgs)">
            <summary>设置 SvnRepositoryClientArgs.OnNotify(SvnRepositoryNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnHotCopyRepositoryArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnHotCopyRepositoryArgs.OnNotifySvnRepositoryNotifyEventArgs">
            <summary>设置 SvnRepositoryClientArgs.OnNotify(SvnRepositoryNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnHotCopyRepositoryArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnHotCopyRepositoryArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnHotCopyRepositoryArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnHotCopyRepositoryArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnHotCopyRepositoryArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnHotCopyRepositoryArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnHotCopyRepositoryArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnIOException">
            <summary>SharpSvn.SvnIOException 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnIOException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnIOException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnIOException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnIOException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnIOException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubSvnIOException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnIOException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubSvnIOException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnIOException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnIOException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnIOException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnIOException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnIOException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnIOException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnIOException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnIOException.InitializeStub">
            <summary>初始化 type StubSvnIOException 的新实例</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnIOException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnIOException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnIOException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnIOException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnIOException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnIOException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnIOException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnIOException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnIOException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnIOException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnIOException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnIOException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnIOException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnIOException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnIllegalTargetException">
            <summary>SharpSvn.SvnIllegalTargetException 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnIllegalTargetException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnIllegalTargetException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnIllegalTargetException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnIllegalTargetException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnIllegalTargetException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubSvnIllegalTargetException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnIllegalTargetException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubSvnIllegalTargetException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnIllegalTargetException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnIllegalTargetException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnIllegalTargetException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnIllegalTargetException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnIllegalTargetException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnIllegalTargetException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnIllegalTargetException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnIllegalTargetException.InitializeStub">
            <summary>初始化 type StubSvnIllegalTargetException 的新实例</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnIllegalTargetException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnIllegalTargetException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnIllegalTargetException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnIllegalTargetException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnIllegalTargetException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnIllegalTargetException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnIllegalTargetException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnIllegalTargetException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnIllegalTargetException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnIllegalTargetException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnIllegalTargetException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnIllegalTargetException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnIllegalTargetException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnIllegalTargetException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnImportArgs">
            <summary>SharpSvn.SvnImportArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnImportArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnImportArgs.InitializeStub">
            <summary>初始化 type StubSvnImportArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnImportArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnImportArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnImportArgs.OnCommitted(SharpSvn.SvnCommittedEventArgs)">
            <summary>设置 SvnClientArgsWithCommit.OnCommitted(SvnCommittedEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnImportArgs.OnCommittedSvnCommittedEventArgs">
            <summary>设置 SvnClientArgsWithCommit.OnCommitted(SvnCommittedEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnImportArgs.OnCommitting(SharpSvn.SvnCommittingEventArgs)">
            <summary>设置 SvnClientArgsWithCommit.OnCommitting(SvnCommittingEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnImportArgs.OnCommittingSvnCommittingEventArgs">
            <summary>设置 SvnClientArgsWithCommit.OnCommitting(SvnCommittingEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnImportArgs.OnFilter(SharpSvn.SvnImportFilterEventArgs)">
            <summary>设置 SvnImportArgs.OnFilter(SvnImportFilterEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnImportArgs.OnFilterSvnImportFilterEventArgs">
            <summary>设置 SvnImportArgs.OnFilter(SvnImportFilterEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnImportArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnImportArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnImportArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnImportArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnImportArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnImportArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnImportArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnImportArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnImportArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnInfoArgs">
            <summary>SharpSvn.SvnInfoArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnInfoArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnInfoArgs.InitializeStub">
            <summary>初始化 type StubSvnInfoArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnInfoArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnInfoArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnInfoArgs.OnInfo(SharpSvn.SvnInfoEventArgs)">
            <summary>设置 SvnInfoArgs.OnInfo(SvnInfoEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnInfoArgs.OnInfoSvnInfoEventArgs">
            <summary>设置 SvnInfoArgs.OnInfo(SvnInfoEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnInfoArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnInfoArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnInfoArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnInfoArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnInfoArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnInfoArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnInfoArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnInfoArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnInfoArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnInheritedPropertyListArgs">
            <summary>SharpSvn.SvnInheritedPropertyListArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnInheritedPropertyListArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnInheritedPropertyListArgs.InitializeStub">
            <summary>初始化 type StubSvnInheritedPropertyListArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnInheritedPropertyListArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnInheritedPropertyListArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnInheritedPropertyListArgs.OnList(SharpSvn.SvnInheritedPropertyListEventArgs)">
            <summary>设置 SvnInheritedPropertyListArgs.OnList(SvnInheritedPropertyListEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnInheritedPropertyListArgs.OnListSvnInheritedPropertyListEventArgs">
            <summary>设置 SvnInheritedPropertyListArgs.OnList(SvnInheritedPropertyListEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnInheritedPropertyListArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnInheritedPropertyListArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnInheritedPropertyListArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnInheritedPropertyListArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnInheritedPropertyListArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnInheritedPropertyListArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnInheritedPropertyListArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnInheritedPropertyListArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnInheritedPropertyListArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnInvalidNodeKindException">
            <summary>SharpSvn.SvnInvalidNodeKindException 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnInvalidNodeKindException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnInvalidNodeKindException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnInvalidNodeKindException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnInvalidNodeKindException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnInvalidNodeKindException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubSvnInvalidNodeKindException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnInvalidNodeKindException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubSvnInvalidNodeKindException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnInvalidNodeKindException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnInvalidNodeKindException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnInvalidNodeKindException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnInvalidNodeKindException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnInvalidNodeKindException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnInvalidNodeKindException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnInvalidNodeKindException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnInvalidNodeKindException.InitializeStub">
            <summary>初始化 type StubSvnInvalidNodeKindException 的新实例</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnInvalidNodeKindException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnInvalidNodeKindException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnInvalidNodeKindException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnInvalidNodeKindException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnInvalidNodeKindException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnInvalidNodeKindException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnInvalidNodeKindException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnInvalidNodeKindException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnInvalidNodeKindException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnInvalidNodeKindException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnInvalidNodeKindException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnInvalidNodeKindException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnInvalidNodeKindException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnInvalidNodeKindException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnListArgs">
            <summary>SharpSvn.SvnListArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnListArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnListArgs.InitializeStub">
            <summary>初始化 type StubSvnListArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnListArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnListArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnListArgs.OnList(SharpSvn.SvnListEventArgs)">
            <summary>设置 SvnListArgs.OnList(SvnListEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnListArgs.OnListSvnListEventArgs">
            <summary>设置 SvnListArgs.OnList(SvnListEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnListArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnListArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnListArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnListArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnListArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnListArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnListArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnListArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnListArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnListChangeListArgs">
            <summary>SharpSvn.SvnListChangeListArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnListChangeListArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnListChangeListArgs.InitializeStub">
            <summary>初始化 type StubSvnListChangeListArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnListChangeListArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnListChangeListArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnListChangeListArgs.OnListChangeList(SharpSvn.SvnListChangeListEventArgs)">
            <summary>设置 SvnListChangeListArgs.OnListChangeList(SvnListChangeListEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnListChangeListArgs.OnListChangeListSvnListChangeListEventArgs">
            <summary>设置 SvnListChangeListArgs.OnListChangeList(SvnListChangeListEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnListChangeListArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnListChangeListArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnListChangeListArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnListChangeListArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnListChangeListArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnListChangeListArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnListChangeListArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnListChangeListArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnListChangeListArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnLoadRepositoryArgs">
            <summary>SharpSvn.SvnLoadRepositoryArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnLoadRepositoryArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnLoadRepositoryArgs.InitializeStub">
            <summary>初始化 type StubSvnLoadRepositoryArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnLoadRepositoryArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnLoadRepositoryArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnLoadRepositoryArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnLoadRepositoryArgs.OnNotify(SharpSvn.SvnRepositoryNotifyEventArgs)">
            <summary>设置 SvnRepositoryClientArgs.OnNotify(SvnRepositoryNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnLoadRepositoryArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnLoadRepositoryArgs.OnNotifySvnRepositoryNotifyEventArgs">
            <summary>设置 SvnRepositoryClientArgs.OnNotify(SvnRepositoryNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnLoadRepositoryArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnLoadRepositoryArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnLoadRepositoryArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnLoadRepositoryArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnLoadRepositoryArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnLoadRepositoryArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnLoadRepositoryArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnLockArgs">
            <summary>SharpSvn.SvnLockArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnLockArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnLockArgs.InitializeStub">
            <summary>初始化 type StubSvnLockArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnLockArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnLockArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnLockArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnLockArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnLockArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnLockArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnLockArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnLockArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnLockArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnLockArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnLockArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnLogArgs">
            <summary>SharpSvn.SvnLogArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnLogArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnLogArgs.#ctor(SharpSvn.SvnRevisionRange)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnLogArgs.InitializeStub">
            <summary>初始化 type StubSvnLogArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnLogArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnLogArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnLogArgs.OnLog(SharpSvn.SvnLogEventArgs)">
            <summary>设置 SvnLogArgs.OnLog(SvnLogEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnLogArgs.OnLogSvnLogEventArgs">
            <summary>设置 SvnLogArgs.OnLog(SvnLogEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnLogArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnLogArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnLogArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnLogArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnLogArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnLogArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnLogArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnLogArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnLogArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnLookClient">
            <summary>SharpSvn.SvnLookClient 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnLookClient.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnLookClient.AttachBackingFieldToSite">
            <summary>附加委托以将 StubSvnLookClient.Site 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnLookClient.Dispose(System.Boolean)">
            <summary>设置 SvnLookClient.Dispose(Boolean ) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnLookClient.DisposeBoolean">
            <summary>设置 SvnLookClient.Dispose(Boolean ) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnLookClient.InitializeStub">
            <summary>初始化 type StubSvnLookClient 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnLookClient.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnLookClient.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnLookClient.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnLookClient.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnLookClient.SiteGet">
            <summary>设置 SvnClientContext.get_Site() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnLookClient.SiteSetISite">
            <summary>设置 SvnClientContext.set_Site(ISite value) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnLookClient.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnLookClient.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnLookClient.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnLookClient.Site">
            <summary>设置 SvnClientContext.get_Site() 的 stub</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnLookClientArgs">
            <summary>SharpSvn.SvnLookClientArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnLookClientArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnLookClientArgs.CommandTypeGet">
            <summary>设置 SvnClientArgs.get_CommandType() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnLookClientArgs.InitializeStub">
            <summary>初始化 type StubSvnLookClientArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnLookClientArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnLookClientArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnLookClientArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnLookClientArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnLookClientArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnLookClientArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnLookClientArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnLookClientArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnLookClientArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnLookClientArgs.CommandType">
            <summary>设置 SvnClientArgs.get_CommandType() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnLookClientArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnLookClientArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnLookGetPropertyArgs">
            <summary>SharpSvn.SvnLookGetPropertyArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnLookGetPropertyArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnLookGetPropertyArgs.InitializeStub">
            <summary>初始化 type StubSvnLookGetPropertyArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnLookGetPropertyArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnLookGetPropertyArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnLookGetPropertyArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnLookGetPropertyArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnLookGetPropertyArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnLookGetPropertyArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnLookGetPropertyArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnLookGetPropertyArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnLookGetPropertyArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnLookGetPropertyArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnLookGetPropertyArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnLookListArgs">
            <summary>SharpSvn.SvnLookListArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnLookListArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnLookListArgs.InitializeStub">
            <summary>初始化 type StubSvnLookListArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnLookListArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnLookListArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnLookListArgs.OnList(SharpSvn.SvnLookListEventArgs)">
            <summary>设置 SvnLookListArgs.OnList(SvnLookListEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnLookListArgs.OnListSvnLookListEventArgs">
            <summary>设置 SvnLookListArgs.OnList(SvnLookListEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnLookListArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnLookListArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnLookListArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnLookListArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnLookListArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnLookListArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnLookListArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnLookListArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnLookListArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnLookPropertyListArgs">
            <summary>SharpSvn.SvnLookPropertyListArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnLookPropertyListArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnLookPropertyListArgs.InitializeStub">
            <summary>初始化 type StubSvnLookPropertyListArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnLookPropertyListArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnLookPropertyListArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnLookPropertyListArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnLookPropertyListArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnLookPropertyListArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnLookPropertyListArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnLookPropertyListArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnLookPropertyListArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnLookPropertyListArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnLookPropertyListArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnLookPropertyListArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnLookRevisionPropertyArgs">
            <summary>SharpSvn.SvnLookRevisionPropertyArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnLookRevisionPropertyArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnLookRevisionPropertyArgs.InitializeStub">
            <summary>初始化 type StubSvnLookRevisionPropertyArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnLookRevisionPropertyArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnLookRevisionPropertyArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnLookRevisionPropertyArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnLookRevisionPropertyArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnLookRevisionPropertyArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnLookRevisionPropertyArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnLookRevisionPropertyArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnLookRevisionPropertyArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnLookRevisionPropertyArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnLookRevisionPropertyArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnLookRevisionPropertyArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnLookWriteArgs">
            <summary>SharpSvn.SvnLookWriteArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnLookWriteArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnLookWriteArgs.InitializeStub">
            <summary>初始化 type StubSvnLookWriteArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnLookWriteArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnLookWriteArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnLookWriteArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnLookWriteArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnLookWriteArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnLookWriteArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnLookWriteArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnLookWriteArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnLookWriteArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnLookWriteArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnLookWriteArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnMergeArgs">
            <summary>SharpSvn.SvnMergeArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMergeArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMergeArgs.InitializeStub">
            <summary>初始化 type StubSvnMergeArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMergeArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnMergeArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMergeArgs.OnConflict(SharpSvn.SvnConflictEventArgs)">
            <summary>设置 SvnClientArgsWithConflict.OnConflict(SvnConflictEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnMergeArgs.OnConflictSvnConflictEventArgs">
            <summary>设置 SvnClientArgsWithConflict.OnConflict(SvnConflictEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMergeArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnMergeArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMergeArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnMergeArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMergeArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnMergeArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnMergeArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnMergeArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnMergeArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnMergeBaseArgs">
            <summary>SharpSvn.SvnMergeBaseArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMergeBaseArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnMergeBaseArgs.CommandTypeGet">
            <summary>设置 SvnClientArgs.get_CommandType() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMergeBaseArgs.InitializeStub">
            <summary>初始化 type StubSvnMergeBaseArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMergeBaseArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnMergeBaseArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMergeBaseArgs.OnConflict(SharpSvn.SvnConflictEventArgs)">
            <summary>设置 SvnClientArgsWithConflict.OnConflict(SvnConflictEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnMergeBaseArgs.OnConflictSvnConflictEventArgs">
            <summary>设置 SvnClientArgsWithConflict.OnConflict(SvnConflictEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMergeBaseArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnMergeBaseArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMergeBaseArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnMergeBaseArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMergeBaseArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnMergeBaseArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnMergeBaseArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnMergeBaseArgs.CommandType">
            <summary>设置 SvnClientArgs.get_CommandType() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnMergeBaseArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnMergeBaseArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnMergeDiffArgs">
            <summary>SharpSvn.SvnMergeDiffArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMergeDiffArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMergeDiffArgs.InitializeStub">
            <summary>初始化 type StubSvnMergeDiffArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMergeDiffArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnMergeDiffArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMergeDiffArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnMergeDiffArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMergeDiffArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnMergeDiffArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMergeDiffArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnMergeDiffArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnMergeDiffArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnMergeDiffArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnMergeDiffArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnMergeIntersectArgs">
            <summary>SharpSvn.SvnMergeIntersectArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMergeIntersectArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMergeIntersectArgs.InitializeStub">
            <summary>初始化 type StubSvnMergeIntersectArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMergeIntersectArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnMergeIntersectArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMergeIntersectArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnMergeIntersectArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMergeIntersectArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnMergeIntersectArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMergeIntersectArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnMergeIntersectArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnMergeIntersectArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnMergeIntersectArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnMergeIntersectArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnMergeRemoveArgs">
            <summary>SharpSvn.SvnMergeRemoveArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMergeRemoveArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMergeRemoveArgs.InitializeStub">
            <summary>初始化 type StubSvnMergeRemoveArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMergeRemoveArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnMergeRemoveArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMergeRemoveArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnMergeRemoveArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMergeRemoveArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnMergeRemoveArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMergeRemoveArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnMergeRemoveArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnMergeRemoveArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnMergeRemoveArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnMergeRemoveArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnMergeSourcesCollection">
            <summary>SharpSvn.SvnMergeSourcesCollection 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMergeSourcesCollection.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMergeSourcesCollection.ClearItems">
            <summary>设置 Collection`1.ClearItems() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnMergeSourcesCollection.ClearItems01">
            <summary>设置 Collection`1.ClearItems() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMergeSourcesCollection.InitializeStub">
            <summary>初始化 type StubSvnMergeSourcesCollection 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMergeSourcesCollection.InsertItem(System.Int32,SharpSvn.SvnMergeSource)">
            <summary>设置 Collection`1.InsertItem(Int32 index, !0 item) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnMergeSourcesCollection.InsertItemInt32SvnMergeSource">
            <summary>设置 Collection`1.InsertItem(Int32 index, !0 item) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMergeSourcesCollection.RemoveItem(System.Int32)">
            <summary>设置 Collection`1.RemoveItem(Int32 index) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnMergeSourcesCollection.RemoveItemInt32">
            <summary>设置 Collection`1.RemoveItem(Int32 index) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMergeSourcesCollection.SetItem(System.Int32,SharpSvn.SvnMergeSource)">
            <summary>设置 Collection`1.SetItem(Int32 index, !0 item) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnMergeSourcesCollection.SetItemInt32SvnMergeSource">
            <summary>设置 Collection`1.SetItem(Int32 index, !0 item) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnMergeSourcesCollection.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnMergeSourcesCollection.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnMergeSourcesCollection.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnMergesEligibleArgs">
            <summary>SharpSvn.SvnMergesEligibleArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMergesEligibleArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMergesEligibleArgs.InitializeStub">
            <summary>初始化 type StubSvnMergesEligibleArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMergesEligibleArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnMergesEligibleArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMergesEligibleArgs.OnMergesEligible(SharpSvn.SvnMergesEligibleEventArgs)">
            <summary>设置 SvnMergesEligibleArgs.OnMergesEligible(SvnMergesEligibleEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnMergesEligibleArgs.OnMergesEligibleSvnMergesEligibleEventArgs">
            <summary>设置 SvnMergesEligibleArgs.OnMergesEligible(SvnMergesEligibleEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMergesEligibleArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnMergesEligibleArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMergesEligibleArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnMergesEligibleArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMergesEligibleArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnMergesEligibleArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnMergesEligibleArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnMergesEligibleArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnMergesEligibleArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnMergesMergedArgs">
            <summary>SharpSvn.SvnMergesMergedArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMergesMergedArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMergesMergedArgs.InitializeStub">
            <summary>初始化 type StubSvnMergesMergedArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMergesMergedArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnMergesMergedArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMergesMergedArgs.OnMergesMerged(SharpSvn.SvnMergesMergedEventArgs)">
            <summary>设置 SvnMergesMergedArgs.OnMergesMerged(SvnMergesMergedEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnMergesMergedArgs.OnMergesMergedSvnMergesMergedEventArgs">
            <summary>设置 SvnMergesMergedArgs.OnMergesMerged(SvnMergesMergedEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMergesMergedArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnMergesMergedArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMergesMergedArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnMergesMergedArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMergesMergedArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnMergesMergedArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnMergesMergedArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnMergesMergedArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnMergesMergedArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnMoveArgs">
            <summary>SharpSvn.SvnMoveArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMoveArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMoveArgs.InitializeStub">
            <summary>初始化 type StubSvnMoveArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMoveArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnMoveArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMoveArgs.OnCommitted(SharpSvn.SvnCommittedEventArgs)">
            <summary>设置 SvnClientArgsWithCommit.OnCommitted(SvnCommittedEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnMoveArgs.OnCommittedSvnCommittedEventArgs">
            <summary>设置 SvnClientArgsWithCommit.OnCommitted(SvnCommittedEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMoveArgs.OnCommitting(SharpSvn.SvnCommittingEventArgs)">
            <summary>设置 SvnClientArgsWithCommit.OnCommitting(SvnCommittingEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnMoveArgs.OnCommittingSvnCommittingEventArgs">
            <summary>设置 SvnClientArgsWithCommit.OnCommitting(SvnCommittingEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMoveArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnMoveArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMoveArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnMoveArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMoveArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnMoveArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnMoveArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnMoveArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnMoveArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnMultiCommandClient">
            <summary>SharpSvn.SvnMultiCommandClient 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMultiCommandClient.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMultiCommandClient.#ctor(SharpSvn.SvnClient)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMultiCommandClient.#ctor(System.Uri)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMultiCommandClient.#ctor(System.Uri,SharpSvn.SvnRepositoryOperationArgs)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMultiCommandClient.AttachBackingFieldToSite">
            <summary>附加委托以将 StubSvnMultiCommandClient.Site 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMultiCommandClient.Dispose(System.Boolean)">
            <summary>设置 SvnMultiCommandClient.Dispose(Boolean ) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnMultiCommandClient.DisposeBoolean">
            <summary>设置 SvnMultiCommandClient.Dispose(Boolean ) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMultiCommandClient.InitializeStub">
            <summary>初始化 type StubSvnMultiCommandClient 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMultiCommandClient.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnMultiCommandClient.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnMultiCommandClient.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnMultiCommandClient.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMultiCommandClient.OnCommitted(SharpSvn.SvnCommittedEventArgs)">
            <summary>设置 SvnMultiCommandClient.OnCommitted(SvnCommittedEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnMultiCommandClient.OnCommittedSvnCommittedEventArgs">
            <summary>设置 SvnMultiCommandClient.OnCommitted(SvnCommittedEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMultiCommandClient.OnCommitting(SharpSvn.SvnCommittingEventArgs)">
            <summary>设置 SvnMultiCommandClient.OnCommitting(SvnCommittingEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnMultiCommandClient.OnCommittingSvnCommittingEventArgs">
            <summary>设置 SvnMultiCommandClient.OnCommitting(SvnCommittingEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMultiCommandClient.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnMultiCommandClient.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnMultiCommandClient.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnMultiCommandClient.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMultiCommandClient.OnProcessing(SharpSvn.SvnProcessingEventArgs)">
            <summary>设置 SvnMultiCommandClient.OnProcessing(SvnProcessingEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnMultiCommandClient.OnProcessingSvnProcessingEventArgs">
            <summary>设置 SvnMultiCommandClient.OnProcessing(SvnProcessingEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMultiCommandClient.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnMultiCommandClient.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnMultiCommandClient.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnMultiCommandClient.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnMultiCommandClient.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnMultiCommandClient.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnMultiCommandClient.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnMultiCommandClient.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnMultiCommandClient.SiteGet">
            <summary>设置 SvnClientContext.get_Site() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnMultiCommandClient.SiteSetISite">
            <summary>设置 SvnClientContext.set_Site(ISite value) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnMultiCommandClient.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnMultiCommandClient.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnMultiCommandClient.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnMultiCommandClient.Site">
            <summary>设置 SvnClientContext.get_Site() 的 stub</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnNodeException">
            <summary>SharpSvn.SvnNodeException 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnNodeException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnNodeException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnNodeException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnNodeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnNodeException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubSvnNodeException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnNodeException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubSvnNodeException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnNodeException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnNodeException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnNodeException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnNodeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnNodeException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnNodeException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnNodeException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnNodeException.InitializeStub">
            <summary>初始化 type StubSvnNodeException 的新实例</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnNodeException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnNodeException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnNodeException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnNodeException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnNodeException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnNodeException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnNodeException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnNodeException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnNodeException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnNodeException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnNodeException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnNodeException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnNodeException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnNodeException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnObstructedUpdateException">
            <summary>SharpSvn.SvnObstructedUpdateException 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnObstructedUpdateException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnObstructedUpdateException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnObstructedUpdateException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnObstructedUpdateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnObstructedUpdateException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubSvnObstructedUpdateException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnObstructedUpdateException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubSvnObstructedUpdateException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnObstructedUpdateException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnObstructedUpdateException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnObstructedUpdateException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnObstructedUpdateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnObstructedUpdateException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnObstructedUpdateException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnObstructedUpdateException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnObstructedUpdateException.InitializeStub">
            <summary>初始化 type StubSvnObstructedUpdateException 的新实例</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnObstructedUpdateException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnObstructedUpdateException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnObstructedUpdateException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnObstructedUpdateException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnObstructedUpdateException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnObstructedUpdateException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnObstructedUpdateException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnObstructedUpdateException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnObstructedUpdateException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnObstructedUpdateException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnObstructedUpdateException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnObstructedUpdateException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnObstructedUpdateException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnObstructedUpdateException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnOperationCanceledException">
            <summary>SharpSvn.SvnOperationCanceledException 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnOperationCanceledException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnOperationCanceledException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnOperationCanceledException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnOperationCanceledException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnOperationCanceledException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubSvnOperationCanceledException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnOperationCanceledException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubSvnOperationCanceledException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnOperationCanceledException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnOperationCanceledException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnOperationCanceledException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnOperationCanceledException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnOperationCanceledException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnOperationCanceledException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnOperationCanceledException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnOperationCanceledException.InitializeStub">
            <summary>初始化 type StubSvnOperationCanceledException 的新实例</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnOperationCanceledException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnOperationCanceledException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnOperationCanceledException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnOperationCanceledException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnOperationCanceledException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnOperationCanceledException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnOperationCanceledException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnOperationCanceledException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnOperationCanceledException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnOperationCanceledException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnOperationCanceledException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnOperationCanceledException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnOperationCanceledException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnOperationCanceledException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnOperationCompletedException">
            <summary>SharpSvn.SvnOperationCompletedException 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnOperationCompletedException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnOperationCompletedException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnOperationCompletedException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnOperationCompletedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnOperationCompletedException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubSvnOperationCompletedException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnOperationCompletedException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubSvnOperationCompletedException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnOperationCompletedException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnOperationCompletedException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnOperationCompletedException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnOperationCompletedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnOperationCompletedException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnOperationCompletedException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnOperationCompletedException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnOperationCompletedException.InitializeStub">
            <summary>初始化 type StubSvnOperationCompletedException 的新实例</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnOperationCompletedException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnOperationCompletedException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnOperationCompletedException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnOperationCompletedException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnOperationCompletedException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnOperationCompletedException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnOperationCompletedException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnOperationCompletedException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnOperationCompletedException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnOperationCompletedException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnOperationCompletedException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnOperationCompletedException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnOperationCompletedException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnOperationCompletedException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnPackRepositoryArgs">
            <summary>SharpSvn.SvnPackRepositoryArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnPackRepositoryArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnPackRepositoryArgs.InitializeStub">
            <summary>初始化 type StubSvnPackRepositoryArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnPackRepositoryArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnPackRepositoryArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnPackRepositoryArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnPackRepositoryArgs.OnNotify(SharpSvn.SvnRepositoryNotifyEventArgs)">
            <summary>设置 SvnRepositoryClientArgs.OnNotify(SvnRepositoryNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnPackRepositoryArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnPackRepositoryArgs.OnNotifySvnRepositoryNotifyEventArgs">
            <summary>设置 SvnRepositoryClientArgs.OnNotify(SvnRepositoryNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnPackRepositoryArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnPackRepositoryArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnPackRepositoryArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnPackRepositoryArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnPackRepositoryArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnPackRepositoryArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnPackRepositoryArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnPatchArgs">
            <summary>SharpSvn.SvnPatchArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnPatchArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnPatchArgs.InitializeStub">
            <summary>初始化 type StubSvnPatchArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnPatchArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnPatchArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnPatchArgs.OnFilter(SharpSvn.SvnPatchFilterEventArgs)">
            <summary>设置 SvnPatchArgs.OnFilter(SvnPatchFilterEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnPatchArgs.OnFilterSvnPatchFilterEventArgs">
            <summary>设置 SvnPatchArgs.OnFilter(SvnPatchFilterEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnPatchArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnPatchArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnPatchArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnPatchArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnPatchArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnPatchArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnPatchArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnPatchArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnPatchArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnPropertyListArgs">
            <summary>SharpSvn.SvnPropertyListArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnPropertyListArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnPropertyListArgs.InitializeStub">
            <summary>初始化 type StubSvnPropertyListArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnPropertyListArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnPropertyListArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnPropertyListArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnPropertyListArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnPropertyListArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnPropertyListArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnPropertyListArgs.OnPropertyList(SharpSvn.SvnPropertyListEventArgs)">
            <summary>设置 SvnPropertyListArgs.OnPropertyList(SvnPropertyListEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnPropertyListArgs.OnPropertyListSvnPropertyListEventArgs">
            <summary>设置 SvnPropertyListArgs.OnPropertyList(SvnPropertyListEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnPropertyListArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnPropertyListArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnPropertyListArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnPropertyListArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnPropertyListArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnRecoverRepositoryArgs">
            <summary>SharpSvn.SvnRecoverRepositoryArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRecoverRepositoryArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRecoverRepositoryArgs.InitializeStub">
            <summary>初始化 type StubSvnRecoverRepositoryArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRecoverRepositoryArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRecoverRepositoryArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRecoverRepositoryArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRecoverRepositoryArgs.OnNotify(SharpSvn.SvnRepositoryNotifyEventArgs)">
            <summary>设置 SvnRepositoryClientArgs.OnNotify(SvnRepositoryNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRecoverRepositoryArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRecoverRepositoryArgs.OnNotifySvnRepositoryNotifyEventArgs">
            <summary>设置 SvnRepositoryClientArgs.OnNotify(SvnRepositoryNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRecoverRepositoryArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRecoverRepositoryArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRecoverRepositoryArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRecoverRepositoryArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRecoverRepositoryArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRecoverRepositoryArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRecoverRepositoryArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnReintegrationMergeArgs">
            <summary>SharpSvn.SvnReintegrationMergeArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnReintegrationMergeArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnReintegrationMergeArgs.InitializeStub">
            <summary>初始化 type StubSvnReintegrationMergeArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnReintegrationMergeArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnReintegrationMergeArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnReintegrationMergeArgs.OnConflict(SharpSvn.SvnConflictEventArgs)">
            <summary>设置 SvnClientArgsWithConflict.OnConflict(SvnConflictEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnReintegrationMergeArgs.OnConflictSvnConflictEventArgs">
            <summary>设置 SvnClientArgsWithConflict.OnConflict(SvnConflictEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnReintegrationMergeArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnReintegrationMergeArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnReintegrationMergeArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnReintegrationMergeArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnReintegrationMergeArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnReintegrationMergeArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnReintegrationMergeArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnReintegrationMergeArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnReintegrationMergeArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnRelocateArgs">
            <summary>SharpSvn.SvnRelocateArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRelocateArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRelocateArgs.InitializeStub">
            <summary>初始化 type StubSvnRelocateArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRelocateArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRelocateArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRelocateArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRelocateArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRelocateArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRelocateArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRelocateArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRelocateArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRelocateArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRelocateArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRelocateArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnRemoveFromChangeListArgs">
            <summary>SharpSvn.SvnRemoveFromChangeListArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRemoveFromChangeListArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRemoveFromChangeListArgs.InitializeStub">
            <summary>初始化 type StubSvnRemoveFromChangeListArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRemoveFromChangeListArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRemoveFromChangeListArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRemoveFromChangeListArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRemoveFromChangeListArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRemoveFromChangeListArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRemoveFromChangeListArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRemoveFromChangeListArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRemoveFromChangeListArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRemoveFromChangeListArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRemoveFromChangeListArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRemoveFromChangeListArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnReplayRevisionArgs">
            <summary>SharpSvn.SvnReplayRevisionArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnReplayRevisionArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnReplayRevisionArgs.InitializeStub">
            <summary>初始化 type StubSvnReplayRevisionArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnReplayRevisionArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnReplayRevisionArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnReplayRevisionArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnReplayRevisionArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnReplayRevisionArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnReplayRevisionArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnReplayRevisionArgs.OnRevisionEnd(SharpSvn.SvnReplayRevisionEndEventArgs)">
            <summary>设置 SvnReplayRevisionArgs.OnRevisionEnd(SvnReplayRevisionEndEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnReplayRevisionArgs.OnRevisionEndSvnReplayRevisionEndEventArgs">
            <summary>设置 SvnReplayRevisionArgs.OnRevisionEnd(SvnReplayRevisionEndEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnReplayRevisionArgs.OnRevisionStart(SharpSvn.SvnReplayRevisionStartEventArgs)">
            <summary>设置 SvnReplayRevisionArgs.OnRevisionStart(SvnReplayRevisionStartEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnReplayRevisionArgs.OnRevisionStartSvnReplayRevisionStartEventArgs">
            <summary>设置 SvnReplayRevisionArgs.OnRevisionStart(SvnReplayRevisionStartEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnReplayRevisionArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnReplayRevisionArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnReplayRevisionArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnReplayRevisionArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnReplayRevisionArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnRepositoryClient">
            <summary>SharpSvn.SvnRepositoryClient 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryClient.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryClient.AttachBackingFieldToSite">
            <summary>附加委托以将 StubSvnRepositoryClient.Site 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryClient.Dispose(System.Boolean)">
            <summary>设置 SvnRepositoryClient.Dispose(Boolean ) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryClient.DisposeBoolean">
            <summary>设置 SvnRepositoryClient.Dispose(Boolean ) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryClient.InitializeStub">
            <summary>初始化 type StubSvnRepositoryClient 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryClient.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnRepositoryClient.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryClient.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnRepositoryClient.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryClient.OnNotify(SharpSvn.SvnRepositoryNotifyEventArgs)">
            <summary>设置 SvnRepositoryClient.OnNotify(SvnRepositoryNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryClient.OnNotifySvnRepositoryNotifyEventArgs">
            <summary>设置 SvnRepositoryClient.OnNotify(SvnRepositoryNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryClient.SiteGet">
            <summary>设置 SvnClientContext.get_Site() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryClient.SiteSetISite">
            <summary>设置 SvnClientContext.set_Site(ISite value) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRepositoryClient.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRepositoryClient.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRepositoryClient.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRepositoryClient.Site">
            <summary>设置 SvnClientContext.get_Site() 的 stub</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnRepositoryClientArgs">
            <summary>SharpSvn.SvnRepositoryClientArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryClientArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryClientArgs.CommandTypeGet">
            <summary>设置 SvnClientArgs.get_CommandType() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryClientArgs.InitializeStub">
            <summary>初始化 type StubSvnRepositoryClientArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryClientArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryClientArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryClientArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryClientArgs.OnNotify(SharpSvn.SvnRepositoryNotifyEventArgs)">
            <summary>设置 SvnRepositoryClientArgs.OnNotify(SvnRepositoryNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryClientArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryClientArgs.OnNotifySvnRepositoryNotifyEventArgs">
            <summary>设置 SvnRepositoryClientArgs.OnNotify(SvnRepositoryNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryClientArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryClientArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryClientArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryClientArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRepositoryClientArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRepositoryClientArgs.CommandType">
            <summary>设置 SvnClientArgs.get_CommandType() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRepositoryClientArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRepositoryClientArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnRepositoryCopyArgs">
            <summary>SharpSvn.SvnRepositoryCopyArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryCopyArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryCopyArgs.InitializeStub">
            <summary>初始化 type StubSvnRepositoryCopyArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryCopyArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryCopyArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryCopyArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryCopyArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryCopyArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryCopyArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryCopyArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryCopyArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRepositoryCopyArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRepositoryCopyArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRepositoryCopyArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnRepositoryCreateDirectoryArgs">
            <summary>SharpSvn.SvnRepositoryCreateDirectoryArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryCreateDirectoryArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryCreateDirectoryArgs.InitializeStub">
            <summary>初始化 type StubSvnRepositoryCreateDirectoryArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryCreateDirectoryArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryCreateDirectoryArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryCreateDirectoryArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryCreateDirectoryArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryCreateDirectoryArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryCreateDirectoryArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryCreateDirectoryArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryCreateDirectoryArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRepositoryCreateDirectoryArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRepositoryCreateDirectoryArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRepositoryCreateDirectoryArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnRepositoryCreateFileArgs">
            <summary>SharpSvn.SvnRepositoryCreateFileArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryCreateFileArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryCreateFileArgs.InitializeStub">
            <summary>初始化 type StubSvnRepositoryCreateFileArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryCreateFileArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryCreateFileArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryCreateFileArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryCreateFileArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryCreateFileArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryCreateFileArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryCreateFileArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryCreateFileArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRepositoryCreateFileArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRepositoryCreateFileArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRepositoryCreateFileArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnRepositoryDeleteArgs">
            <summary>SharpSvn.SvnRepositoryDeleteArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryDeleteArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryDeleteArgs.InitializeStub">
            <summary>初始化 type StubSvnRepositoryDeleteArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryDeleteArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryDeleteArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryDeleteArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryDeleteArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryDeleteArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryDeleteArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryDeleteArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryDeleteArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRepositoryDeleteArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRepositoryDeleteArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRepositoryDeleteArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnRepositoryException">
            <summary>SharpSvn.SvnRepositoryException 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubSvnRepositoryException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubSvnRepositoryException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryException.InitializeStub">
            <summary>初始化 type StubSvnRepositoryException 的新实例</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRepositoryException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRepositoryException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRepositoryException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRepositoryException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRepositoryException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRepositoryException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRepositoryException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRepositoryException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnRepositoryGetNodeKindArgs">
            <summary>SharpSvn.SvnRepositoryGetNodeKindArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryGetNodeKindArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryGetNodeKindArgs.InitializeStub">
            <summary>初始化 type StubSvnRepositoryGetNodeKindArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryGetNodeKindArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryGetNodeKindArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryGetNodeKindArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryGetNodeKindArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryGetNodeKindArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryGetNodeKindArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryGetNodeKindArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryGetNodeKindArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRepositoryGetNodeKindArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRepositoryGetNodeKindArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRepositoryGetNodeKindArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnRepositoryHookException">
            <summary>SharpSvn.SvnRepositoryHookException 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryHookException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryHookException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryHookException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryHookException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryHookException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubSvnRepositoryHookException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryHookException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubSvnRepositoryHookException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryHookException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryHookException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryHookException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryHookException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryHookException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryHookException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryHookException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryHookException.InitializeStub">
            <summary>初始化 type StubSvnRepositoryHookException 的新实例</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryHookException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryHookException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryHookException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryHookException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryHookException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryHookException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRepositoryHookException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRepositoryHookException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRepositoryHookException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRepositoryHookException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRepositoryHookException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRepositoryHookException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRepositoryHookException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRepositoryHookException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnRepositoryIOException">
            <summary>SharpSvn.SvnRepositoryIOException 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryIOException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryIOException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryIOException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryIOException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryIOException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubSvnRepositoryIOException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryIOException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubSvnRepositoryIOException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryIOException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryIOException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryIOException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryIOException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryIOException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryIOException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryIOException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryIOException.InitializeStub">
            <summary>初始化 type StubSvnRepositoryIOException 的新实例</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryIOException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryIOException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryIOException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryIOException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryIOException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryIOException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRepositoryIOException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRepositoryIOException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRepositoryIOException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRepositoryIOException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRepositoryIOException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRepositoryIOException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRepositoryIOException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRepositoryIOException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnRepositoryIOForbiddenException">
            <summary>SharpSvn.SvnRepositoryIOForbiddenException 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryIOForbiddenException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryIOForbiddenException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryIOForbiddenException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryIOForbiddenException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryIOForbiddenException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubSvnRepositoryIOForbiddenException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryIOForbiddenException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubSvnRepositoryIOForbiddenException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryIOForbiddenException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryIOForbiddenException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryIOForbiddenException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryIOForbiddenException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryIOForbiddenException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryIOForbiddenException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryIOForbiddenException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryIOForbiddenException.InitializeStub">
            <summary>初始化 type StubSvnRepositoryIOForbiddenException 的新实例</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryIOForbiddenException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryIOForbiddenException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryIOForbiddenException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryIOForbiddenException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryIOForbiddenException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryIOForbiddenException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRepositoryIOForbiddenException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRepositoryIOForbiddenException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRepositoryIOForbiddenException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRepositoryIOForbiddenException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRepositoryIOForbiddenException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRepositoryIOForbiddenException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRepositoryIOForbiddenException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRepositoryIOForbiddenException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnRepositoryMoveArgs">
            <summary>SharpSvn.SvnRepositoryMoveArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryMoveArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryMoveArgs.InitializeStub">
            <summary>初始化 type StubSvnRepositoryMoveArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryMoveArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryMoveArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryMoveArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryMoveArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryMoveArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryMoveArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryMoveArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryMoveArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRepositoryMoveArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRepositoryMoveArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRepositoryMoveArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnRepositoryOperationArgs">
            <summary>SharpSvn.SvnRepositoryOperationArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryOperationArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryOperationArgs.InitializeStub">
            <summary>初始化 type StubSvnRepositoryOperationArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryOperationArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryOperationArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryOperationArgs.OnCommitted(SharpSvn.SvnCommittedEventArgs)">
            <summary>设置 SvnClientArgsWithCommit.OnCommitted(SvnCommittedEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryOperationArgs.OnCommittedSvnCommittedEventArgs">
            <summary>设置 SvnClientArgsWithCommit.OnCommitted(SvnCommittedEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryOperationArgs.OnCommitting(SharpSvn.SvnCommittingEventArgs)">
            <summary>设置 SvnClientArgsWithCommit.OnCommitting(SvnCommittingEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryOperationArgs.OnCommittingSvnCommittingEventArgs">
            <summary>设置 SvnClientArgsWithCommit.OnCommitting(SvnCommittingEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryOperationArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryOperationArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryOperationArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryOperationArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryOperationArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryOperationArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRepositoryOperationArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRepositoryOperationArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRepositoryOperationArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnRepositoryOperationBaseArgs">
            <summary>SharpSvn.SvnRepositoryOperationBaseArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryOperationBaseArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryOperationBaseArgs.InitializeStub">
            <summary>初始化 type StubSvnRepositoryOperationBaseArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryOperationBaseArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryOperationBaseArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryOperationBaseArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryOperationBaseArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryOperationBaseArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryOperationBaseArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryOperationBaseArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryOperationBaseArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRepositoryOperationBaseArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRepositoryOperationBaseArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRepositoryOperationBaseArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnRepositorySetPropertyArgs">
            <summary>SharpSvn.SvnRepositorySetPropertyArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositorySetPropertyArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositorySetPropertyArgs.InitializeStub">
            <summary>初始化 type StubSvnRepositorySetPropertyArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositorySetPropertyArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositorySetPropertyArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositorySetPropertyArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositorySetPropertyArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositorySetPropertyArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositorySetPropertyArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositorySetPropertyArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositorySetPropertyArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRepositorySetPropertyArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRepositorySetPropertyArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRepositorySetPropertyArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnRepositoryUpdateFileArgs">
            <summary>SharpSvn.SvnRepositoryUpdateFileArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryUpdateFileArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryUpdateFileArgs.InitializeStub">
            <summary>初始化 type StubSvnRepositoryUpdateFileArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryUpdateFileArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryUpdateFileArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryUpdateFileArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryUpdateFileArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryUpdateFileArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryUpdateFileArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRepositoryUpdateFileArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRepositoryUpdateFileArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRepositoryUpdateFileArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRepositoryUpdateFileArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRepositoryUpdateFileArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnReservedNameUsedException">
            <summary>SharpSvn.SvnReservedNameUsedException 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnReservedNameUsedException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnReservedNameUsedException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnReservedNameUsedException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnReservedNameUsedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnReservedNameUsedException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubSvnReservedNameUsedException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnReservedNameUsedException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubSvnReservedNameUsedException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnReservedNameUsedException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnReservedNameUsedException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnReservedNameUsedException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnReservedNameUsedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnReservedNameUsedException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnReservedNameUsedException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnReservedNameUsedException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnReservedNameUsedException.InitializeStub">
            <summary>初始化 type StubSvnReservedNameUsedException 的新实例</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnReservedNameUsedException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnReservedNameUsedException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnReservedNameUsedException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnReservedNameUsedException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnReservedNameUsedException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnReservedNameUsedException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnReservedNameUsedException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnReservedNameUsedException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnReservedNameUsedException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnReservedNameUsedException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnReservedNameUsedException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnReservedNameUsedException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnReservedNameUsedException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnReservedNameUsedException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnResolveArgs">
            <summary>SharpSvn.SvnResolveArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnResolveArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnResolveArgs.InitializeStub">
            <summary>初始化 type StubSvnResolveArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnResolveArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnResolveArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnResolveArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnResolveArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnResolveArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnResolveArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnResolveArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnResolveArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnResolveArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnResolveArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnResolveArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnRevertArgs">
            <summary>SharpSvn.SvnRevertArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRevertArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRevertArgs.InitializeStub">
            <summary>初始化 type StubSvnRevertArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRevertArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRevertArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRevertArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRevertArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRevertArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRevertArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRevertArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRevertArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRevertArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRevertArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRevertArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnRevisionPropertyListArgs">
            <summary>SharpSvn.SvnRevisionPropertyListArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRevisionPropertyListArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRevisionPropertyListArgs.InitializeStub">
            <summary>初始化 type StubSvnRevisionPropertyListArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRevisionPropertyListArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRevisionPropertyListArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRevisionPropertyListArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRevisionPropertyListArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRevisionPropertyListArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRevisionPropertyListArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRevisionPropertyListArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRevisionPropertyListArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRevisionPropertyListArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRevisionPropertyListArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRevisionPropertyListArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnRevisionRange">
            <summary>SharpSvn.SvnRevisionRange 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRevisionRange.#ctor(SharpSvn.SvnRevision,SharpSvn.SvnRevision)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRevisionRange.#ctor(System.Int64,System.Int64)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRevisionRange.Equals(SharpSvn.SvnRevisionRange)">
            <summary>设置 SvnRevisionRange.Equals(SvnRevisionRange range) 的 存根</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRevisionRange.Equals(System.Object)">
            <summary>设置 SvnRevisionRange.Equals(Object other) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRevisionRange.EqualsObject">
            <summary>设置 SvnRevisionRange.Equals(Object other) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRevisionRange.EqualsSvnRevisionRange">
            <summary>设置 SvnRevisionRange.Equals(SvnRevisionRange range) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRevisionRange.GetHashCode">
            <summary>设置 SvnRevisionRange.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRevisionRange.GetHashCode01">
            <summary>设置 SvnRevisionRange.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRevisionRange.InitializeStub">
            <summary>初始化 type StubSvnRevisionRange 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnRevisionRange.ToString">
            <summary>设置 SvnRevisionRange.ToString() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnRevisionRange.ToString01">
            <summary>设置 SvnRevisionRange.ToString() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRevisionRange.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRevisionRange.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnRevisionRange.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnSetPropertyArgs">
            <summary>SharpSvn.SvnSetPropertyArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnSetPropertyArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnSetPropertyArgs.InitializeStub">
            <summary>初始化 type StubSvnSetPropertyArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnSetPropertyArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnSetPropertyArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnSetPropertyArgs.OnCommitted(SharpSvn.SvnCommittedEventArgs)">
            <summary>设置 SvnClientArgsWithCommit.OnCommitted(SvnCommittedEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnSetPropertyArgs.OnCommittedSvnCommittedEventArgs">
            <summary>设置 SvnClientArgsWithCommit.OnCommitted(SvnCommittedEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnSetPropertyArgs.OnCommitting(SharpSvn.SvnCommittingEventArgs)">
            <summary>设置 SvnClientArgsWithCommit.OnCommitting(SvnCommittingEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnSetPropertyArgs.OnCommittingSvnCommittingEventArgs">
            <summary>设置 SvnClientArgsWithCommit.OnCommitting(SvnCommittingEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnSetPropertyArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnSetPropertyArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnSetPropertyArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnSetPropertyArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnSetPropertyArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnSetPropertyArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnSetPropertyArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnSetPropertyArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnSetPropertyArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnSetRepositoryIdArgs">
            <summary>SharpSvn.SvnSetRepositoryIdArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnSetRepositoryIdArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnSetRepositoryIdArgs.InitializeStub">
            <summary>初始化 type StubSvnSetRepositoryIdArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnSetRepositoryIdArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnSetRepositoryIdArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnSetRepositoryIdArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnSetRepositoryIdArgs.OnNotify(SharpSvn.SvnRepositoryNotifyEventArgs)">
            <summary>设置 SvnRepositoryClientArgs.OnNotify(SvnRepositoryNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnSetRepositoryIdArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnSetRepositoryIdArgs.OnNotifySvnRepositoryNotifyEventArgs">
            <summary>设置 SvnRepositoryClientArgs.OnNotify(SvnRepositoryNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnSetRepositoryIdArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnSetRepositoryIdArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnSetRepositoryIdArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnSetRepositoryIdArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnSetRepositoryIdArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnSetRepositoryIdArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnSetRepositoryIdArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnSetRevisionPropertyArgs">
            <summary>SharpSvn.SvnSetRevisionPropertyArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnSetRevisionPropertyArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnSetRevisionPropertyArgs.InitializeStub">
            <summary>初始化 type StubSvnSetRevisionPropertyArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnSetRevisionPropertyArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnSetRevisionPropertyArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnSetRevisionPropertyArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnSetRevisionPropertyArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnSetRevisionPropertyArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnSetRevisionPropertyArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnSetRevisionPropertyArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnSetRevisionPropertyArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnSetRevisionPropertyArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnSetRevisionPropertyArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnSetRevisionPropertyArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnSetRevisionPropertyRepositoryArgs">
            <summary>SharpSvn.SvnSetRevisionPropertyRepositoryArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnSetRevisionPropertyRepositoryArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnSetRevisionPropertyRepositoryArgs.InitializeStub">
            <summary>初始化 type StubSvnSetRevisionPropertyRepositoryArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnSetRevisionPropertyRepositoryArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnSetRevisionPropertyRepositoryArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnSetRevisionPropertyRepositoryArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnSetRevisionPropertyRepositoryArgs.OnNotify(SharpSvn.SvnRepositoryNotifyEventArgs)">
            <summary>设置 SvnRepositoryClientArgs.OnNotify(SvnRepositoryNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnSetRevisionPropertyRepositoryArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnSetRevisionPropertyRepositoryArgs.OnNotifySvnRepositoryNotifyEventArgs">
            <summary>设置 SvnRepositoryClientArgs.OnNotify(SvnRepositoryNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnSetRevisionPropertyRepositoryArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnSetRevisionPropertyRepositoryArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnSetRevisionPropertyRepositoryArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnSetRevisionPropertyRepositoryArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnSetRevisionPropertyRepositoryArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnSetRevisionPropertyRepositoryArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnSetRevisionPropertyRepositoryArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnStatusArgs">
            <summary>SharpSvn.SvnStatusArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnStatusArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnStatusArgs.InitializeStub">
            <summary>初始化 type StubSvnStatusArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnStatusArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnStatusArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnStatusArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnStatusArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnStatusArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnStatusArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnStatusArgs.OnStatus(SharpSvn.SvnStatusEventArgs)">
            <summary>设置 SvnStatusArgs.OnStatus(SvnStatusEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnStatusArgs.OnStatusSvnStatusEventArgs">
            <summary>设置 SvnStatusArgs.OnStatus(SvnStatusEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnStatusArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnStatusArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnStatusArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnStatusArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnStatusArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnStreamException">
            <summary>SharpSvn.SvnStreamException 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnStreamException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnStreamException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnStreamException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnStreamException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnStreamException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubSvnStreamException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnStreamException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubSvnStreamException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnStreamException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnStreamException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnStreamException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnStreamException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnStreamException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnStreamException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnStreamException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnStreamException.InitializeStub">
            <summary>初始化 type StubSvnStreamException 的新实例</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnStreamException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnStreamException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnStreamException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnStreamException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnStreamException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnStreamException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnStreamException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnStreamException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnStreamException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnStreamException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnStreamException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnStreamException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnStreamException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnStreamException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnSwitchArgs">
            <summary>SharpSvn.SvnSwitchArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnSwitchArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnSwitchArgs.InitializeStub">
            <summary>初始化 type StubSvnSwitchArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnSwitchArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnSwitchArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnSwitchArgs.OnConflict(SharpSvn.SvnConflictEventArgs)">
            <summary>设置 SvnClientArgsWithConflict.OnConflict(SvnConflictEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnSwitchArgs.OnConflictSvnConflictEventArgs">
            <summary>设置 SvnClientArgsWithConflict.OnConflict(SvnConflictEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnSwitchArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnSwitchArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnSwitchArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnSwitchArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnSwitchArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnSwitchArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnSwitchArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnSwitchArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnSwitchArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnSystemException">
            <summary>SharpSvn.SvnSystemException 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnSystemException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnSystemException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnSystemException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnSystemException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnSystemException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubSvnSystemException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnSystemException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubSvnSystemException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnSystemException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnSystemException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnSystemException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnSystemException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnSystemException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnSystemException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnSystemException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnSystemException.InitializeStub">
            <summary>初始化 type StubSvnSystemException 的新实例</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnSystemException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnSystemException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnSystemException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnSystemException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnSystemException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnSystemException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnSystemException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnSystemException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnSystemException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnSystemException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnSystemException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnSystemException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnSystemException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnSystemException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnUnknownCapabilityException">
            <summary>SharpSvn.SvnUnknownCapabilityException 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnUnknownCapabilityException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnUnknownCapabilityException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnUnknownCapabilityException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnUnknownCapabilityException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnUnknownCapabilityException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubSvnUnknownCapabilityException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnUnknownCapabilityException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubSvnUnknownCapabilityException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnUnknownCapabilityException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnUnknownCapabilityException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnUnknownCapabilityException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnUnknownCapabilityException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnUnknownCapabilityException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnUnknownCapabilityException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnUnknownCapabilityException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnUnknownCapabilityException.InitializeStub">
            <summary>初始化 type StubSvnUnknownCapabilityException 的新实例</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnUnknownCapabilityException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnUnknownCapabilityException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnUnknownCapabilityException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnUnknownCapabilityException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnUnknownCapabilityException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnUnknownCapabilityException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnUnknownCapabilityException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnUnknownCapabilityException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnUnknownCapabilityException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnUnknownCapabilityException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnUnknownCapabilityException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnUnknownCapabilityException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnUnknownCapabilityException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnUnknownCapabilityException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnUnknownChangeListException">
            <summary>SharpSvn.SvnUnknownChangeListException 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnUnknownChangeListException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnUnknownChangeListException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnUnknownChangeListException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnUnknownChangeListException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnUnknownChangeListException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubSvnUnknownChangeListException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnUnknownChangeListException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubSvnUnknownChangeListException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnUnknownChangeListException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnUnknownChangeListException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnUnknownChangeListException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnUnknownChangeListException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnUnknownChangeListException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnUnknownChangeListException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnUnknownChangeListException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnUnknownChangeListException.InitializeStub">
            <summary>初始化 type StubSvnUnknownChangeListException 的新实例</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnUnknownChangeListException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnUnknownChangeListException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnUnknownChangeListException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnUnknownChangeListException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnUnknownChangeListException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnUnknownChangeListException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnUnknownChangeListException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnUnknownChangeListException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnUnknownChangeListException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnUnknownChangeListException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnUnknownChangeListException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnUnknownChangeListException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnUnknownChangeListException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnUnknownChangeListException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnUnlockArgs">
            <summary>SharpSvn.SvnUnlockArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnUnlockArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnUnlockArgs.InitializeStub">
            <summary>初始化 type StubSvnUnlockArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnUnlockArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnUnlockArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnUnlockArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnUnlockArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnUnlockArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnUnlockArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnUnlockArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnUnlockArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnUnlockArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnUnlockArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnUnlockArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnUnsupportedFeatureException">
            <summary>SharpSvn.SvnUnsupportedFeatureException 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnUnsupportedFeatureException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnUnsupportedFeatureException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnUnsupportedFeatureException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnUnsupportedFeatureException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnUnsupportedFeatureException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubSvnUnsupportedFeatureException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnUnsupportedFeatureException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubSvnUnsupportedFeatureException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnUnsupportedFeatureException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnUnsupportedFeatureException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnUnsupportedFeatureException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnUnsupportedFeatureException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnUnsupportedFeatureException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnUnsupportedFeatureException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnUnsupportedFeatureException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnUnsupportedFeatureException.InitializeStub">
            <summary>初始化 type StubSvnUnsupportedFeatureException 的新实例</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnUnsupportedFeatureException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnUnsupportedFeatureException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnUnsupportedFeatureException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnUnsupportedFeatureException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnUnsupportedFeatureException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnUnsupportedFeatureException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnUnsupportedFeatureException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnUnsupportedFeatureException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnUnsupportedFeatureException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnUnsupportedFeatureException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnUnsupportedFeatureException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnUnsupportedFeatureException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnUnsupportedFeatureException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnUnsupportedFeatureException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnUnversionedNodeException">
            <summary>SharpSvn.SvnUnversionedNodeException 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnUnversionedNodeException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnUnversionedNodeException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnUnversionedNodeException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnUnversionedNodeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnUnversionedNodeException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubSvnUnversionedNodeException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnUnversionedNodeException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubSvnUnversionedNodeException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnUnversionedNodeException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnUnversionedNodeException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnUnversionedNodeException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnUnversionedNodeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnUnversionedNodeException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnUnversionedNodeException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnUnversionedNodeException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnUnversionedNodeException.InitializeStub">
            <summary>初始化 type StubSvnUnversionedNodeException 的新实例</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnUnversionedNodeException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnUnversionedNodeException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnUnversionedNodeException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnUnversionedNodeException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnUnversionedNodeException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnUnversionedNodeException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnUnversionedNodeException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnUnversionedNodeException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnUnversionedNodeException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnUnversionedNodeException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnUnversionedNodeException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnUnversionedNodeException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnUnversionedNodeException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnUnversionedNodeException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnUpdateArgs">
            <summary>SharpSvn.SvnUpdateArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnUpdateArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnUpdateArgs.InitializeStub">
            <summary>初始化 type StubSvnUpdateArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnUpdateArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnUpdateArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnUpdateArgs.OnConflict(SharpSvn.SvnConflictEventArgs)">
            <summary>设置 SvnClientArgsWithConflict.OnConflict(SvnConflictEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnUpdateArgs.OnConflictSvnConflictEventArgs">
            <summary>设置 SvnClientArgsWithConflict.OnConflict(SvnConflictEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnUpdateArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnUpdateArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnUpdateArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnUpdateArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnUpdateArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnUpdateArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnUpdateArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnUpdateArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnUpdateArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnUpgradeArgs">
            <summary>SharpSvn.SvnUpgradeArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnUpgradeArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnUpgradeArgs.InitializeStub">
            <summary>初始化 type StubSvnUpgradeArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnUpgradeArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnUpgradeArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnUpgradeArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnUpgradeArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnUpgradeArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnUpgradeArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnUpgradeArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnUpgradeArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnUpgradeArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnUpgradeArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnUpgradeArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnUpgradeRepositoryArgs">
            <summary>SharpSvn.SvnUpgradeRepositoryArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnUpgradeRepositoryArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnUpgradeRepositoryArgs.InitializeStub">
            <summary>初始化 type StubSvnUpgradeRepositoryArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnUpgradeRepositoryArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnUpgradeRepositoryArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnUpgradeRepositoryArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnUpgradeRepositoryArgs.OnNotify(SharpSvn.SvnRepositoryNotifyEventArgs)">
            <summary>设置 SvnRepositoryClientArgs.OnNotify(SvnRepositoryNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnUpgradeRepositoryArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnUpgradeRepositoryArgs.OnNotifySvnRepositoryNotifyEventArgs">
            <summary>设置 SvnRepositoryClientArgs.OnNotify(SvnRepositoryNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnUpgradeRepositoryArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnUpgradeRepositoryArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnUpgradeRepositoryArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnUpgradeRepositoryArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnUpgradeRepositoryArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnUpgradeRepositoryArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnUpgradeRepositoryArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnVerifyRepositoryArgs">
            <summary>SharpSvn.SvnVerifyRepositoryArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnVerifyRepositoryArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnVerifyRepositoryArgs.InitializeStub">
            <summary>初始化 type StubSvnVerifyRepositoryArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnVerifyRepositoryArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnVerifyRepositoryArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnVerifyRepositoryArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnVerifyRepositoryArgs.OnNotify(SharpSvn.SvnRepositoryNotifyEventArgs)">
            <summary>设置 SvnRepositoryClientArgs.OnNotify(SvnRepositoryNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnVerifyRepositoryArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnVerifyRepositoryArgs.OnNotifySvnRepositoryNotifyEventArgs">
            <summary>设置 SvnRepositoryClientArgs.OnNotify(SvnRepositoryNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnVerifyRepositoryArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnVerifyRepositoryArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnVerifyRepositoryArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnVerifyRepositoryArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnVerifyRepositoryArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnVerifyRepositoryArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnVerifyRepositoryArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnWorkingCopyClient">
            <summary>SharpSvn.SvnWorkingCopyClient 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyClient.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyClient.AttachBackingFieldToSite">
            <summary>附加委托以将 StubSvnWorkingCopyClient.Site 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyClient.Dispose(System.Boolean)">
            <summary>设置 SvnWorkingCopyClient.Dispose(Boolean ) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnWorkingCopyClient.DisposeBoolean">
            <summary>设置 SvnWorkingCopyClient.Dispose(Boolean ) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyClient.InitializeStub">
            <summary>初始化 type StubSvnWorkingCopyClient 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyClient.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnWorkingCopyClient.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnWorkingCopyClient.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnWorkingCopyClient.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyClient.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnWorkingCopyClient.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnWorkingCopyClient.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnWorkingCopyClient.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyClient.OnProcessing(SharpSvn.SvnProcessingEventArgs)">
            <summary>设置 SvnWorkingCopyClient.OnProcessing(SvnProcessingEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnWorkingCopyClient.OnProcessingSvnProcessingEventArgs">
            <summary>设置 SvnWorkingCopyClient.OnProcessing(SvnProcessingEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyClient.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnWorkingCopyClient.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnWorkingCopyClient.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnWorkingCopyClient.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnWorkingCopyClient.SiteGet">
            <summary>设置 SvnClientContext.get_Site() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnWorkingCopyClient.SiteSetISite">
            <summary>设置 SvnClientContext.set_Site(ISite value) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnWorkingCopyClient.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnWorkingCopyClient.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnWorkingCopyClient.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnWorkingCopyClient.Site">
            <summary>设置 SvnClientContext.get_Site() 的 stub</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnWorkingCopyCopyArgs">
            <summary>SharpSvn.SvnWorkingCopyCopyArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyCopyArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyCopyArgs.InitializeStub">
            <summary>初始化 type StubSvnWorkingCopyCopyArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyCopyArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnWorkingCopyCopyArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyCopyArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnWorkingCopyCopyArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyCopyArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnWorkingCopyCopyArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyCopyArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnWorkingCopyCopyArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnWorkingCopyCopyArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnWorkingCopyCopyArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnWorkingCopyCopyArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnWorkingCopyEntriesArgs">
            <summary>SharpSvn.SvnWorkingCopyEntriesArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyEntriesArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnWorkingCopyEntriesArgs.CommandTypeGet">
            <summary>设置 SvnWorkingCopyEntriesArgs.get_CommandType() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyEntriesArgs.InitializeStub">
            <summary>初始化 type StubSvnWorkingCopyEntriesArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyEntriesArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnWorkingCopyEntriesArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyEntriesArgs.OnEntry(SharpSvn.SvnWorkingCopyEntryEventArgs)">
            <summary>设置 SvnWorkingCopyEntriesArgs.OnEntry(SvnWorkingCopyEntryEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnWorkingCopyEntriesArgs.OnEntrySvnWorkingCopyEntryEventArgs">
            <summary>设置 SvnWorkingCopyEntriesArgs.OnEntry(SvnWorkingCopyEntryEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyEntriesArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnWorkingCopyEntriesArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyEntriesArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnWorkingCopyEntriesArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyEntriesArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnWorkingCopyEntriesArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnWorkingCopyEntriesArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnWorkingCopyEntriesArgs.CommandType">
            <summary>设置 SvnWorkingCopyEntriesArgs.get_CommandType() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnWorkingCopyEntriesArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnWorkingCopyEntriesArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnWorkingCopyException">
            <summary>SharpSvn.SvnWorkingCopyException 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubSvnWorkingCopyException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubSvnWorkingCopyException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnWorkingCopyException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnWorkingCopyException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnWorkingCopyException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnWorkingCopyException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnWorkingCopyException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyException.InitializeStub">
            <summary>初始化 type StubSvnWorkingCopyException 的新实例</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnWorkingCopyException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnWorkingCopyException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnWorkingCopyException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnWorkingCopyException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnWorkingCopyException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnWorkingCopyException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnWorkingCopyException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnWorkingCopyException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnWorkingCopyException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnWorkingCopyException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnWorkingCopyException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnWorkingCopyException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnWorkingCopyException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnWorkingCopyInstallConflictArgs">
            <summary>SharpSvn.SvnWorkingCopyInstallConflictArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyInstallConflictArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyInstallConflictArgs.InitializeStub">
            <summary>初始化 type StubSvnWorkingCopyInstallConflictArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyInstallConflictArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnWorkingCopyInstallConflictArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyInstallConflictArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnWorkingCopyInstallConflictArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyInstallConflictArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnWorkingCopyInstallConflictArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyInstallConflictArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnWorkingCopyInstallConflictArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnWorkingCopyInstallConflictArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnWorkingCopyInstallConflictArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnWorkingCopyInstallConflictArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnWorkingCopyLockException">
            <summary>SharpSvn.SvnWorkingCopyLockException 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyLockException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyLockException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyLockException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyLockException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyLockException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubSvnWorkingCopyLockException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyLockException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubSvnWorkingCopyLockException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnWorkingCopyLockException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyLockException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnWorkingCopyLockException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyLockException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnWorkingCopyLockException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnWorkingCopyLockException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnWorkingCopyLockException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyLockException.InitializeStub">
            <summary>初始化 type StubSvnWorkingCopyLockException 的新实例</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnWorkingCopyLockException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnWorkingCopyLockException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnWorkingCopyLockException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnWorkingCopyLockException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyLockException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnWorkingCopyLockException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnWorkingCopyLockException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnWorkingCopyLockException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnWorkingCopyLockException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnWorkingCopyLockException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnWorkingCopyLockException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnWorkingCopyLockException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnWorkingCopyLockException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnWorkingCopyLockException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnWorkingCopyMoveArgs">
            <summary>SharpSvn.SvnWorkingCopyMoveArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyMoveArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyMoveArgs.InitializeStub">
            <summary>初始化 type StubSvnWorkingCopyMoveArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyMoveArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnWorkingCopyMoveArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyMoveArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnWorkingCopyMoveArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyMoveArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnWorkingCopyMoveArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyMoveArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnWorkingCopyMoveArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnWorkingCopyMoveArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnWorkingCopyMoveArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnWorkingCopyMoveArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnWorkingCopyPathNotFoundException">
            <summary>SharpSvn.SvnWorkingCopyPathNotFoundException 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyPathNotFoundException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyPathNotFoundException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyPathNotFoundException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyPathNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyPathNotFoundException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubSvnWorkingCopyPathNotFoundException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyPathNotFoundException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubSvnWorkingCopyPathNotFoundException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnWorkingCopyPathNotFoundException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyPathNotFoundException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnWorkingCopyPathNotFoundException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyPathNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnWorkingCopyPathNotFoundException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnWorkingCopyPathNotFoundException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnWorkingCopyPathNotFoundException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyPathNotFoundException.InitializeStub">
            <summary>初始化 type StubSvnWorkingCopyPathNotFoundException 的新实例</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnWorkingCopyPathNotFoundException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnWorkingCopyPathNotFoundException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnWorkingCopyPathNotFoundException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnWorkingCopyPathNotFoundException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyPathNotFoundException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnWorkingCopyPathNotFoundException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnWorkingCopyPathNotFoundException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnWorkingCopyPathNotFoundException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnWorkingCopyPathNotFoundException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnWorkingCopyPathNotFoundException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnWorkingCopyPathNotFoundException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnWorkingCopyPathNotFoundException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnWorkingCopyPathNotFoundException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnWorkingCopyPathNotFoundException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnWorkingCopyRestoreArgs">
            <summary>SharpSvn.SvnWorkingCopyRestoreArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyRestoreArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyRestoreArgs.InitializeStub">
            <summary>初始化 type StubSvnWorkingCopyRestoreArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyRestoreArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnWorkingCopyRestoreArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyRestoreArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnWorkingCopyRestoreArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyRestoreArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnWorkingCopyRestoreArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyRestoreArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnWorkingCopyRestoreArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnWorkingCopyRestoreArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnWorkingCopyRestoreArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnWorkingCopyRestoreArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnWorkingCopyStateArgs">
            <summary>SharpSvn.SvnWorkingCopyStateArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyStateArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyStateArgs.InitializeStub">
            <summary>初始化 type StubSvnWorkingCopyStateArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyStateArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnWorkingCopyStateArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyStateArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnWorkingCopyStateArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyStateArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnWorkingCopyStateArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWorkingCopyStateArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnWorkingCopyStateArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnWorkingCopyStateArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnWorkingCopyStateArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnWorkingCopyStateArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnWriteArgs">
            <summary>SharpSvn.SvnWriteArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWriteArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWriteArgs.InitializeStub">
            <summary>初始化 type StubSvnWriteArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWriteArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnWriteArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWriteArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnWriteArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWriteArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnWriteArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnWriteArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnWriteArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnWriteArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnWriteArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnWriteArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Fakes.StubSvnXmlException">
            <summary>SharpSvn.SvnXmlException 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnXmlException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnXmlException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnXmlException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnXmlException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnXmlException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubSvnXmlException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnXmlException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubSvnXmlException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnXmlException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnXmlException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnXmlException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnXmlException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnXmlException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 SvnException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnXmlException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnXmlException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnXmlException.InitializeStub">
            <summary>初始化 type StubSvnXmlException 的新实例</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnXmlException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnXmlException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnXmlException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnXmlException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Fakes.StubSvnXmlException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Fakes.StubSvnXmlException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnXmlException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnXmlException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnXmlException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnXmlException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnXmlException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnXmlException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnXmlException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Fakes.StubSvnXmlException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:SharpSvn.Implementation.Fakes.ShimSvnBase">
            <summary>SharpSvn.Implementation.SvnBase 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Implementation.Fakes.ShimSvnBase.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Implementation.Fakes.ShimSvnBase.#ctor(SharpSvn.Implementation.SvnBase)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Implementation.Fakes.ShimSvnBase.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Implementation.Fakes.ShimSvnBase.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Implementation.Fakes.ShimSvnBase.ExtendArrayOf1M0ArrayICollectionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],System.Collections.Generic.ICollection{``0},``0[]})">
            <summary>设置 SvnBase.ExtendArray(!!0[] from, ICollection`1&lt;!!0&gt; values) 的 填充码</summary>
        </member>
        <member name="M:SharpSvn.Implementation.Fakes.ShimSvnBase.ExtendArrayOf1M0ArrayM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],``0,``0[]})">
            <summary>设置 SvnBase.ExtendArray(!!0[] from, !!0 value) 的 填充码</summary>
        </member>
        <member name="M:SharpSvn.Implementation.Fakes.ShimSvnBase.ExtendArrayOf1M0ArrayM0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],``0[],``0[]})">
            <summary>设置 SvnBase.ExtendArray(!!0[] from, !!0[] values) 的 填充码</summary>
        </member>
        <member name="M:SharpSvn.Implementation.Fakes.ShimSvnBase.FirstOfOf1IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},``0})">
            <summary>设置 SvnBase.FirstOf(IEnumerable`1&lt;!!0&gt; list) 的 填充码</summary>
        </member>
        <member name="M:SharpSvn.Implementation.Fakes.ShimSvnBase.NewSingleItemArrayOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``0[]})">
            <summary>设置 SvnBase.NewSingleItemArray(!!0 value) 的 填充码</summary>
        </member>
        <member name="M:SharpSvn.Implementation.Fakes.ShimSvnBase.NewSingleItemCollectionOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Collections.Generic.ICollection{``0}})">
            <summary>设置 SvnBase.NewSingleItemCollection(!!0 value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnBase.AprTimeFromDateTimeDateTime">
            <summary>设置 SvnBase.AprTimeFromDateTime(DateTime time) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnBase.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnBase.CanonicalizeUriUri">
            <summary>设置 SvnBase.CanonicalizeUri(Uri uri) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnBase.Constructor">
            <summary>设置 SvnBase.SvnBase() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnBase.DateTimeFromAprTimeInt64">
            <summary>设置 SvnBase.DateTimeFromAprTime(Int64 aprTime) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnBase.EnsureLoaded">
            <summary>设置 SvnBase.EnsureLoaded() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnBase.EnsureSafeAprArgumentStringBoolean">
            <summary>设置 SvnBase.EnsureSafeAprArgument(String argument, Boolean preferQuotes) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnBase.GenerateInvalidCharMap">
            <summary>设置 SvnBase.GenerateInvalidCharMap() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnBase.InstallAbortHandler">
            <summary>设置 SvnBase.InstallAbortHandler() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnBase.InstallSslDialogHandler">
            <summary>设置 SvnBase.InstallSslDialogHandler() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnBase.InvalidCharMapGet">
            <summary>设置 SvnBase.get_InvalidCharMap() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnBase.IsNotUriString">
            <summary>设置 SvnBase.IsNotUri(String path) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnBase.IsValidRelpathString">
            <summary>设置 SvnBase.IsValidRelpath(String path) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnBase.IsValidReposUriUri">
            <summary>设置 SvnBase.IsValidReposUri(Uri uri) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnBase.PathContainsInvalidCharsString">
            <summary>设置 SvnBase.PathContainsInvalidChars(String path) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnBase.PathToUriString">
            <summary>设置 SvnBase.PathToUri(String path) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnBase.RemoveDoubleSlashesString">
            <summary>设置 SvnBase.RemoveDoubleSlashes(String input) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnBase.StaticConstructor">
            <summary>设置 SvnBase.SvnBase() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnBase.UriToCanonicalStringUri">
            <summary>设置 SvnBase.UriToCanonicalString(Uri value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnBase.UriToStringUri">
            <summary>设置 SvnBase.UriToString(Uri value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Implementation.Fakes.ShimSvnBase.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Implementation.Fakes.ShimSvnChangeItemCollection">
            <summary>SharpSvn.Implementation.SvnChangeItemCollection 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Implementation.Fakes.ShimSvnChangeItemCollection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Implementation.Fakes.ShimSvnChangeItemCollection.#ctor(SharpSvn.Implementation.SvnChangeItemCollection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Implementation.Fakes.ShimSvnChangeItemCollection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Implementation.Fakes.ShimSvnChangeItemCollection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Implementation.Fakes.ShimSvnChangeItemCollection.Bind(System.Collections.ICollection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Implementation.Fakes.ShimSvnChangeItemCollection.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Implementation.Fakes.ShimSvnChangeItemCollection.Bind(System.Collections.IList)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Implementation.Fakes.ShimSvnChangeItemCollection.Bind(System.Collections.Generic.ICollection{SharpSvn.SvnChangeItem})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Implementation.Fakes.ShimSvnChangeItemCollection.Bind(System.Collections.Generic.IEnumerable{SharpSvn.SvnChangeItem})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Implementation.Fakes.ShimSvnChangeItemCollection.Bind(System.Collections.Generic.IList{SharpSvn.SvnChangeItem})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Implementation.Fakes.ShimSvnChangeItemCollection.Bind(System.Collections.Generic.IReadOnlyCollection{SharpSvn.SvnChangeItem})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Implementation.Fakes.ShimSvnChangeItemCollection.Bind(System.Collections.Generic.IReadOnlyList{SharpSvn.SvnChangeItem})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnChangeItemCollection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnChangeItemCollection.Constructor">
            <summary>设置 SvnChangeItemCollection.SvnChangeItemCollection() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnChangeItemCollection.GetKeyForItemSvnChangeItem">
            <summary>设置 SvnChangeItemCollection.GetKeyForItem(SvnChangeItem item) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Implementation.Fakes.ShimSvnChangeItemCollection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnChangeItemCollection.AllInstances.GetKeyForItemSvnChangeItem">
            <summary>设置 SvnChangeItemCollection.GetKeyForItem(SvnChangeItem item) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Implementation.Fakes.ShimSvnCommitItemCollection">
            <summary>SharpSvn.Implementation.SvnCommitItemCollection 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Implementation.Fakes.ShimSvnCommitItemCollection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Implementation.Fakes.ShimSvnCommitItemCollection.#ctor(SharpSvn.Implementation.SvnCommitItemCollection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Implementation.Fakes.ShimSvnCommitItemCollection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Implementation.Fakes.ShimSvnCommitItemCollection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Implementation.Fakes.ShimSvnCommitItemCollection.Bind(System.Collections.ICollection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Implementation.Fakes.ShimSvnCommitItemCollection.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Implementation.Fakes.ShimSvnCommitItemCollection.Bind(System.Collections.IList)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Implementation.Fakes.ShimSvnCommitItemCollection.Bind(System.Collections.Generic.ICollection{SharpSvn.SvnCommitItem})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Implementation.Fakes.ShimSvnCommitItemCollection.Bind(System.Collections.Generic.IEnumerable{SharpSvn.SvnCommitItem})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Implementation.Fakes.ShimSvnCommitItemCollection.Bind(System.Collections.Generic.IList{SharpSvn.SvnCommitItem})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Implementation.Fakes.ShimSvnCommitItemCollection.Bind(System.Collections.Generic.IReadOnlyCollection{SharpSvn.SvnCommitItem})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Implementation.Fakes.ShimSvnCommitItemCollection.Bind(System.Collections.Generic.IReadOnlyList{SharpSvn.SvnCommitItem})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnCommitItemCollection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnCommitItemCollection.ConstructorIListOfSvnCommitItem">
            <summary>设置 SvnCommitItemCollection.SvnCommitItemCollection(IList`1&lt;SvnCommitItem&gt; items) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnCommitItemCollection.GetKeyForItemSvnCommitItem">
            <summary>设置 SvnCommitItemCollection.GetKeyForItem(SvnCommitItem item) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Implementation.Fakes.ShimSvnCommitItemCollection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnCommitItemCollection.AllInstances.GetKeyForItemSvnCommitItem">
            <summary>设置 SvnCommitItemCollection.GetKeyForItem(SvnCommitItem item) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Implementation.Fakes.ShimSvnFsOperationRetryOverride">
            <summary>SharpSvn.Implementation.SvnFsOperationRetryOverride 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Implementation.Fakes.ShimSvnFsOperationRetryOverride.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Implementation.Fakes.ShimSvnFsOperationRetryOverride.#ctor(SharpSvn.Implementation.SvnFsOperationRetryOverride)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Implementation.Fakes.ShimSvnFsOperationRetryOverride.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Implementation.Fakes.ShimSvnFsOperationRetryOverride.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Implementation.Fakes.ShimSvnFsOperationRetryOverride.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnFsOperationRetryOverride.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnFsOperationRetryOverride.ConstructorInt32">
            <summary>设置 SvnFsOperationRetryOverride.SvnFsOperationRetryOverride(Int32 maxRetries) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnFsOperationRetryOverride.Dispose">
            <summary>设置 SvnFsOperationRetryOverride.Dispose() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnFsOperationRetryOverride.DisposeBoolean">
            <summary>设置 SvnFsOperationRetryOverride.Dispose(Boolean ) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnFsOperationRetryOverride.OnRetryLoopInvocationInt32SvnAprErrorCodeSvnWindowsErrorCodeString">
            <summary>设置 SvnFsOperationRetryOverride.OnRetryLoopInvocation(Int32 nr, SvnAprErrorCode aprError, SvnWindowsErrorCode windowsError, String expr) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnFsOperationRetryOverride.StaticConstructor">
            <summary>设置 SvnFsOperationRetryOverride.SvnFsOperationRetryOverride() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnFsOperationRetryOverride._SvnFsOperationRetryOverride">
            <summary>设置 SvnFsOperationRetryOverride.~SvnFsOperationRetryOverride() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Implementation.Fakes.ShimSvnFsOperationRetryOverride.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnFsOperationRetryOverride.AllInstances.Dispose">
            <summary>设置 SvnFsOperationRetryOverride.Dispose() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnFsOperationRetryOverride.AllInstances.DisposeBoolean">
            <summary>设置 SvnFsOperationRetryOverride.Dispose(Boolean ) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnFsOperationRetryOverride.AllInstances.OnRetryLoopInvocationInt32SvnAprErrorCodeSvnWindowsErrorCodeString">
            <summary>设置 SvnFsOperationRetryOverride.OnRetryLoopInvocation(Int32 nr, SvnAprErrorCode aprError, SvnWindowsErrorCode windowsError, String expr) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnFsOperationRetryOverride.AllInstances._SvnFsOperationRetryOverride">
            <summary>设置 SvnFsOperationRetryOverride.~SvnFsOperationRetryOverride() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Implementation.Fakes.ShimSvnLibrary">
            <summary>SharpSvn.Implementation.SvnLibrary 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Implementation.Fakes.ShimSvnLibrary.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Implementation.Fakes.ShimSvnLibrary.#ctor(SharpSvn.Implementation.SvnLibrary)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Implementation.Fakes.ShimSvnLibrary.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Implementation.Fakes.ShimSvnLibrary.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnLibrary.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnLibrary.ConstructorSvnLibraryAttribute">
            <summary>设置 SvnLibrary.SvnLibrary(SvnLibraryAttribute attribute) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnLibrary.DynamicallyLinkedGet">
            <summary>设置 SvnLibrary.get_DynamicallyLinked() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnLibrary.NameGet">
            <summary>设置 SvnLibrary.get_Name() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnLibrary.OptionalGet">
            <summary>设置 SvnLibrary.get_Optional() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnLibrary.VersionGet">
            <summary>设置 SvnLibrary.get_Version() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnLibrary.VersionStringGet">
            <summary>设置 SvnLibrary.get_VersionString() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Implementation.Fakes.ShimSvnLibrary.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnLibrary.AllInstances.DynamicallyLinkedGet">
            <summary>设置 SvnLibrary.get_DynamicallyLinked() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnLibrary.AllInstances.NameGet">
            <summary>设置 SvnLibrary.get_Name() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnLibrary.AllInstances.OptionalGet">
            <summary>设置 SvnLibrary.get_Optional() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnLibrary.AllInstances.VersionGet">
            <summary>设置 SvnLibrary.get_Version() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnLibrary.AllInstances.VersionStringGet">
            <summary>设置 SvnLibrary.get_VersionString() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Implementation.Fakes.ShimSvnLibraryAttribute">
            <summary>SharpSvn.Implementation.SvnLibraryAttribute 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Implementation.Fakes.ShimSvnLibraryAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Implementation.Fakes.ShimSvnLibraryAttribute.#ctor(SharpSvn.Implementation.SvnLibraryAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Implementation.Fakes.ShimSvnLibraryAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Implementation.Fakes.ShimSvnLibraryAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnLibraryAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnLibraryAttribute.ConstructorStringString">
            <summary>设置 SvnLibraryAttribute.SvnLibraryAttribute(String name, String version) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnLibraryAttribute.DynamicallyLinkedGet">
            <summary>设置 SvnLibraryAttribute.get_DynamicallyLinked() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnLibraryAttribute.DynamicallyLinkedSetBoolean">
            <summary>设置 SvnLibraryAttribute.set_DynamicallyLinked(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnLibraryAttribute.NameGet">
            <summary>设置 SvnLibraryAttribute.get_Name() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnLibraryAttribute.OptionalGet">
            <summary>设置 SvnLibraryAttribute.get_Optional() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnLibraryAttribute.OptionalSetBoolean">
            <summary>设置 SvnLibraryAttribute.set_Optional(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnLibraryAttribute.SkipPrefixGet">
            <summary>设置 SvnLibraryAttribute.get_SkipPrefix() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnLibraryAttribute.SkipPrefixSetBoolean">
            <summary>设置 SvnLibraryAttribute.set_SkipPrefix(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnLibraryAttribute.UseSharpSvnVersionGet">
            <summary>设置 SvnLibraryAttribute.get_UseSharpSvnVersion() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnLibraryAttribute.UseSharpSvnVersionSetBoolean">
            <summary>设置 SvnLibraryAttribute.set_UseSharpSvnVersion(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnLibraryAttribute.VersionGet">
            <summary>设置 SvnLibraryAttribute.get_Version() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Implementation.Fakes.ShimSvnLibraryAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnLibraryAttribute.AllInstances.DynamicallyLinkedGet">
            <summary>设置 SvnLibraryAttribute.get_DynamicallyLinked() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnLibraryAttribute.AllInstances.DynamicallyLinkedSetBoolean">
            <summary>设置 SvnLibraryAttribute.set_DynamicallyLinked(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnLibraryAttribute.AllInstances.NameGet">
            <summary>设置 SvnLibraryAttribute.get_Name() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnLibraryAttribute.AllInstances.OptionalGet">
            <summary>设置 SvnLibraryAttribute.get_Optional() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnLibraryAttribute.AllInstances.OptionalSetBoolean">
            <summary>设置 SvnLibraryAttribute.set_Optional(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnLibraryAttribute.AllInstances.SkipPrefixGet">
            <summary>设置 SvnLibraryAttribute.get_SkipPrefix() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnLibraryAttribute.AllInstances.SkipPrefixSetBoolean">
            <summary>设置 SvnLibraryAttribute.set_SkipPrefix(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnLibraryAttribute.AllInstances.UseSharpSvnVersionGet">
            <summary>设置 SvnLibraryAttribute.get_UseSharpSvnVersion() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnLibraryAttribute.AllInstances.UseSharpSvnVersionSetBoolean">
            <summary>设置 SvnLibraryAttribute.set_UseSharpSvnVersion(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnLibraryAttribute.AllInstances.VersionGet">
            <summary>设置 SvnLibraryAttribute.get_Version() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Implementation.Fakes.ShimSvnStatusCacheBlocker">
            <summary>SharpSvn.Implementation.SvnStatusCacheBlocker 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Implementation.Fakes.ShimSvnStatusCacheBlocker.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Implementation.Fakes.ShimSvnStatusCacheBlocker.#ctor(SharpSvn.Implementation.SvnStatusCacheBlocker)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Implementation.Fakes.ShimSvnStatusCacheBlocker.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Implementation.Fakes.ShimSvnStatusCacheBlocker.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Implementation.Fakes.ShimSvnStatusCacheBlocker.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnStatusCacheBlocker.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnStatusCacheBlocker.BlockedGet">
            <summary>设置 SvnStatusCacheBlocker.get_Blocked() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnStatusCacheBlocker.ConstructorString">
            <summary>设置 SvnStatusCacheBlocker.SvnStatusCacheBlocker(String path) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnStatusCacheBlocker.CrawlString">
            <summary>设置 SvnStatusCacheBlocker.Crawl(String path) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnStatusCacheBlocker.Dispose">
            <summary>设置 SvnStatusCacheBlocker.Dispose() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnStatusCacheBlocker.DisposeBoolean">
            <summary>设置 SvnStatusCacheBlocker.Dispose(Boolean ) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnStatusCacheBlocker.Refresh">
            <summary>设置 SvnStatusCacheBlocker.Refresh() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnStatusCacheBlocker.Release">
            <summary>设置 SvnStatusCacheBlocker.Release() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnStatusCacheBlocker.ReleaseString">
            <summary>设置 SvnStatusCacheBlocker.Release(String path) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnStatusCacheBlocker.SendCommandByteString">
            <summary>设置 SvnStatusCacheBlocker.SendCommand(Byte cmd, String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnStatusCacheBlocker.StaticConstructor">
            <summary>设置 SvnStatusCacheBlocker.SvnStatusCacheBlocker() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnStatusCacheBlocker.WindowsLogonSessionIdGet">
            <summary>设置 SvnStatusCacheBlocker.get_WindowsLogonSessionId() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnStatusCacheBlocker._SvnStatusCacheBlocker">
            <summary>设置 SvnStatusCacheBlocker.~SvnStatusCacheBlocker() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Implementation.Fakes.ShimSvnStatusCacheBlocker.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnStatusCacheBlocker.AllInstances.BlockedGet">
            <summary>设置 SvnStatusCacheBlocker.get_Blocked() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnStatusCacheBlocker.AllInstances.Dispose">
            <summary>设置 SvnStatusCacheBlocker.Dispose() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnStatusCacheBlocker.AllInstances.DisposeBoolean">
            <summary>设置 SvnStatusCacheBlocker.Dispose(Boolean ) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnStatusCacheBlocker.AllInstances.Release">
            <summary>设置 SvnStatusCacheBlocker.Release() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.ShimSvnStatusCacheBlocker.AllInstances._SvnStatusCacheBlocker">
            <summary>设置 SvnStatusCacheBlocker.~SvnStatusCacheBlocker() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Implementation.Fakes.StubSvnFsOperationRetryOverride">
            <summary>SharpSvn.Implementation.SvnFsOperationRetryOverride 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Implementation.Fakes.StubSvnFsOperationRetryOverride.#ctor(System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Implementation.Fakes.StubSvnFsOperationRetryOverride.Dispose(System.Boolean)">
            <summary>设置 SvnFsOperationRetryOverride.Dispose(Boolean ) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Implementation.Fakes.StubSvnFsOperationRetryOverride.DisposeBoolean">
            <summary>设置 SvnFsOperationRetryOverride.Dispose(Boolean ) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Implementation.Fakes.StubSvnFsOperationRetryOverride.InitializeStub">
            <summary>初始化 type StubSvnFsOperationRetryOverride 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Implementation.Fakes.StubSvnFsOperationRetryOverride.OnRetryLoopInvocation(System.Int32,SharpSvn.SvnAprErrorCode,SharpSvn.SvnWindowsErrorCode,System.String)">
            <summary>设置 SvnFsOperationRetryOverride.OnRetryLoopInvocation(Int32 nr, SvnAprErrorCode aprError, SvnWindowsErrorCode windowsError, String expr) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Implementation.Fakes.StubSvnFsOperationRetryOverride.OnRetryLoopInvocationInt32SvnAprErrorCodeSvnWindowsErrorCodeString">
            <summary>设置 SvnFsOperationRetryOverride.OnRetryLoopInvocation(Int32 nr, SvnAprErrorCode aprError, SvnWindowsErrorCode windowsError, String expr) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.StubSvnFsOperationRetryOverride.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.StubSvnFsOperationRetryOverride.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Implementation.Fakes.StubSvnFsOperationRetryOverride.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Remote.Fakes.ShimSvnRemoteCommonArgs">
            <summary>SharpSvn.Remote.SvnRemoteCommonArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteCommonArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteCommonArgs.#ctor(SharpSvn.Remote.SvnRemoteCommonArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteCommonArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteCommonArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteCommonArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteCommonArgs.Constructor">
            <summary>设置 SvnRemoteCommonArgs.SvnRemoteCommonArgs() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Remote.Fakes.ShimSvnRemoteCommonArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Remote.Fakes.ShimSvnRemoteDeletedRevisionArgs">
            <summary>SharpSvn.Remote.SvnRemoteDeletedRevisionArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteDeletedRevisionArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteDeletedRevisionArgs.#ctor(SharpSvn.Remote.SvnRemoteDeletedRevisionArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteDeletedRevisionArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteDeletedRevisionArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteDeletedRevisionArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteDeletedRevisionArgs.Constructor">
            <summary>设置 SvnRemoteDeletedRevisionArgs.SvnRemoteDeletedRevisionArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteDeletedRevisionArgs.EndRevisionGet">
            <summary>设置 SvnRemoteDeletedRevisionArgs.get_EndRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteDeletedRevisionArgs.EndRevisionSetSvnRevision">
            <summary>设置 SvnRemoteDeletedRevisionArgs.set_EndRevision(SvnRevision value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Remote.Fakes.ShimSvnRemoteDeletedRevisionArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteDeletedRevisionArgs.AllInstances.EndRevisionGet">
            <summary>设置 SvnRemoteDeletedRevisionArgs.get_EndRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteDeletedRevisionArgs.AllInstances.EndRevisionSetSvnRevision">
            <summary>设置 SvnRemoteDeletedRevisionArgs.set_EndRevision(SvnRevision value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Remote.Fakes.ShimSvnRemoteListArgs">
            <summary>SharpSvn.Remote.SvnRemoteListArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteListArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteListArgs.#ctor(SharpSvn.Remote.SvnRemoteListArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteListArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteListArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteListArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteListArgs.Constructor">
            <summary>设置 SvnRemoteListArgs.SvnRemoteListArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteListArgs.ListAddEventHandlerOfSvnRemoteListEventArgs">
            <summary>设置 SvnRemoteListArgs.add_List(EventHandler`1&lt;SvnRemoteListEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteListArgs.ListRaiseObjectSvnRemoteListEventArgs">
            <summary>设置 SvnRemoteListArgs.raise_List(Object sender, SvnRemoteListEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteListArgs.ListRemoveEventHandlerOfSvnRemoteListEventArgs">
            <summary>设置 SvnRemoteListArgs.remove_List(EventHandler`1&lt;SvnRemoteListEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteListArgs.OnListSvnRemoteListEventArgs">
            <summary>设置 SvnRemoteListArgs.OnList(SvnRemoteListEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteListArgs.RetrieveEntriesGet">
            <summary>设置 SvnRemoteListArgs.get_RetrieveEntries() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteListArgs.RetrieveEntriesSetSvnDirEntryItems">
            <summary>设置 SvnRemoteListArgs.set_RetrieveEntries(SvnDirEntryItems value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteListArgs.RevisionGet">
            <summary>设置 SvnRemoteListArgs.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteListArgs.RevisionSetInt64">
            <summary>设置 SvnRemoteListArgs.set_Revision(Int64 value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Remote.Fakes.ShimSvnRemoteListArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteListArgs.AllInstances.ListAddEventHandlerOfSvnRemoteListEventArgs">
            <summary>设置 SvnRemoteListArgs.add_List(EventHandler`1&lt;SvnRemoteListEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteListArgs.AllInstances.ListRaiseObjectSvnRemoteListEventArgs">
            <summary>设置 SvnRemoteListArgs.raise_List(Object sender, SvnRemoteListEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteListArgs.AllInstances.ListRemoveEventHandlerOfSvnRemoteListEventArgs">
            <summary>设置 SvnRemoteListArgs.remove_List(EventHandler`1&lt;SvnRemoteListEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteListArgs.AllInstances.OnListSvnRemoteListEventArgs">
            <summary>设置 SvnRemoteListArgs.OnList(SvnRemoteListEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteListArgs.AllInstances.RetrieveEntriesGet">
            <summary>设置 SvnRemoteListArgs.get_RetrieveEntries() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteListArgs.AllInstances.RetrieveEntriesSetSvnDirEntryItems">
            <summary>设置 SvnRemoteListArgs.set_RetrieveEntries(SvnDirEntryItems value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteListArgs.AllInstances.RevisionGet">
            <summary>设置 SvnRemoteListArgs.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteListArgs.AllInstances.RevisionSetInt64">
            <summary>设置 SvnRemoteListArgs.set_Revision(Int64 value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Remote.Fakes.ShimSvnRemoteListEventArgs">
            <summary>SharpSvn.Remote.SvnRemoteListEventArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteListEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteListEventArgs.#ctor(SharpSvn.Remote.SvnRemoteListEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteListEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteListEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteListEventArgs.Bind(SharpSvn.Remote.ISvnRepositoryListItem)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteListEventArgs.BaseUriGet">
            <summary>设置 SvnRemoteListEventArgs.get_BaseUri() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteListEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteListEventArgs.DetachBoolean">
            <summary>设置 SvnRemoteListEventArgs.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteListEventArgs.EntryGet">
            <summary>设置 SvnRemoteListEventArgs.get_Entry() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteListEventArgs.NameGet">
            <summary>设置 SvnRemoteListEventArgs.get_Name() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteListEventArgs.PathGet">
            <summary>设置 SvnRemoteListEventArgs.get_Path() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteListEventArgs.RetrievedRevisionGet">
            <summary>设置 SvnRemoteListEventArgs.get_RetrievedRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteListEventArgs.UriGet">
            <summary>设置 SvnRemoteListEventArgs.get_Uri() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Remote.Fakes.ShimSvnRemoteListEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteListEventArgs.AllInstances.BaseUriGet">
            <summary>设置 SvnRemoteListEventArgs.get_BaseUri() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteListEventArgs.AllInstances.DetachBoolean">
            <summary>设置 SvnRemoteListEventArgs.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteListEventArgs.AllInstances.EntryGet">
            <summary>设置 SvnRemoteListEventArgs.get_Entry() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteListEventArgs.AllInstances.NameGet">
            <summary>设置 SvnRemoteListEventArgs.get_Name() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteListEventArgs.AllInstances.PathGet">
            <summary>设置 SvnRemoteListEventArgs.get_Path() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteListEventArgs.AllInstances.RetrievedRevisionGet">
            <summary>设置 SvnRemoteListEventArgs.get_RetrievedRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteListEventArgs.AllInstances.UriGet">
            <summary>设置 SvnRemoteListEventArgs.get_Uri() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Remote.Fakes.ShimSvnRemoteListLockEventArgs">
            <summary>SharpSvn.Remote.SvnRemoteListLockEventArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteListLockEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteListLockEventArgs.#ctor(SharpSvn.Remote.SvnRemoteListLockEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteListLockEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteListLockEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteListLockEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteListLockEventArgs.DetachBoolean">
            <summary>设置 SvnRemoteListLockEventArgs.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteListLockEventArgs.LockGet">
            <summary>设置 SvnRemoteListLockEventArgs.get_Lock() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteListLockEventArgs.PathGet">
            <summary>设置 SvnRemoteListLockEventArgs.get_Path() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteListLockEventArgs.RepositoryPathGet">
            <summary>设置 SvnRemoteListLockEventArgs.get_RepositoryPath() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteListLockEventArgs.UriGet">
            <summary>设置 SvnRemoteListLockEventArgs.get_Uri() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Remote.Fakes.ShimSvnRemoteListLockEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteListLockEventArgs.AllInstances.DetachBoolean">
            <summary>设置 SvnRemoteListLockEventArgs.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteListLockEventArgs.AllInstances.LockGet">
            <summary>设置 SvnRemoteListLockEventArgs.get_Lock() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteListLockEventArgs.AllInstances.PathGet">
            <summary>设置 SvnRemoteListLockEventArgs.get_Path() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteListLockEventArgs.AllInstances.RepositoryPathGet">
            <summary>设置 SvnRemoteListLockEventArgs.get_RepositoryPath() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteListLockEventArgs.AllInstances.UriGet">
            <summary>设置 SvnRemoteListLockEventArgs.get_Uri() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Remote.Fakes.ShimSvnRemoteListLocksArgs">
            <summary>SharpSvn.Remote.SvnRemoteListLocksArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteListLocksArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteListLocksArgs.#ctor(SharpSvn.Remote.SvnRemoteListLocksArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteListLocksArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteListLocksArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteListLocksArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteListLocksArgs.Constructor">
            <summary>设置 SvnRemoteListLocksArgs.SvnRemoteListLocksArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteListLocksArgs.DepthGet">
            <summary>设置 SvnRemoteListLocksArgs.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteListLocksArgs.DepthSetSvnDepth">
            <summary>设置 SvnRemoteListLocksArgs.set_Depth(SvnDepth value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteListLocksArgs.ListAddEventHandlerOfSvnRemoteListLockEventArgs">
            <summary>设置 SvnRemoteListLocksArgs.add_List(EventHandler`1&lt;SvnRemoteListLockEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteListLocksArgs.ListRaiseObjectSvnRemoteListLockEventArgs">
            <summary>设置 SvnRemoteListLocksArgs.raise_List(Object sender, SvnRemoteListLockEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteListLocksArgs.ListRemoveEventHandlerOfSvnRemoteListLockEventArgs">
            <summary>设置 SvnRemoteListLocksArgs.remove_List(EventHandler`1&lt;SvnRemoteListLockEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteListLocksArgs.OnListSvnRemoteListLockEventArgs">
            <summary>设置 SvnRemoteListLocksArgs.OnList(SvnRemoteListLockEventArgs e) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Remote.Fakes.ShimSvnRemoteListLocksArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteListLocksArgs.AllInstances.DepthGet">
            <summary>设置 SvnRemoteListLocksArgs.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteListLocksArgs.AllInstances.DepthSetSvnDepth">
            <summary>设置 SvnRemoteListLocksArgs.set_Depth(SvnDepth value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteListLocksArgs.AllInstances.ListAddEventHandlerOfSvnRemoteListLockEventArgs">
            <summary>设置 SvnRemoteListLocksArgs.add_List(EventHandler`1&lt;SvnRemoteListLockEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteListLocksArgs.AllInstances.ListRaiseObjectSvnRemoteListLockEventArgs">
            <summary>设置 SvnRemoteListLocksArgs.raise_List(Object sender, SvnRemoteListLockEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteListLocksArgs.AllInstances.ListRemoveEventHandlerOfSvnRemoteListLockEventArgs">
            <summary>设置 SvnRemoteListLocksArgs.remove_List(EventHandler`1&lt;SvnRemoteListLockEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteListLocksArgs.AllInstances.OnListSvnRemoteListLockEventArgs">
            <summary>设置 SvnRemoteListLocksArgs.OnList(SvnRemoteListLockEventArgs e) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Remote.Fakes.ShimSvnRemoteLocationArgs">
            <summary>SharpSvn.Remote.SvnRemoteLocationArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteLocationArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteLocationArgs.#ctor(SharpSvn.Remote.SvnRemoteLocationArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteLocationArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteLocationArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLocationArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLocationArgs.Constructor">
            <summary>设置 SvnRemoteLocationArgs.SvnRemoteLocationArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLocationArgs.RevisionGet">
            <summary>设置 SvnRemoteLocationArgs.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLocationArgs.RevisionSetInt64">
            <summary>设置 SvnRemoteLocationArgs.set_Revision(Int64 value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Remote.Fakes.ShimSvnRemoteLocationArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLocationArgs.AllInstances.RevisionGet">
            <summary>设置 SvnRemoteLocationArgs.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLocationArgs.AllInstances.RevisionSetInt64">
            <summary>设置 SvnRemoteLocationArgs.set_Revision(Int64 value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Remote.Fakes.ShimSvnRemoteLocationSegmentEventArgs">
            <summary>SharpSvn.Remote.SvnRemoteLocationSegmentEventArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteLocationSegmentEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteLocationSegmentEventArgs.#ctor(SharpSvn.Remote.SvnRemoteLocationSegmentEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteLocationSegmentEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteLocationSegmentEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLocationSegmentEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLocationSegmentEventArgs.DetachBoolean">
            <summary>设置 SvnRemoteLocationSegmentEventArgs.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLocationSegmentEventArgs.EndRevisionGet">
            <summary>设置 SvnRemoteLocationSegmentEventArgs.get_EndRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLocationSegmentEventArgs.RangeGet">
            <summary>设置 SvnRemoteLocationSegmentEventArgs.get_Range() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLocationSegmentEventArgs.RepositoryPathGet">
            <summary>设置 SvnRemoteLocationSegmentEventArgs.get_RepositoryPath() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLocationSegmentEventArgs.StartRevisionGet">
            <summary>设置 SvnRemoteLocationSegmentEventArgs.get_StartRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLocationSegmentEventArgs.UriGet">
            <summary>设置 SvnRemoteLocationSegmentEventArgs.get_Uri() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Remote.Fakes.ShimSvnRemoteLocationSegmentEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLocationSegmentEventArgs.AllInstances.DetachBoolean">
            <summary>设置 SvnRemoteLocationSegmentEventArgs.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLocationSegmentEventArgs.AllInstances.EndRevisionGet">
            <summary>设置 SvnRemoteLocationSegmentEventArgs.get_EndRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLocationSegmentEventArgs.AllInstances.RangeGet">
            <summary>设置 SvnRemoteLocationSegmentEventArgs.get_Range() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLocationSegmentEventArgs.AllInstances.RepositoryPathGet">
            <summary>设置 SvnRemoteLocationSegmentEventArgs.get_RepositoryPath() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLocationSegmentEventArgs.AllInstances.StartRevisionGet">
            <summary>设置 SvnRemoteLocationSegmentEventArgs.get_StartRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLocationSegmentEventArgs.AllInstances.UriGet">
            <summary>设置 SvnRemoteLocationSegmentEventArgs.get_Uri() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Remote.Fakes.ShimSvnRemoteLocationSegmentsArgs">
            <summary>SharpSvn.Remote.SvnRemoteLocationSegmentsArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteLocationSegmentsArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteLocationSegmentsArgs.#ctor(SharpSvn.Remote.SvnRemoteLocationSegmentsArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteLocationSegmentsArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteLocationSegmentsArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLocationSegmentsArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLocationSegmentsArgs.Constructor">
            <summary>设置 SvnRemoteLocationSegmentsArgs.SvnRemoteLocationSegmentsArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLocationSegmentsArgs.EndRevisionGet">
            <summary>设置 SvnRemoteLocationSegmentsArgs.get_EndRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLocationSegmentsArgs.EndRevisionSetInt64">
            <summary>设置 SvnRemoteLocationSegmentsArgs.set_EndRevision(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLocationSegmentsArgs.LocationSegmentAddEventHandlerOfSvnRemoteLocationSegmentEventArgs">
            <summary>设置 SvnRemoteLocationSegmentsArgs.add_LocationSegment(EventHandler`1&lt;SvnRemoteLocationSegmentEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLocationSegmentsArgs.LocationSegmentRaiseObjectSvnRemoteLocationSegmentEventArgs">
            <summary>设置 SvnRemoteLocationSegmentsArgs.raise_LocationSegment(Object sender, SvnRemoteLocationSegmentEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLocationSegmentsArgs.LocationSegmentRemoveEventHandlerOfSvnRemoteLocationSegmentEventArgs">
            <summary>设置 SvnRemoteLocationSegmentsArgs.remove_LocationSegment(EventHandler`1&lt;SvnRemoteLocationSegmentEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLocationSegmentsArgs.OnLocationSegmentSvnRemoteLocationSegmentEventArgs">
            <summary>设置 SvnRemoteLocationSegmentsArgs.OnLocationSegment(SvnRemoteLocationSegmentEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLocationSegmentsArgs.OperationalRevisionGet">
            <summary>设置 SvnRemoteLocationSegmentsArgs.get_OperationalRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLocationSegmentsArgs.OperationalRevisionSetInt64">
            <summary>设置 SvnRemoteLocationSegmentsArgs.set_OperationalRevision(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLocationSegmentsArgs.StartRevisionGet">
            <summary>设置 SvnRemoteLocationSegmentsArgs.get_StartRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLocationSegmentsArgs.StartRevisionSetInt64">
            <summary>设置 SvnRemoteLocationSegmentsArgs.set_StartRevision(Int64 value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Remote.Fakes.ShimSvnRemoteLocationSegmentsArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLocationSegmentsArgs.AllInstances.EndRevisionGet">
            <summary>设置 SvnRemoteLocationSegmentsArgs.get_EndRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLocationSegmentsArgs.AllInstances.EndRevisionSetInt64">
            <summary>设置 SvnRemoteLocationSegmentsArgs.set_EndRevision(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLocationSegmentsArgs.AllInstances.LocationSegmentAddEventHandlerOfSvnRemoteLocationSegmentEventArgs">
            <summary>设置 SvnRemoteLocationSegmentsArgs.add_LocationSegment(EventHandler`1&lt;SvnRemoteLocationSegmentEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLocationSegmentsArgs.AllInstances.LocationSegmentRaiseObjectSvnRemoteLocationSegmentEventArgs">
            <summary>设置 SvnRemoteLocationSegmentsArgs.raise_LocationSegment(Object sender, SvnRemoteLocationSegmentEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLocationSegmentsArgs.AllInstances.LocationSegmentRemoveEventHandlerOfSvnRemoteLocationSegmentEventArgs">
            <summary>设置 SvnRemoteLocationSegmentsArgs.remove_LocationSegment(EventHandler`1&lt;SvnRemoteLocationSegmentEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLocationSegmentsArgs.AllInstances.OnLocationSegmentSvnRemoteLocationSegmentEventArgs">
            <summary>设置 SvnRemoteLocationSegmentsArgs.OnLocationSegment(SvnRemoteLocationSegmentEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLocationSegmentsArgs.AllInstances.OperationalRevisionGet">
            <summary>设置 SvnRemoteLocationSegmentsArgs.get_OperationalRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLocationSegmentsArgs.AllInstances.OperationalRevisionSetInt64">
            <summary>设置 SvnRemoteLocationSegmentsArgs.set_OperationalRevision(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLocationSegmentsArgs.AllInstances.StartRevisionGet">
            <summary>设置 SvnRemoteLocationSegmentsArgs.get_StartRevision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLocationSegmentsArgs.AllInstances.StartRevisionSetInt64">
            <summary>设置 SvnRemoteLocationSegmentsArgs.set_StartRevision(Int64 value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Remote.Fakes.ShimSvnRemoteLogArgs">
            <summary>SharpSvn.Remote.SvnRemoteLogArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteLogArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteLogArgs.#ctor(SharpSvn.Remote.SvnRemoteLogArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteLogArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteLogArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLogArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLogArgs.Constructor">
            <summary>设置 SvnRemoteLogArgs.SvnRemoteLogArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLogArgs.LimitGet">
            <summary>设置 SvnRemoteLogArgs.get_Limit() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLogArgs.LimitSetInt32">
            <summary>设置 SvnRemoteLogArgs.set_Limit(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLogArgs.LogAddEventHandlerOfSvnRemoteLogEventArgs">
            <summary>设置 SvnRemoteLogArgs.add_Log(EventHandler`1&lt;SvnRemoteLogEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLogArgs.LogRaiseObjectSvnRemoteLogEventArgs">
            <summary>设置 SvnRemoteLogArgs.raise_Log(Object sender, SvnRemoteLogEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLogArgs.LogRemoveEventHandlerOfSvnRemoteLogEventArgs">
            <summary>设置 SvnRemoteLogArgs.remove_Log(EventHandler`1&lt;SvnRemoteLogEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLogArgs.OnLogSvnRemoteLogEventArgs">
            <summary>设置 SvnRemoteLogArgs.OnLog(SvnRemoteLogEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLogArgs.RetrieveAllPropertiesGet">
            <summary>设置 SvnRemoteLogArgs.get_RetrieveAllProperties() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLogArgs.RetrieveAllPropertiesSetBoolean">
            <summary>设置 SvnRemoteLogArgs.set_RetrieveAllProperties(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLogArgs.RetrieveChangedPathsGet">
            <summary>设置 SvnRemoteLogArgs.get_RetrieveChangedPaths() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLogArgs.RetrieveChangedPathsSetBoolean">
            <summary>设置 SvnRemoteLogArgs.set_RetrieveChangedPaths(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLogArgs.RetrieveMergedRevisionsGet">
            <summary>设置 SvnRemoteLogArgs.get_RetrieveMergedRevisions() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLogArgs.RetrieveMergedRevisionsSetBoolean">
            <summary>设置 SvnRemoteLogArgs.set_RetrieveMergedRevisions(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLogArgs.RetrievePropertiesGet">
            <summary>设置 SvnRemoteLogArgs.get_RetrieveProperties() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLogArgs.RetrievePropertiesUsedGet">
            <summary>设置 SvnRemoteLogArgs.get_RetrievePropertiesUsed() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLogArgs.StrictNodeHistoryGet">
            <summary>设置 SvnRemoteLogArgs.get_StrictNodeHistory() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLogArgs.StrictNodeHistorySetBoolean">
            <summary>设置 SvnRemoteLogArgs.set_StrictNodeHistory(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Remote.Fakes.ShimSvnRemoteLogArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLogArgs.AllInstances.LimitGet">
            <summary>设置 SvnRemoteLogArgs.get_Limit() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLogArgs.AllInstances.LimitSetInt32">
            <summary>设置 SvnRemoteLogArgs.set_Limit(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLogArgs.AllInstances.LogAddEventHandlerOfSvnRemoteLogEventArgs">
            <summary>设置 SvnRemoteLogArgs.add_Log(EventHandler`1&lt;SvnRemoteLogEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLogArgs.AllInstances.LogRaiseObjectSvnRemoteLogEventArgs">
            <summary>设置 SvnRemoteLogArgs.raise_Log(Object sender, SvnRemoteLogEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLogArgs.AllInstances.LogRemoveEventHandlerOfSvnRemoteLogEventArgs">
            <summary>设置 SvnRemoteLogArgs.remove_Log(EventHandler`1&lt;SvnRemoteLogEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLogArgs.AllInstances.OnLogSvnRemoteLogEventArgs">
            <summary>设置 SvnRemoteLogArgs.OnLog(SvnRemoteLogEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLogArgs.AllInstances.RetrieveAllPropertiesGet">
            <summary>设置 SvnRemoteLogArgs.get_RetrieveAllProperties() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLogArgs.AllInstances.RetrieveAllPropertiesSetBoolean">
            <summary>设置 SvnRemoteLogArgs.set_RetrieveAllProperties(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLogArgs.AllInstances.RetrieveChangedPathsGet">
            <summary>设置 SvnRemoteLogArgs.get_RetrieveChangedPaths() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLogArgs.AllInstances.RetrieveChangedPathsSetBoolean">
            <summary>设置 SvnRemoteLogArgs.set_RetrieveChangedPaths(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLogArgs.AllInstances.RetrieveMergedRevisionsGet">
            <summary>设置 SvnRemoteLogArgs.get_RetrieveMergedRevisions() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLogArgs.AllInstances.RetrieveMergedRevisionsSetBoolean">
            <summary>设置 SvnRemoteLogArgs.set_RetrieveMergedRevisions(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLogArgs.AllInstances.RetrievePropertiesGet">
            <summary>设置 SvnRemoteLogArgs.get_RetrieveProperties() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLogArgs.AllInstances.RetrievePropertiesUsedGet">
            <summary>设置 SvnRemoteLogArgs.get_RetrievePropertiesUsed() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLogArgs.AllInstances.StrictNodeHistoryGet">
            <summary>设置 SvnRemoteLogArgs.get_StrictNodeHistory() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLogArgs.AllInstances.StrictNodeHistorySetBoolean">
            <summary>设置 SvnRemoteLogArgs.set_StrictNodeHistory(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Remote.Fakes.ShimSvnRemoteLogEventArgs">
            <summary>SharpSvn.Remote.SvnRemoteLogEventArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteLogEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteLogEventArgs.#ctor(SharpSvn.Remote.SvnRemoteLogEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteLogEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteLogEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLogEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLogEventArgs.HasChildrenGet">
            <summary>设置 SvnRemoteLogEventArgs.get_HasChildren() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLogEventArgs.MergeLogNestingLevelGet">
            <summary>设置 SvnRemoteLogEventArgs.get_MergeLogNestingLevel() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Remote.Fakes.ShimSvnRemoteLogEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLogEventArgs.AllInstances.HasChildrenGet">
            <summary>设置 SvnRemoteLogEventArgs.get_HasChildren() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteLogEventArgs.AllInstances.MergeLogNestingLevelGet">
            <summary>设置 SvnRemoteLogEventArgs.get_MergeLogNestingLevel() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Remote.Fakes.ShimSvnRemoteNodeKindArgs">
            <summary>SharpSvn.Remote.SvnRemoteNodeKindArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteNodeKindArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteNodeKindArgs.#ctor(SharpSvn.Remote.SvnRemoteNodeKindArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteNodeKindArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteNodeKindArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteNodeKindArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteNodeKindArgs.Constructor">
            <summary>设置 SvnRemoteNodeKindArgs.SvnRemoteNodeKindArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteNodeKindArgs.RevisionGet">
            <summary>设置 SvnRemoteNodeKindArgs.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteNodeKindArgs.RevisionSetInt64">
            <summary>设置 SvnRemoteNodeKindArgs.set_Revision(Int64 value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Remote.Fakes.ShimSvnRemoteNodeKindArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteNodeKindArgs.AllInstances.RevisionGet">
            <summary>设置 SvnRemoteNodeKindArgs.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteNodeKindArgs.AllInstances.RevisionSetInt64">
            <summary>设置 SvnRemoteNodeKindArgs.set_Revision(Int64 value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Remote.Fakes.ShimSvnRemoteOpenArgs">
            <summary>SharpSvn.Remote.SvnRemoteOpenArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteOpenArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteOpenArgs.#ctor(SharpSvn.Remote.SvnRemoteOpenArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteOpenArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteOpenArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteOpenArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteOpenArgs.Constructor">
            <summary>设置 SvnRemoteOpenArgs.SvnRemoteOpenArgs() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Remote.Fakes.ShimSvnRemoteOpenArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Remote.Fakes.ShimSvnRemotePropertiesArgs">
            <summary>SharpSvn.Remote.SvnRemotePropertiesArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemotePropertiesArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemotePropertiesArgs.#ctor(SharpSvn.Remote.SvnRemotePropertiesArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemotePropertiesArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemotePropertiesArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemotePropertiesArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemotePropertiesArgs.Constructor">
            <summary>设置 SvnRemotePropertiesArgs.SvnRemotePropertiesArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemotePropertiesArgs.NodeKindGet">
            <summary>设置 SvnRemotePropertiesArgs.get_NodeKind() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemotePropertiesArgs.NodeKindSetSvnNodeKind">
            <summary>设置 SvnRemotePropertiesArgs.set_NodeKind(SvnNodeKind value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemotePropertiesArgs.RevisionGet">
            <summary>设置 SvnRemotePropertiesArgs.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemotePropertiesArgs.RevisionSetInt64">
            <summary>设置 SvnRemotePropertiesArgs.set_Revision(Int64 value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Remote.Fakes.ShimSvnRemotePropertiesArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemotePropertiesArgs.AllInstances.NodeKindGet">
            <summary>设置 SvnRemotePropertiesArgs.get_NodeKind() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemotePropertiesArgs.AllInstances.NodeKindSetSvnNodeKind">
            <summary>设置 SvnRemotePropertiesArgs.set_NodeKind(SvnNodeKind value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemotePropertiesArgs.AllInstances.RevisionGet">
            <summary>设置 SvnRemotePropertiesArgs.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemotePropertiesArgs.AllInstances.RevisionSetInt64">
            <summary>设置 SvnRemotePropertiesArgs.set_Revision(Int64 value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Remote.Fakes.ShimSvnRemoteSession">
            <summary>SharpSvn.Remote.SvnRemoteSession 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.#ctor(SharpSvn.Remote.SvnRemoteSession)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.Bind(System.ComponentModel.IComponent)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.CancelAddEventHandlerOfSvnCancelEventArgs">
            <summary>设置 SvnRemoteSession.add_Cancel(EventHandler`1&lt;SvnCancelEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.CancelRaiseObjectSvnCancelEventArgs">
            <summary>设置 SvnRemoteSession.raise_Cancel(Object sender, SvnCancelEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.CancelRemoveEventHandlerOfSvnCancelEventArgs">
            <summary>设置 SvnRemoteSession.remove_Cancel(EventHandler`1&lt;SvnCancelEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.Constructor">
            <summary>设置 SvnRemoteSession.SvnRemoteSession() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.ConstructorUri">
            <summary>设置 SvnRemoteSession.SvnRemoteSession(Uri sessionUri) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.DisposeBoolean">
            <summary>设置 SvnRemoteSession.Dispose(Boolean ) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.Ensure">
            <summary>设置 SvnRemoteSession.Ensure() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.GetDeletedRevisionStringSvnRevisionInt64Out">
            <summary>设置 SvnRemoteSession.GetDeletedRevision(String relPath, SvnRevision revision, Int64&amp; revno) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.GetDeletedRevisionStringSvnRevisionSvnRemoteDeletedRevisionArgsInt64Out">
            <summary>设置 SvnRemoteSession.GetDeletedRevision(String relPath, SvnRevision revision, SvnRemoteDeletedRevisionArgs args, Int64&amp; revno) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.GetLatestRevisionInt64Out">
            <summary>设置 SvnRemoteSession.GetLatestRevision(Int64&amp; revision) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.GetLatestRevisionSvnRemoteCommonArgsInt64Out">
            <summary>设置 SvnRemoteSession.GetLatestRevision(SvnRemoteCommonArgs args, Int64&amp; revision) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.GetLocationSegmentsStringCollectionOfSvnRemoteLocationSegmentEventArgsOut">
            <summary>设置 SvnRemoteSession.GetLocationSegments(String relPath, Collection`1&lt;SvnRemoteLocationSegmentEventArgs&gt;&amp; list) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.GetLocationSegmentsStringSvnRemoteLocationSegmentsArgsCollectionOfSvnRemoteLocationSegmentEventArgsOut">
            <summary>设置 SvnRemoteSession.GetLocationSegments(String relPath, SvnRemoteLocationSegmentsArgs args, Collection`1&lt;SvnRemoteLocationSegmentEventArgs&gt;&amp; list) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.GetLocationsStringICollectionOfInt64SvnRemoteLocationArgsSvnRevisionLocationMapOut">
            <summary>设置 SvnRemoteSession.GetLocations(String relPath, ICollection`1&lt;Int64&gt; resolveRevisions, SvnRemoteLocationArgs args, SvnRevisionLocationMap&amp; locations) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.GetLocationsStringICollectionOfInt64SvnRevisionLocationMapOut">
            <summary>设置 SvnRemoteSession.GetLocations(String relPath, ICollection`1&lt;Int64&gt; resolveRevisions, SvnRevisionLocationMap&amp; locations) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.GetNodeKindStringSvnNodeKindOut">
            <summary>设置 SvnRemoteSession.GetNodeKind(String relPath, SvnNodeKind&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.GetNodeKindStringSvnRemoteNodeKindArgsSvnNodeKindOut">
            <summary>设置 SvnRemoteSession.GetNodeKind(String relPath, SvnRemoteNodeKindArgs args, SvnNodeKind&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.GetPropertiesStringSvnPropertyCollectionOut">
            <summary>设置 SvnRemoteSession.GetProperties(String relPath, SvnPropertyCollection&amp; properties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.GetPropertiesStringSvnRemotePropertiesArgsSvnPropertyCollectionOut">
            <summary>设置 SvnRemoteSession.GetProperties(String relPath, SvnRemotePropertiesArgs args, SvnPropertyCollection&amp; properties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.GetRepositoryIdGuidOut">
            <summary>设置 SvnRemoteSession.GetRepositoryId(Guid&amp; uuid) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.GetRepositoryIdSvnRemoteCommonArgsGuidOut">
            <summary>设置 SvnRemoteSession.GetRepositoryId(SvnRemoteCommonArgs args, Guid&amp; uuid) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.GetRepositoryRootSvnRemoteCommonArgsUriOut">
            <summary>设置 SvnRemoteSession.GetRepositoryRoot(SvnRemoteCommonArgs args, Uri&amp; uri) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.GetRepositoryRootUriOut">
            <summary>设置 SvnRemoteSession.GetRepositoryRoot(Uri&amp; uri) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.GetStatStringSvnRemoteStatArgsSvnRemoteStatEventArgsOut">
            <summary>设置 SvnRemoteSession.GetStat(String relPath, SvnRemoteStatArgs args, SvnRemoteStatEventArgs&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.GetStatStringSvnRemoteStatEventArgsOut">
            <summary>设置 SvnRemoteSession.GetStat(String relPath, SvnRemoteStatEventArgs&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.HandleClientCancelSvnCancelEventArgs">
            <summary>设置 SvnRemoteSession.HandleClientCancel(SvnCancelEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.HandleClientErrorSvnErrorEventArgs">
            <summary>设置 SvnRemoteSession.HandleClientError(SvnErrorEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.HandleClientProgressSvnProgressEventArgs">
            <summary>设置 SvnRemoteSession.HandleClientProgress(SvnProgressEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.HandleProcessingSvnProcessingEventArgs">
            <summary>设置 SvnRemoteSession.HandleProcessing(SvnProcessingEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.InternalGetLatestRevisionSvnRemoteSessionArgsInt64Out">
            <summary>设置 SvnRemoteSession.InternalGetLatestRevision(SvnRemoteSessionArgs args, Int64&amp; revno) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.InternalResolveRevisionSvnRevisionSvnRemoteSessionArgsInt64Out">
            <summary>设置 SvnRemoteSession.InternalResolveRevision(SvnRevision revision, SvnRemoteSessionArgs args, Int64&amp; revno) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.IsConnectionlessRepositoryUri">
            <summary>设置 SvnRemoteSession.IsConnectionlessRepository(Uri uri) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.ListLocksStringEventHandlerOfSvnRemoteListLockEventArgs">
            <summary>设置 SvnRemoteSession.ListLocks(String relPath, EventHandler`1&lt;SvnRemoteListLockEventArgs&gt; listHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.ListLocksStringSvnRemoteListLocksArgsEventHandlerOfSvnRemoteListLockEventArgs">
            <summary>设置 SvnRemoteSession.ListLocks(String relPath, SvnRemoteListLocksArgs args, EventHandler`1&lt;SvnRemoteListLockEventArgs&gt; listHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.ListStringEventHandlerOfSvnRemoteListEventArgs">
            <summary>设置 SvnRemoteSession.List(String relPath, EventHandler`1&lt;SvnRemoteListEventArgs&gt; listHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.ListStringSvnRemoteListArgsEventHandlerOfSvnRemoteListEventArgs">
            <summary>设置 SvnRemoteSession.List(String relPath, SvnRemoteListArgs args, EventHandler`1&lt;SvnRemoteListEventArgs&gt; listHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.LocationSegmentsStringEventHandlerOfSvnRemoteLocationSegmentEventArgs">
            <summary>设置 SvnRemoteSession.LocationSegments(String relPath, EventHandler`1&lt;SvnRemoteLocationSegmentEventArgs&gt; segmentHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.LocationSegmentsStringSvnRemoteLocationSegmentsArgsEventHandlerOfSvnRemoteLocationSegmentEventArgs">
            <summary>设置 SvnRemoteSession.LocationSegments(String relPath, SvnRemoteLocationSegmentsArgs args, EventHandler`1&lt;SvnRemoteLocationSegmentEventArgs&gt; segmentHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.LogICollectionOfStringSvnRevisionRangeEventHandlerOfSvnRemoteLogEventArgs">
            <summary>设置 SvnRemoteSession.Log(ICollection`1&lt;String&gt; relPaths, SvnRevisionRange range, EventHandler`1&lt;SvnRemoteLogEventArgs&gt; logHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.LogICollectionOfStringSvnRevisionRangeSvnRemoteLogArgsEventHandlerOfSvnRemoteLogEventArgs">
            <summary>设置 SvnRemoteSession.Log(ICollection`1&lt;String&gt; relPaths, SvnRevisionRange range, SvnRemoteLogArgs args, EventHandler`1&lt;SvnRemoteLogEventArgs&gt; logHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.LogStringSvnRevisionRangeEventHandlerOfSvnRemoteLogEventArgs">
            <summary>设置 SvnRemoteSession.Log(String relPath, SvnRevisionRange range, EventHandler`1&lt;SvnRemoteLogEventArgs&gt; logHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.LogStringSvnRevisionRangeSvnRemoteLogArgsEventHandlerOfSvnRemoteLogEventArgs">
            <summary>设置 SvnRemoteSession.Log(String relPath, SvnRevisionRange range, SvnRemoteLogArgs args, EventHandler`1&lt;SvnRemoteLogEventArgs&gt; logHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.MakeRelativePathUri">
            <summary>设置 SvnRemoteSession.MakeRelativePath(Uri uri) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.MakeRepositoryRootRelativePathUri">
            <summary>设置 SvnRemoteSession.MakeRepositoryRootRelativePath(Uri uri) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnRemoteSession.OnCancel(SvnCancelEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.OnProcessingSvnProcessingEventArgs">
            <summary>设置 SvnRemoteSession.OnProcessing(SvnProcessingEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnRemoteSession.OnProgress(SvnProgressEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnRemoteSession.OnSvnError(SvnErrorEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.OpenUri">
            <summary>设置 SvnRemoteSession.Open(Uri sessionUri) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.OpenUriSvnRemoteOpenArgs">
            <summary>设置 SvnRemoteSession.Open(Uri sessionUri, SvnRemoteOpenArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.ProcessingAddEventHandlerOfSvnProcessingEventArgs">
            <summary>设置 SvnRemoteSession.add_Processing(EventHandler`1&lt;SvnProcessingEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.ProcessingRaiseObjectSvnProcessingEventArgs">
            <summary>设置 SvnRemoteSession.raise_Processing(Object sender, SvnProcessingEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.ProcessingRemoveEventHandlerOfSvnProcessingEventArgs">
            <summary>设置 SvnRemoteSession.remove_Processing(EventHandler`1&lt;SvnProcessingEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.ProgressAddEventHandlerOfSvnProgressEventArgs">
            <summary>设置 SvnRemoteSession.add_Progress(EventHandler`1&lt;SvnProgressEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.ProgressRaiseObjectSvnProgressEventArgs">
            <summary>设置 SvnRemoteSession.raise_Progress(Object sender, SvnProgressEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.ProgressRemoveEventHandlerOfSvnProgressEventArgs">
            <summary>设置 SvnRemoteSession.remove_Progress(EventHandler`1&lt;SvnProgressEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.ReparentUri">
            <summary>设置 SvnRemoteSession.Reparent(Uri newSessionUri) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.ReparentUriSvnRemoteCommonArgs">
            <summary>设置 SvnRemoteSession.Reparent(Uri newSessionUri, SvnRemoteCommonArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.RequiresExternalAuthorizationUri">
            <summary>设置 SvnRemoteSession.RequiresExternalAuthorization(Uri uri) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.ResolveRevisionSvnRevisionInt64Out">
            <summary>设置 SvnRemoteSession.ResolveRevision(SvnRevision revision, Int64&amp; revno) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.ResolveRevisionSvnRevisionSvnRemoteCommonArgsInt64Out">
            <summary>设置 SvnRemoteSession.ResolveRevision(SvnRevision revision, SvnRemoteCommonArgs args, Int64&amp; revno) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.SessionUriGet">
            <summary>设置 SvnRemoteSession.get_SessionUri() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.SvnErrorAddEventHandlerOfSvnErrorEventArgs">
            <summary>设置 SvnRemoteSession.add_SvnError(EventHandler`1&lt;SvnErrorEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.SvnErrorRaiseObjectSvnErrorEventArgs">
            <summary>设置 SvnRemoteSession.raise_SvnError(Object sender, SvnErrorEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.SvnErrorRemoveEventHandlerOfSvnErrorEventArgs">
            <summary>设置 SvnRemoteSession.remove_SvnError(EventHandler`1&lt;SvnErrorEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.WriteStringStream">
            <summary>设置 SvnRemoteSession.Write(String relPath, Stream output) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.WriteStringStreamSvnPropertyCollectionOut">
            <summary>设置 SvnRemoteSession.Write(String relPath, Stream output, SvnPropertyCollection&amp; properties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.WriteStringStreamSvnRemoteWriteArgs">
            <summary>设置 SvnRemoteSession.Write(String relPath, Stream output, SvnRemoteWriteArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.WriteStringStreamSvnRemoteWriteArgsSvnPropertyCollectionOut">
            <summary>设置 SvnRemoteSession.Write(String relPath, Stream output, SvnRemoteWriteArgs args, SvnPropertyCollection&amp; properties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession._SvnRemoteSession">
            <summary>设置 SvnRemoteSession.~SvnRemoteSession() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.AllInstances.CancelAddEventHandlerOfSvnCancelEventArgs">
            <summary>设置 SvnRemoteSession.add_Cancel(EventHandler`1&lt;SvnCancelEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.AllInstances.CancelRaiseObjectSvnCancelEventArgs">
            <summary>设置 SvnRemoteSession.raise_Cancel(Object sender, SvnCancelEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.AllInstances.CancelRemoveEventHandlerOfSvnCancelEventArgs">
            <summary>设置 SvnRemoteSession.remove_Cancel(EventHandler`1&lt;SvnCancelEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.AllInstances.DisposeBoolean">
            <summary>设置 SvnRemoteSession.Dispose(Boolean ) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.AllInstances.Ensure">
            <summary>设置 SvnRemoteSession.Ensure() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.AllInstances.GetDeletedRevisionStringSvnRevisionInt64Out">
            <summary>设置 SvnRemoteSession.GetDeletedRevision(String relPath, SvnRevision revision, Int64&amp; revno) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.AllInstances.GetDeletedRevisionStringSvnRevisionSvnRemoteDeletedRevisionArgsInt64Out">
            <summary>设置 SvnRemoteSession.GetDeletedRevision(String relPath, SvnRevision revision, SvnRemoteDeletedRevisionArgs args, Int64&amp; revno) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.AllInstances.GetLatestRevisionInt64Out">
            <summary>设置 SvnRemoteSession.GetLatestRevision(Int64&amp; revision) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.AllInstances.GetLatestRevisionSvnRemoteCommonArgsInt64Out">
            <summary>设置 SvnRemoteSession.GetLatestRevision(SvnRemoteCommonArgs args, Int64&amp; revision) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.AllInstances.GetLocationSegmentsStringCollectionOfSvnRemoteLocationSegmentEventArgsOut">
            <summary>设置 SvnRemoteSession.GetLocationSegments(String relPath, Collection`1&lt;SvnRemoteLocationSegmentEventArgs&gt;&amp; list) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.AllInstances.GetLocationSegmentsStringSvnRemoteLocationSegmentsArgsCollectionOfSvnRemoteLocationSegmentEventArgsOut">
            <summary>设置 SvnRemoteSession.GetLocationSegments(String relPath, SvnRemoteLocationSegmentsArgs args, Collection`1&lt;SvnRemoteLocationSegmentEventArgs&gt;&amp; list) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.AllInstances.GetLocationsStringICollectionOfInt64SvnRemoteLocationArgsSvnRevisionLocationMapOut">
            <summary>设置 SvnRemoteSession.GetLocations(String relPath, ICollection`1&lt;Int64&gt; resolveRevisions, SvnRemoteLocationArgs args, SvnRevisionLocationMap&amp; locations) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.AllInstances.GetLocationsStringICollectionOfInt64SvnRevisionLocationMapOut">
            <summary>设置 SvnRemoteSession.GetLocations(String relPath, ICollection`1&lt;Int64&gt; resolveRevisions, SvnRevisionLocationMap&amp; locations) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.AllInstances.GetNodeKindStringSvnNodeKindOut">
            <summary>设置 SvnRemoteSession.GetNodeKind(String relPath, SvnNodeKind&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.AllInstances.GetNodeKindStringSvnRemoteNodeKindArgsSvnNodeKindOut">
            <summary>设置 SvnRemoteSession.GetNodeKind(String relPath, SvnRemoteNodeKindArgs args, SvnNodeKind&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.AllInstances.GetPropertiesStringSvnPropertyCollectionOut">
            <summary>设置 SvnRemoteSession.GetProperties(String relPath, SvnPropertyCollection&amp; properties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.AllInstances.GetPropertiesStringSvnRemotePropertiesArgsSvnPropertyCollectionOut">
            <summary>设置 SvnRemoteSession.GetProperties(String relPath, SvnRemotePropertiesArgs args, SvnPropertyCollection&amp; properties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.AllInstances.GetRepositoryIdGuidOut">
            <summary>设置 SvnRemoteSession.GetRepositoryId(Guid&amp; uuid) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.AllInstances.GetRepositoryIdSvnRemoteCommonArgsGuidOut">
            <summary>设置 SvnRemoteSession.GetRepositoryId(SvnRemoteCommonArgs args, Guid&amp; uuid) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.AllInstances.GetRepositoryRootSvnRemoteCommonArgsUriOut">
            <summary>设置 SvnRemoteSession.GetRepositoryRoot(SvnRemoteCommonArgs args, Uri&amp; uri) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.AllInstances.GetRepositoryRootUriOut">
            <summary>设置 SvnRemoteSession.GetRepositoryRoot(Uri&amp; uri) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.AllInstances.GetStatStringSvnRemoteStatArgsSvnRemoteStatEventArgsOut">
            <summary>设置 SvnRemoteSession.GetStat(String relPath, SvnRemoteStatArgs args, SvnRemoteStatEventArgs&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.AllInstances.GetStatStringSvnRemoteStatEventArgsOut">
            <summary>设置 SvnRemoteSession.GetStat(String relPath, SvnRemoteStatEventArgs&amp; result) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.AllInstances.HandleClientCancelSvnCancelEventArgs">
            <summary>设置 SvnRemoteSession.HandleClientCancel(SvnCancelEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.AllInstances.HandleClientErrorSvnErrorEventArgs">
            <summary>设置 SvnRemoteSession.HandleClientError(SvnErrorEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.AllInstances.HandleClientProgressSvnProgressEventArgs">
            <summary>设置 SvnRemoteSession.HandleClientProgress(SvnProgressEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.AllInstances.HandleProcessingSvnProcessingEventArgs">
            <summary>设置 SvnRemoteSession.HandleProcessing(SvnProcessingEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.AllInstances.InternalGetLatestRevisionSvnRemoteSessionArgsInt64Out">
            <summary>设置 SvnRemoteSession.InternalGetLatestRevision(SvnRemoteSessionArgs args, Int64&amp; revno) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.AllInstances.InternalResolveRevisionSvnRevisionSvnRemoteSessionArgsInt64Out">
            <summary>设置 SvnRemoteSession.InternalResolveRevision(SvnRevision revision, SvnRemoteSessionArgs args, Int64&amp; revno) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.AllInstances.ListLocksStringEventHandlerOfSvnRemoteListLockEventArgs">
            <summary>设置 SvnRemoteSession.ListLocks(String relPath, EventHandler`1&lt;SvnRemoteListLockEventArgs&gt; listHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.AllInstances.ListLocksStringSvnRemoteListLocksArgsEventHandlerOfSvnRemoteListLockEventArgs">
            <summary>设置 SvnRemoteSession.ListLocks(String relPath, SvnRemoteListLocksArgs args, EventHandler`1&lt;SvnRemoteListLockEventArgs&gt; listHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.AllInstances.ListStringEventHandlerOfSvnRemoteListEventArgs">
            <summary>设置 SvnRemoteSession.List(String relPath, EventHandler`1&lt;SvnRemoteListEventArgs&gt; listHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.AllInstances.ListStringSvnRemoteListArgsEventHandlerOfSvnRemoteListEventArgs">
            <summary>设置 SvnRemoteSession.List(String relPath, SvnRemoteListArgs args, EventHandler`1&lt;SvnRemoteListEventArgs&gt; listHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.AllInstances.LocationSegmentsStringEventHandlerOfSvnRemoteLocationSegmentEventArgs">
            <summary>设置 SvnRemoteSession.LocationSegments(String relPath, EventHandler`1&lt;SvnRemoteLocationSegmentEventArgs&gt; segmentHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.AllInstances.LocationSegmentsStringSvnRemoteLocationSegmentsArgsEventHandlerOfSvnRemoteLocationSegmentEventArgs">
            <summary>设置 SvnRemoteSession.LocationSegments(String relPath, SvnRemoteLocationSegmentsArgs args, EventHandler`1&lt;SvnRemoteLocationSegmentEventArgs&gt; segmentHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.AllInstances.LogICollectionOfStringSvnRevisionRangeEventHandlerOfSvnRemoteLogEventArgs">
            <summary>设置 SvnRemoteSession.Log(ICollection`1&lt;String&gt; relPaths, SvnRevisionRange range, EventHandler`1&lt;SvnRemoteLogEventArgs&gt; logHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.AllInstances.LogICollectionOfStringSvnRevisionRangeSvnRemoteLogArgsEventHandlerOfSvnRemoteLogEventArgs">
            <summary>设置 SvnRemoteSession.Log(ICollection`1&lt;String&gt; relPaths, SvnRevisionRange range, SvnRemoteLogArgs args, EventHandler`1&lt;SvnRemoteLogEventArgs&gt; logHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.AllInstances.LogStringSvnRevisionRangeEventHandlerOfSvnRemoteLogEventArgs">
            <summary>设置 SvnRemoteSession.Log(String relPath, SvnRevisionRange range, EventHandler`1&lt;SvnRemoteLogEventArgs&gt; logHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.AllInstances.LogStringSvnRevisionRangeSvnRemoteLogArgsEventHandlerOfSvnRemoteLogEventArgs">
            <summary>设置 SvnRemoteSession.Log(String relPath, SvnRevisionRange range, SvnRemoteLogArgs args, EventHandler`1&lt;SvnRemoteLogEventArgs&gt; logHandler) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.AllInstances.MakeRelativePathUri">
            <summary>设置 SvnRemoteSession.MakeRelativePath(Uri uri) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.AllInstances.MakeRepositoryRootRelativePathUri">
            <summary>设置 SvnRemoteSession.MakeRepositoryRootRelativePath(Uri uri) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.AllInstances.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnRemoteSession.OnCancel(SvnCancelEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.AllInstances.OnProcessingSvnProcessingEventArgs">
            <summary>设置 SvnRemoteSession.OnProcessing(SvnProcessingEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.AllInstances.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnRemoteSession.OnProgress(SvnProgressEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.AllInstances.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnRemoteSession.OnSvnError(SvnErrorEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.AllInstances.OpenUri">
            <summary>设置 SvnRemoteSession.Open(Uri sessionUri) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.AllInstances.OpenUriSvnRemoteOpenArgs">
            <summary>设置 SvnRemoteSession.Open(Uri sessionUri, SvnRemoteOpenArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.AllInstances.ProcessingAddEventHandlerOfSvnProcessingEventArgs">
            <summary>设置 SvnRemoteSession.add_Processing(EventHandler`1&lt;SvnProcessingEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.AllInstances.ProcessingRaiseObjectSvnProcessingEventArgs">
            <summary>设置 SvnRemoteSession.raise_Processing(Object sender, SvnProcessingEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.AllInstances.ProcessingRemoveEventHandlerOfSvnProcessingEventArgs">
            <summary>设置 SvnRemoteSession.remove_Processing(EventHandler`1&lt;SvnProcessingEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.AllInstances.ProgressAddEventHandlerOfSvnProgressEventArgs">
            <summary>设置 SvnRemoteSession.add_Progress(EventHandler`1&lt;SvnProgressEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.AllInstances.ProgressRaiseObjectSvnProgressEventArgs">
            <summary>设置 SvnRemoteSession.raise_Progress(Object sender, SvnProgressEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.AllInstances.ProgressRemoveEventHandlerOfSvnProgressEventArgs">
            <summary>设置 SvnRemoteSession.remove_Progress(EventHandler`1&lt;SvnProgressEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.AllInstances.ReparentUri">
            <summary>设置 SvnRemoteSession.Reparent(Uri newSessionUri) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.AllInstances.ReparentUriSvnRemoteCommonArgs">
            <summary>设置 SvnRemoteSession.Reparent(Uri newSessionUri, SvnRemoteCommonArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.AllInstances.ResolveRevisionSvnRevisionInt64Out">
            <summary>设置 SvnRemoteSession.ResolveRevision(SvnRevision revision, Int64&amp; revno) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.AllInstances.ResolveRevisionSvnRevisionSvnRemoteCommonArgsInt64Out">
            <summary>设置 SvnRemoteSession.ResolveRevision(SvnRevision revision, SvnRemoteCommonArgs args, Int64&amp; revno) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.AllInstances.SessionUriGet">
            <summary>设置 SvnRemoteSession.get_SessionUri() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.AllInstances.SvnErrorAddEventHandlerOfSvnErrorEventArgs">
            <summary>设置 SvnRemoteSession.add_SvnError(EventHandler`1&lt;SvnErrorEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.AllInstances.SvnErrorRaiseObjectSvnErrorEventArgs">
            <summary>设置 SvnRemoteSession.raise_SvnError(Object sender, SvnErrorEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.AllInstances.SvnErrorRemoveEventHandlerOfSvnErrorEventArgs">
            <summary>设置 SvnRemoteSession.remove_SvnError(EventHandler`1&lt;SvnErrorEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.AllInstances.WriteStringStream">
            <summary>设置 SvnRemoteSession.Write(String relPath, Stream output) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.AllInstances.WriteStringStreamSvnPropertyCollectionOut">
            <summary>设置 SvnRemoteSession.Write(String relPath, Stream output, SvnPropertyCollection&amp; properties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.AllInstances.WriteStringStreamSvnRemoteWriteArgs">
            <summary>设置 SvnRemoteSession.Write(String relPath, Stream output, SvnRemoteWriteArgs args) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.AllInstances.WriteStringStreamSvnRemoteWriteArgsSvnPropertyCollectionOut">
            <summary>设置 SvnRemoteSession.Write(String relPath, Stream output, SvnRemoteWriteArgs args, SvnPropertyCollection&amp; properties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSession.AllInstances._SvnRemoteSession">
            <summary>设置 SvnRemoteSession.~SvnRemoteSession() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Remote.Fakes.ShimSvnRemoteSessionArgs">
            <summary>SharpSvn.Remote.SvnRemoteSessionArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteSessionArgs.#ctor(SharpSvn.Remote.SvnRemoteSessionArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteSessionArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteSessionArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSessionArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSessionArgs.CommandTypeGet">
            <summary>设置 SvnRemoteSessionArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSessionArgs.Constructor">
            <summary>设置 SvnRemoteSessionArgs.SvnRemoteSessionArgs() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Remote.Fakes.ShimSvnRemoteSessionArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteSessionArgs.AllInstances.CommandTypeGet">
            <summary>设置 SvnRemoteSessionArgs.get_CommandType() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Remote.Fakes.ShimSvnRemoteStatArgs">
            <summary>SharpSvn.Remote.SvnRemoteStatArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteStatArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteStatArgs.#ctor(SharpSvn.Remote.SvnRemoteStatArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteStatArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteStatArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteStatArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteStatArgs.Constructor">
            <summary>设置 SvnRemoteStatArgs.SvnRemoteStatArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteStatArgs.RevisionGet">
            <summary>设置 SvnRemoteStatArgs.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteStatArgs.RevisionSetInt64">
            <summary>设置 SvnRemoteStatArgs.set_Revision(Int64 value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Remote.Fakes.ShimSvnRemoteStatArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteStatArgs.AllInstances.RevisionGet">
            <summary>设置 SvnRemoteStatArgs.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteStatArgs.AllInstances.RevisionSetInt64">
            <summary>设置 SvnRemoteStatArgs.set_Revision(Int64 value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Remote.Fakes.ShimSvnRemoteStatEventArgs">
            <summary>SharpSvn.Remote.SvnRemoteStatEventArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteStatEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteStatEventArgs.#ctor(SharpSvn.Remote.SvnRemoteStatEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteStatEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteStatEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteStatEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteStatEventArgs.DetachBoolean">
            <summary>设置 SvnRemoteStatEventArgs.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteStatEventArgs.EntryGet">
            <summary>设置 SvnRemoteStatEventArgs.get_Entry() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Remote.Fakes.ShimSvnRemoteStatEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteStatEventArgs.AllInstances.DetachBoolean">
            <summary>设置 SvnRemoteStatEventArgs.Detach(Boolean keepProperties) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteStatEventArgs.AllInstances.EntryGet">
            <summary>设置 SvnRemoteStatEventArgs.get_Entry() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Remote.Fakes.ShimSvnRemoteWriteArgs">
            <summary>SharpSvn.Remote.SvnRemoteWriteArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteWriteArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteWriteArgs.#ctor(SharpSvn.Remote.SvnRemoteWriteArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteWriteArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRemoteWriteArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteWriteArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteWriteArgs.Constructor">
            <summary>设置 SvnRemoteWriteArgs.SvnRemoteWriteArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteWriteArgs.RevisionGet">
            <summary>设置 SvnRemoteWriteArgs.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteWriteArgs.RevisionSetInt64">
            <summary>设置 SvnRemoteWriteArgs.set_Revision(Int64 value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Remote.Fakes.ShimSvnRemoteWriteArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteWriteArgs.AllInstances.RevisionGet">
            <summary>设置 SvnRemoteWriteArgs.get_Revision() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRemoteWriteArgs.AllInstances.RevisionSetInt64">
            <summary>设置 SvnRemoteWriteArgs.set_Revision(Int64 value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Remote.Fakes.ShimSvnRevisionLocationMap">
            <summary>SharpSvn.Remote.SvnRevisionLocationMap 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRevisionLocationMap.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRevisionLocationMap.#ctor(SharpSvn.Remote.SvnRevisionLocationMap)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRevisionLocationMap.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRevisionLocationMap.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRevisionLocationMap.Bind(System.Collections.ICollection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRevisionLocationMap.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRevisionLocationMap.Bind(System.Collections.IList)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRevisionLocationMap.Bind(System.Collections.Generic.ICollection{SharpSvn.SvnUriTarget})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRevisionLocationMap.Bind(System.Collections.Generic.IEnumerable{SharpSvn.SvnUriTarget})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRevisionLocationMap.Bind(System.Collections.Generic.IList{SharpSvn.SvnUriTarget})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRevisionLocationMap.Bind(System.Collections.Generic.IReadOnlyCollection{SharpSvn.SvnUriTarget})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.ShimSvnRevisionLocationMap.Bind(System.Collections.Generic.IReadOnlyList{SharpSvn.SvnUriTarget})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRevisionLocationMap.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRevisionLocationMap.Constructor">
            <summary>设置 SvnRevisionLocationMap.SvnRevisionLocationMap() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRevisionLocationMap.GetKeyForItemSvnUriTarget">
            <summary>设置 SvnRevisionLocationMap.GetKeyForItem(SvnUriTarget item) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Remote.Fakes.ShimSvnRevisionLocationMap.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.ShimSvnRevisionLocationMap.AllInstances.GetKeyForItemSvnUriTarget">
            <summary>设置 SvnRevisionLocationMap.GetKeyForItem(SvnUriTarget item) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Remote.Fakes.StubISvnRepositoryListItem">
            <summary>SharpSvn.Remote.ISvnRepositoryListItem 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubISvnRepositoryListItem.#ctor">
            <summary>初始化 type StubISvnRepositoryListItem 的新实例</summary>
        </member>
        <member name="F:SharpSvn.Remote.Fakes.StubISvnRepositoryListItem.EntryGet">
            <summary>设置 ISvnRepositoryListItem.get_Entry() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Remote.Fakes.StubISvnRepositoryListItem.UriGet">
            <summary>设置 ISvnRepositoryListItem.get_Uri() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.StubISvnRepositoryListItem.ss::SharpSvn#Remote#ISvnRepositoryListItem#Entry">
            <summary>设置 ISvnRepositoryListItem.get_Entry() 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.StubISvnRepositoryListItem.ss::SharpSvn#Remote#ISvnRepositoryListItem#Uri">
            <summary>设置 ISvnRepositoryListItem.get_Uri() 的 stub</summary>
        </member>
        <member name="T:SharpSvn.Remote.Fakes.StubSvnRemoteCommonArgs">
            <summary>SharpSvn.Remote.SvnRemoteCommonArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteCommonArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteCommonArgs.InitializeStub">
            <summary>初始化 type StubSvnRemoteCommonArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteCommonArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Remote.Fakes.StubSvnRemoteCommonArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteCommonArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Remote.Fakes.StubSvnRemoteCommonArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteCommonArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Remote.Fakes.StubSvnRemoteCommonArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteCommonArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Remote.Fakes.StubSvnRemoteCommonArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.StubSvnRemoteCommonArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.StubSvnRemoteCommonArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.StubSvnRemoteCommonArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Remote.Fakes.StubSvnRemoteDeletedRevisionArgs">
            <summary>SharpSvn.Remote.SvnRemoteDeletedRevisionArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteDeletedRevisionArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteDeletedRevisionArgs.InitializeStub">
            <summary>初始化 type StubSvnRemoteDeletedRevisionArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteDeletedRevisionArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Remote.Fakes.StubSvnRemoteDeletedRevisionArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteDeletedRevisionArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Remote.Fakes.StubSvnRemoteDeletedRevisionArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteDeletedRevisionArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Remote.Fakes.StubSvnRemoteDeletedRevisionArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteDeletedRevisionArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Remote.Fakes.StubSvnRemoteDeletedRevisionArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.StubSvnRemoteDeletedRevisionArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.StubSvnRemoteDeletedRevisionArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.StubSvnRemoteDeletedRevisionArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Remote.Fakes.StubSvnRemoteListArgs">
            <summary>SharpSvn.Remote.SvnRemoteListArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteListArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteListArgs.InitializeStub">
            <summary>初始化 type StubSvnRemoteListArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteListArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Remote.Fakes.StubSvnRemoteListArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteListArgs.OnList(SharpSvn.Remote.SvnRemoteListEventArgs)">
            <summary>设置 SvnRemoteListArgs.OnList(SvnRemoteListEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Remote.Fakes.StubSvnRemoteListArgs.OnListSvnRemoteListEventArgs">
            <summary>设置 SvnRemoteListArgs.OnList(SvnRemoteListEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteListArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Remote.Fakes.StubSvnRemoteListArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteListArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Remote.Fakes.StubSvnRemoteListArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteListArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Remote.Fakes.StubSvnRemoteListArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.StubSvnRemoteListArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.StubSvnRemoteListArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.StubSvnRemoteListArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Remote.Fakes.StubSvnRemoteListLocksArgs">
            <summary>SharpSvn.Remote.SvnRemoteListLocksArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteListLocksArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteListLocksArgs.InitializeStub">
            <summary>初始化 type StubSvnRemoteListLocksArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteListLocksArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Remote.Fakes.StubSvnRemoteListLocksArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteListLocksArgs.OnList(SharpSvn.Remote.SvnRemoteListLockEventArgs)">
            <summary>设置 SvnRemoteListLocksArgs.OnList(SvnRemoteListLockEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Remote.Fakes.StubSvnRemoteListLocksArgs.OnListSvnRemoteListLockEventArgs">
            <summary>设置 SvnRemoteListLocksArgs.OnList(SvnRemoteListLockEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteListLocksArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Remote.Fakes.StubSvnRemoteListLocksArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteListLocksArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Remote.Fakes.StubSvnRemoteListLocksArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteListLocksArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Remote.Fakes.StubSvnRemoteListLocksArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.StubSvnRemoteListLocksArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.StubSvnRemoteListLocksArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.StubSvnRemoteListLocksArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Remote.Fakes.StubSvnRemoteLocationArgs">
            <summary>SharpSvn.Remote.SvnRemoteLocationArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteLocationArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteLocationArgs.InitializeStub">
            <summary>初始化 type StubSvnRemoteLocationArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteLocationArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Remote.Fakes.StubSvnRemoteLocationArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteLocationArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Remote.Fakes.StubSvnRemoteLocationArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteLocationArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Remote.Fakes.StubSvnRemoteLocationArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteLocationArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Remote.Fakes.StubSvnRemoteLocationArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.StubSvnRemoteLocationArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.StubSvnRemoteLocationArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.StubSvnRemoteLocationArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Remote.Fakes.StubSvnRemoteLocationSegmentsArgs">
            <summary>SharpSvn.Remote.SvnRemoteLocationSegmentsArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteLocationSegmentsArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteLocationSegmentsArgs.InitializeStub">
            <summary>初始化 type StubSvnRemoteLocationSegmentsArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteLocationSegmentsArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Remote.Fakes.StubSvnRemoteLocationSegmentsArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteLocationSegmentsArgs.OnLocationSegment(SharpSvn.Remote.SvnRemoteLocationSegmentEventArgs)">
            <summary>设置 SvnRemoteLocationSegmentsArgs.OnLocationSegment(SvnRemoteLocationSegmentEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Remote.Fakes.StubSvnRemoteLocationSegmentsArgs.OnLocationSegmentSvnRemoteLocationSegmentEventArgs">
            <summary>设置 SvnRemoteLocationSegmentsArgs.OnLocationSegment(SvnRemoteLocationSegmentEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteLocationSegmentsArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Remote.Fakes.StubSvnRemoteLocationSegmentsArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteLocationSegmentsArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Remote.Fakes.StubSvnRemoteLocationSegmentsArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteLocationSegmentsArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Remote.Fakes.StubSvnRemoteLocationSegmentsArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.StubSvnRemoteLocationSegmentsArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.StubSvnRemoteLocationSegmentsArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.StubSvnRemoteLocationSegmentsArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Remote.Fakes.StubSvnRemoteLogArgs">
            <summary>SharpSvn.Remote.SvnRemoteLogArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteLogArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteLogArgs.InitializeStub">
            <summary>初始化 type StubSvnRemoteLogArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteLogArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Remote.Fakes.StubSvnRemoteLogArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteLogArgs.OnLog(SharpSvn.Remote.SvnRemoteLogEventArgs)">
            <summary>设置 SvnRemoteLogArgs.OnLog(SvnRemoteLogEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Remote.Fakes.StubSvnRemoteLogArgs.OnLogSvnRemoteLogEventArgs">
            <summary>设置 SvnRemoteLogArgs.OnLog(SvnRemoteLogEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteLogArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Remote.Fakes.StubSvnRemoteLogArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteLogArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Remote.Fakes.StubSvnRemoteLogArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteLogArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Remote.Fakes.StubSvnRemoteLogArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.StubSvnRemoteLogArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.StubSvnRemoteLogArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.StubSvnRemoteLogArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Remote.Fakes.StubSvnRemoteNodeKindArgs">
            <summary>SharpSvn.Remote.SvnRemoteNodeKindArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteNodeKindArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteNodeKindArgs.InitializeStub">
            <summary>初始化 type StubSvnRemoteNodeKindArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteNodeKindArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Remote.Fakes.StubSvnRemoteNodeKindArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteNodeKindArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Remote.Fakes.StubSvnRemoteNodeKindArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteNodeKindArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Remote.Fakes.StubSvnRemoteNodeKindArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteNodeKindArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Remote.Fakes.StubSvnRemoteNodeKindArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.StubSvnRemoteNodeKindArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.StubSvnRemoteNodeKindArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.StubSvnRemoteNodeKindArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Remote.Fakes.StubSvnRemoteOpenArgs">
            <summary>SharpSvn.Remote.SvnRemoteOpenArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteOpenArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteOpenArgs.InitializeStub">
            <summary>初始化 type StubSvnRemoteOpenArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteOpenArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Remote.Fakes.StubSvnRemoteOpenArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteOpenArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Remote.Fakes.StubSvnRemoteOpenArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteOpenArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Remote.Fakes.StubSvnRemoteOpenArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteOpenArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Remote.Fakes.StubSvnRemoteOpenArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.StubSvnRemoteOpenArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.StubSvnRemoteOpenArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.StubSvnRemoteOpenArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Remote.Fakes.StubSvnRemotePropertiesArgs">
            <summary>SharpSvn.Remote.SvnRemotePropertiesArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemotePropertiesArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemotePropertiesArgs.InitializeStub">
            <summary>初始化 type StubSvnRemotePropertiesArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemotePropertiesArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Remote.Fakes.StubSvnRemotePropertiesArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemotePropertiesArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Remote.Fakes.StubSvnRemotePropertiesArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemotePropertiesArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Remote.Fakes.StubSvnRemotePropertiesArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemotePropertiesArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Remote.Fakes.StubSvnRemotePropertiesArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.StubSvnRemotePropertiesArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.StubSvnRemotePropertiesArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.StubSvnRemotePropertiesArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Remote.Fakes.StubSvnRemoteSession">
            <summary>SharpSvn.Remote.SvnRemoteSession 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteSession.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteSession.#ctor(System.Uri)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteSession.AttachBackingFieldToSite">
            <summary>附加委托以将 StubSvnRemoteSession.Site 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteSession.Dispose(System.Boolean)">
            <summary>设置 SvnRemoteSession.Dispose(Boolean ) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Remote.Fakes.StubSvnRemoteSession.DisposeBoolean">
            <summary>设置 SvnRemoteSession.Dispose(Boolean ) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteSession.InitializeStub">
            <summary>初始化 type StubSvnRemoteSession 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteSession.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnRemoteSession.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Remote.Fakes.StubSvnRemoteSession.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnRemoteSession.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteSession.OnProcessing(SharpSvn.SvnProcessingEventArgs)">
            <summary>设置 SvnRemoteSession.OnProcessing(SvnProcessingEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Remote.Fakes.StubSvnRemoteSession.OnProcessingSvnProcessingEventArgs">
            <summary>设置 SvnRemoteSession.OnProcessing(SvnProcessingEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteSession.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnRemoteSession.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Remote.Fakes.StubSvnRemoteSession.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnRemoteSession.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteSession.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnRemoteSession.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Remote.Fakes.StubSvnRemoteSession.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnRemoteSession.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Remote.Fakes.StubSvnRemoteSession.SiteGet">
            <summary>设置 SvnClientContext.get_Site() 的 stub</summary>
        </member>
        <member name="F:SharpSvn.Remote.Fakes.StubSvnRemoteSession.SiteSetISite">
            <summary>设置 SvnClientContext.set_Site(ISite value) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.StubSvnRemoteSession.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.StubSvnRemoteSession.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.StubSvnRemoteSession.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.StubSvnRemoteSession.Site">
            <summary>设置 SvnClientContext.get_Site() 的 stub</summary>
        </member>
        <member name="T:SharpSvn.Remote.Fakes.StubSvnRemoteSessionArgs">
            <summary>SharpSvn.Remote.SvnRemoteSessionArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteSessionArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteSessionArgs.InitializeStub">
            <summary>初始化 type StubSvnRemoteSessionArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteSessionArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Remote.Fakes.StubSvnRemoteSessionArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteSessionArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Remote.Fakes.StubSvnRemoteSessionArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteSessionArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Remote.Fakes.StubSvnRemoteSessionArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteSessionArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Remote.Fakes.StubSvnRemoteSessionArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.StubSvnRemoteSessionArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.StubSvnRemoteSessionArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.StubSvnRemoteSessionArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Remote.Fakes.StubSvnRemoteStatArgs">
            <summary>SharpSvn.Remote.SvnRemoteStatArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteStatArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteStatArgs.InitializeStub">
            <summary>初始化 type StubSvnRemoteStatArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteStatArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Remote.Fakes.StubSvnRemoteStatArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteStatArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Remote.Fakes.StubSvnRemoteStatArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteStatArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Remote.Fakes.StubSvnRemoteStatArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteStatArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Remote.Fakes.StubSvnRemoteStatArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.StubSvnRemoteStatArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.StubSvnRemoteStatArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.StubSvnRemoteStatArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Remote.Fakes.StubSvnRemoteWriteArgs">
            <summary>SharpSvn.Remote.SvnRemoteWriteArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteWriteArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteWriteArgs.InitializeStub">
            <summary>初始化 type StubSvnRemoteWriteArgs 的新实例</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteWriteArgs.OnCancel(SharpSvn.SvnCancelEventArgs)">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Remote.Fakes.StubSvnRemoteWriteArgs.OnCancelSvnCancelEventArgs">
            <summary>设置 SvnClientArgs.OnCancel(SvnCancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteWriteArgs.OnNotify(SharpSvn.SvnNotifyEventArgs)">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Remote.Fakes.StubSvnRemoteWriteArgs.OnNotifySvnNotifyEventArgs">
            <summary>设置 SvnClientArgs.OnNotify(SvnNotifyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteWriteArgs.OnProgress(SharpSvn.SvnProgressEventArgs)">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Remote.Fakes.StubSvnRemoteWriteArgs.OnProgressSvnProgressEventArgs">
            <summary>设置 SvnClientArgs.OnProgress(SvnProgressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Remote.Fakes.StubSvnRemoteWriteArgs.OnSvnError(SharpSvn.SvnErrorEventArgs)">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Remote.Fakes.StubSvnRemoteWriteArgs.OnSvnErrorSvnErrorEventArgs">
            <summary>设置 SvnClientArgs.OnSvnError(SvnErrorEventArgs e) 的 stub</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.StubSvnRemoteWriteArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.StubSvnRemoteWriteArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Remote.Fakes.StubSvnRemoteWriteArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Security.Fakes.ShimSvnAuthentication">
            <summary>SharpSvn.Security.SvnAuthentication 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Security.Fakes.ShimSvnAuthentication.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Security.Fakes.ShimSvnAuthentication.#ctor(SharpSvn.Security.SvnAuthentication)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Security.Fakes.ShimSvnAuthentication.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Security.Fakes.ShimSvnAuthentication.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:SharpSvn.Security.Fakes.ShimSvnAuthentication.SetRetryLimitOf1EventHandlerOfM0Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.EventHandler{``0},System.Int32})">
            <summary>设置 SvnAuthentication.SetRetryLimit(EventHandler`1&lt;!!0&gt; handler, Int32 limit) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.AddConsoleHandlers">
            <summary>设置 SvnAuthentication.AddConsoleHandlers() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.AddSubversionFileHandlers">
            <summary>设置 SvnAuthentication.AddSubversionFileHandlers() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.BeforeEngineDialogAddEventHandlerOfSvnBeforeEngineDialogEventArgs">
            <summary>设置 SvnAuthentication.add_BeforeEngineDialog(EventHandler`1&lt;SvnBeforeEngineDialogEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.BeforeEngineDialogRaiseObjectSvnBeforeEngineDialogEventArgs">
            <summary>设置 SvnAuthentication.raise_BeforeEngineDialog(Object sender, SvnBeforeEngineDialogEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.BeforeEngineDialogRemoveEventHandlerOfSvnBeforeEngineDialogEventArgs">
            <summary>设置 SvnAuthentication.remove_BeforeEngineDialog(EventHandler`1&lt;SvnBeforeEngineDialogEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.Clear">
            <summary>设置 SvnAuthentication.Clear() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.ClearAuthenticationCache">
            <summary>设置 SvnAuthentication.ClearAuthenticationCache() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.ConsoleSslClientCertificateHandlerGet">
            <summary>设置 SvnAuthentication.get_ConsoleSslClientCertificateHandler() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.ConsoleSslClientCertificatePasswordHandlerGet">
            <summary>设置 SvnAuthentication.get_ConsoleSslClientCertificatePasswordHandler() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.ConsoleSslServerTrustHandlerGet">
            <summary>设置 SvnAuthentication.get_ConsoleSslServerTrustHandler() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.ConsoleUserNameHandlerGet">
            <summary>设置 SvnAuthentication.get_ConsoleUserNameHandler() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.ConsoleUserNamePasswordHandlerGet">
            <summary>设置 SvnAuthentication.get_ConsoleUserNamePasswordHandler() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.CookieGet">
            <summary>设置 SvnAuthentication.get_Cookie() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.CopyAuthenticationCacheSvnClientContext">
            <summary>设置 SvnAuthentication.CopyAuthenticationCache(SvnClientContext client) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.DefaultCredentialsGet">
            <summary>设置 SvnAuthentication.get_DefaultCredentials() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.DefaultCredentialsSetICredentials">
            <summary>设置 SvnAuthentication.set_DefaultCredentials(ICredentials value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.ForceCredentialsStringString">
            <summary>设置 SvnAuthentication.ForceCredentials(String userName, String password) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.GetCachedItemsSvnAuthenticationCacheType">
            <summary>设置 SvnAuthentication.GetCachedItems(SvnAuthenticationCacheType type) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.GetSshCredentials">
            <summary>设置 SvnAuthentication.GetSshCredentials() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.ImpConsoleSslClientCertificateHandlerObjectSvnSslClientCertificateEventArgs">
            <summary>设置 SvnAuthentication.ImpConsoleSslClientCertificateHandler(Object sender, SvnSslClientCertificateEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.ImpConsoleSslClientCertificatePasswordHandlerObjectSvnSslClientCertificatePasswordEventArgs">
            <summary>设置 SvnAuthentication.ImpConsoleSslClientCertificatePasswordHandler(Object sender, SvnSslClientCertificatePasswordEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.ImpConsoleSslServerTrustHandlerObjectSvnSslServerTrustEventArgs">
            <summary>设置 SvnAuthentication.ImpConsoleSslServerTrustHandler(Object sender, SvnSslServerTrustEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.ImpConsoleUserNameHandlerObjectSvnUserNameEventArgs">
            <summary>设置 SvnAuthentication.ImpConsoleUserNameHandler(Object sender, SvnUserNameEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.ImpConsoleUserNamePasswordHandlerObjectSvnUserNamePasswordEventArgs">
            <summary>设置 SvnAuthentication.ImpConsoleUserNamePasswordHandler(Object sender, SvnUserNamePasswordEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.ImpSubversionFileSslClientCertificateHandlerObjectSvnSslClientCertificateEventArgs">
            <summary>设置 SvnAuthentication.ImpSubversionFileSslClientCertificateHandler(Object sender, SvnSslClientCertificateEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.ImpSubversionFileSslClientCertificatePasswordHandlerObjectSvnSslClientCertificatePasswordEventArgs">
            <summary>设置 SvnAuthentication.ImpSubversionFileSslClientCertificatePasswordHandler(Object sender, SvnSslClientCertificatePasswordEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.ImpSubversionFileSslServerTrustHandlerObjectSvnSslServerTrustEventArgs">
            <summary>设置 SvnAuthentication.ImpSubversionFileSslServerTrustHandler(Object sender, SvnSslServerTrustEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.ImpSubversionFileUserNameHandlerObjectSvnUserNameEventArgs">
            <summary>设置 SvnAuthentication.ImpSubversionFileUserNameHandler(Object sender, SvnUserNameEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.ImpSubversionFileUserNamePasswordHandlerObjectSvnUserNamePasswordEventArgs">
            <summary>设置 SvnAuthentication.ImpSubversionFileUserNamePasswordHandler(Object sender, SvnUserNamePasswordEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.ImpSubversionWindowsFileUserNamePasswordHandlerObjectSvnUserNamePasswordEventArgs">
            <summary>设置 SvnAuthentication.ImpSubversionWindowsFileUserNamePasswordHandler(Object sender, SvnUserNamePasswordEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.ImpSubversionWindowsSslAuthorityTrustHandlerObjectSvnSslAuthorityTrustEventArgs">
            <summary>设置 SvnAuthentication.ImpSubversionWindowsSslAuthorityTrustHandler(Object sender, SvnSslAuthorityTrustEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.ImpSubversionWindowsSslClientCertificatePasswordHandlerObjectSvnSslClientCertificatePasswordEventArgs">
            <summary>设置 SvnAuthentication.ImpSubversionWindowsSslClientCertificatePasswordHandler(Object sender, SvnSslClientCertificatePasswordEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.ImpSubversionWindowsSslServerTrustHandlerObjectSvnSslServerTrustEventArgs">
            <summary>设置 SvnAuthentication.ImpSubversionWindowsSslServerTrustHandler(Object sender, SvnSslServerTrustEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.InvokeOnBeforeEngineDialogSvnBeforeEngineDialogEventArgs">
            <summary>设置 SvnAuthentication.InvokeOnBeforeEngineDialog(SvnBeforeEngineDialogEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.MaybePrintRealmSvnAuthenticationEventArgs">
            <summary>设置 SvnAuthentication.MaybePrintRealm(SvnAuthenticationEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.OnBeforeEngineDialogSvnBeforeEngineDialogEventArgs">
            <summary>设置 SvnAuthentication.OnBeforeEngineDialog(SvnBeforeEngineDialogEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.ReadPassword">
            <summary>设置 SvnAuthentication.ReadPassword() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.SslAuthorityTrustHandlersAddEventHandlerOfSvnSslAuthorityTrustEventArgs">
            <summary>设置 SvnAuthentication.add_SslAuthorityTrustHandlers(EventHandler`1&lt;SvnSslAuthorityTrustEventArgs&gt; e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.SslAuthorityTrustHandlersRemoveEventHandlerOfSvnSslAuthorityTrustEventArgs">
            <summary>设置 SvnAuthentication.remove_SslAuthorityTrustHandlers(EventHandler`1&lt;SvnSslAuthorityTrustEventArgs&gt; e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.SslClientCertificateHandlersAddEventHandlerOfSvnSslClientCertificateEventArgs">
            <summary>设置 SvnAuthentication.add_SslClientCertificateHandlers(EventHandler`1&lt;SvnSslClientCertificateEventArgs&gt; e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.SslClientCertificateHandlersRemoveEventHandlerOfSvnSslClientCertificateEventArgs">
            <summary>设置 SvnAuthentication.remove_SslClientCertificateHandlers(EventHandler`1&lt;SvnSslClientCertificateEventArgs&gt; e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.SslClientCertificatePasswordHandlersAddEventHandlerOfSvnSslClientCertificatePasswordEventArgs">
            <summary>设置 SvnAuthentication.add_SslClientCertificatePasswordHandlers(EventHandler`1&lt;SvnSslClientCertificatePasswordEventArgs&gt; e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.SslClientCertificatePasswordHandlersRemoveEventHandlerOfSvnSslClientCertificatePasswordEventArgs">
            <summary>设置 SvnAuthentication.remove_SslClientCertificatePasswordHandlers(EventHandler`1&lt;SvnSslClientCertificatePasswordEventArgs&gt; e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.SslServerTrustHandlersAddEventHandlerOfSvnSslServerTrustEventArgs">
            <summary>设置 SvnAuthentication.add_SslServerTrustHandlers(EventHandler`1&lt;SvnSslServerTrustEventArgs&gt; e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.SslServerTrustHandlersRemoveEventHandlerOfSvnSslServerTrustEventArgs">
            <summary>设置 SvnAuthentication.remove_SslServerTrustHandlers(EventHandler`1&lt;SvnSslServerTrustEventArgs&gt; e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.StaticConstructor">
            <summary>设置 SvnAuthentication.SvnAuthentication() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.SubversionFileSslClientCertificateHandlerGet">
            <summary>设置 SvnAuthentication.get_SubversionFileSslClientCertificateHandler() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.SubversionFileSslClientCertificatePasswordHandlerGet">
            <summary>设置 SvnAuthentication.get_SubversionFileSslClientCertificatePasswordHandler() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.SubversionFileSslServerTrustHandlerGet">
            <summary>设置 SvnAuthentication.get_SubversionFileSslServerTrustHandler() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.SubversionFileUserNameHandlerGet">
            <summary>设置 SvnAuthentication.get_SubversionFileUserNameHandler() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.SubversionFileUserNamePasswordHandlerGet">
            <summary>设置 SvnAuthentication.get_SubversionFileUserNamePasswordHandler() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.SubversionWindowsSslAuthorityTrustHandlerGet">
            <summary>设置 SvnAuthentication.get_SubversionWindowsSslAuthorityTrustHandler() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.SubversionWindowsSslClientCertificatePasswordHandlerGet">
            <summary>设置 SvnAuthentication.get_SubversionWindowsSslClientCertificatePasswordHandler() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.SubversionWindowsSslServerTrustHandlerGet">
            <summary>设置 SvnAuthentication.get_SubversionWindowsSslServerTrustHandler() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.SubversionWindowsUserNamePasswordHandlerGet">
            <summary>设置 SvnAuthentication.get_SubversionWindowsUserNamePasswordHandler() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.UserNameHandlersAddEventHandlerOfSvnUserNameEventArgs">
            <summary>设置 SvnAuthentication.add_UserNameHandlers(EventHandler`1&lt;SvnUserNameEventArgs&gt; e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.UserNameHandlersRemoveEventHandlerOfSvnUserNameEventArgs">
            <summary>设置 SvnAuthentication.remove_UserNameHandlers(EventHandler`1&lt;SvnUserNameEventArgs&gt; e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.UserNamePasswordHandlersAddEventHandlerOfSvnUserNamePasswordEventArgs">
            <summary>设置 SvnAuthentication.add_UserNamePasswordHandlers(EventHandler`1&lt;SvnUserNamePasswordEventArgs&gt; e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.UserNamePasswordHandlersRemoveEventHandlerOfSvnUserNamePasswordEventArgs">
            <summary>设置 SvnAuthentication.remove_UserNamePasswordHandlers(EventHandler`1&lt;SvnUserNamePasswordEventArgs&gt; e) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Security.Fakes.ShimSvnAuthentication.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:SharpSvn.Security.Fakes.ShimSvnAuthentication.AllInstances.SetRetryLimitOf1EventHandlerOfM0Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{SharpSvn.Security.SvnAuthentication,System.EventHandler{``0},System.Int32})">
            <summary>设置 SvnAuthentication.SetRetryLimit(EventHandler`1&lt;!!0&gt; handler, Int32 limit) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.AllInstances.AddConsoleHandlers">
            <summary>设置 SvnAuthentication.AddConsoleHandlers() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.AllInstances.AddSubversionFileHandlers">
            <summary>设置 SvnAuthentication.AddSubversionFileHandlers() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.AllInstances.BeforeEngineDialogAddEventHandlerOfSvnBeforeEngineDialogEventArgs">
            <summary>设置 SvnAuthentication.add_BeforeEngineDialog(EventHandler`1&lt;SvnBeforeEngineDialogEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.AllInstances.BeforeEngineDialogRaiseObjectSvnBeforeEngineDialogEventArgs">
            <summary>设置 SvnAuthentication.raise_BeforeEngineDialog(Object sender, SvnBeforeEngineDialogEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.AllInstances.BeforeEngineDialogRemoveEventHandlerOfSvnBeforeEngineDialogEventArgs">
            <summary>设置 SvnAuthentication.remove_BeforeEngineDialog(EventHandler`1&lt;SvnBeforeEngineDialogEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.AllInstances.Clear">
            <summary>设置 SvnAuthentication.Clear() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.AllInstances.ClearAuthenticationCache">
            <summary>设置 SvnAuthentication.ClearAuthenticationCache() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.AllInstances.CookieGet">
            <summary>设置 SvnAuthentication.get_Cookie() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.AllInstances.CopyAuthenticationCacheSvnClientContext">
            <summary>设置 SvnAuthentication.CopyAuthenticationCache(SvnClientContext client) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.AllInstances.DefaultCredentialsGet">
            <summary>设置 SvnAuthentication.get_DefaultCredentials() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.AllInstances.DefaultCredentialsSetICredentials">
            <summary>设置 SvnAuthentication.set_DefaultCredentials(ICredentials value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.AllInstances.ForceCredentialsStringString">
            <summary>设置 SvnAuthentication.ForceCredentials(String userName, String password) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.AllInstances.GetCachedItemsSvnAuthenticationCacheType">
            <summary>设置 SvnAuthentication.GetCachedItems(SvnAuthenticationCacheType type) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.AllInstances.GetSshCredentials">
            <summary>设置 SvnAuthentication.GetSshCredentials() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.AllInstances.InvokeOnBeforeEngineDialogSvnBeforeEngineDialogEventArgs">
            <summary>设置 SvnAuthentication.InvokeOnBeforeEngineDialog(SvnBeforeEngineDialogEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.AllInstances.OnBeforeEngineDialogSvnBeforeEngineDialogEventArgs">
            <summary>设置 SvnAuthentication.OnBeforeEngineDialog(SvnBeforeEngineDialogEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.AllInstances.SslAuthorityTrustHandlersAddEventHandlerOfSvnSslAuthorityTrustEventArgs">
            <summary>设置 SvnAuthentication.add_SslAuthorityTrustHandlers(EventHandler`1&lt;SvnSslAuthorityTrustEventArgs&gt; e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.AllInstances.SslAuthorityTrustHandlersRemoveEventHandlerOfSvnSslAuthorityTrustEventArgs">
            <summary>设置 SvnAuthentication.remove_SslAuthorityTrustHandlers(EventHandler`1&lt;SvnSslAuthorityTrustEventArgs&gt; e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.AllInstances.SslClientCertificateHandlersAddEventHandlerOfSvnSslClientCertificateEventArgs">
            <summary>设置 SvnAuthentication.add_SslClientCertificateHandlers(EventHandler`1&lt;SvnSslClientCertificateEventArgs&gt; e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.AllInstances.SslClientCertificateHandlersRemoveEventHandlerOfSvnSslClientCertificateEventArgs">
            <summary>设置 SvnAuthentication.remove_SslClientCertificateHandlers(EventHandler`1&lt;SvnSslClientCertificateEventArgs&gt; e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.AllInstances.SslClientCertificatePasswordHandlersAddEventHandlerOfSvnSslClientCertificatePasswordEventArgs">
            <summary>设置 SvnAuthentication.add_SslClientCertificatePasswordHandlers(EventHandler`1&lt;SvnSslClientCertificatePasswordEventArgs&gt; e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.AllInstances.SslClientCertificatePasswordHandlersRemoveEventHandlerOfSvnSslClientCertificatePasswordEventArgs">
            <summary>设置 SvnAuthentication.remove_SslClientCertificatePasswordHandlers(EventHandler`1&lt;SvnSslClientCertificatePasswordEventArgs&gt; e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.AllInstances.SslServerTrustHandlersAddEventHandlerOfSvnSslServerTrustEventArgs">
            <summary>设置 SvnAuthentication.add_SslServerTrustHandlers(EventHandler`1&lt;SvnSslServerTrustEventArgs&gt; e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.AllInstances.SslServerTrustHandlersRemoveEventHandlerOfSvnSslServerTrustEventArgs">
            <summary>设置 SvnAuthentication.remove_SslServerTrustHandlers(EventHandler`1&lt;SvnSslServerTrustEventArgs&gt; e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.AllInstances.UserNameHandlersAddEventHandlerOfSvnUserNameEventArgs">
            <summary>设置 SvnAuthentication.add_UserNameHandlers(EventHandler`1&lt;SvnUserNameEventArgs&gt; e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.AllInstances.UserNameHandlersRemoveEventHandlerOfSvnUserNameEventArgs">
            <summary>设置 SvnAuthentication.remove_UserNameHandlers(EventHandler`1&lt;SvnUserNameEventArgs&gt; e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.AllInstances.UserNamePasswordHandlersAddEventHandlerOfSvnUserNamePasswordEventArgs">
            <summary>设置 SvnAuthentication.add_UserNamePasswordHandlers(EventHandler`1&lt;SvnUserNamePasswordEventArgs&gt; e) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthentication.AllInstances.UserNamePasswordHandlersRemoveEventHandlerOfSvnUserNamePasswordEventArgs">
            <summary>设置 SvnAuthentication.remove_UserNamePasswordHandlers(EventHandler`1&lt;SvnUserNamePasswordEventArgs&gt; e) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Security.Fakes.ShimSvnAuthenticationCacheItem">
            <summary>SharpSvn.Security.SvnAuthenticationCacheItem 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Security.Fakes.ShimSvnAuthenticationCacheItem.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Security.Fakes.ShimSvnAuthenticationCacheItem.#ctor(SharpSvn.Security.SvnAuthenticationCacheItem)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Security.Fakes.ShimSvnAuthenticationCacheItem.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Security.Fakes.ShimSvnAuthenticationCacheItem.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthenticationCacheItem.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthenticationCacheItem.CacheTypeGet">
            <summary>设置 SvnAuthenticationCacheItem.get_CacheType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthenticationCacheItem.ConstructorSvnAuthenticationCacheTypeStringString">
            <summary>设置 SvnAuthenticationCacheItem.SvnAuthenticationCacheItem(SvnAuthenticationCacheType type, String realm, String filename) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthenticationCacheItem.ConstructorSvnAuthenticationCacheTypeUriString">
            <summary>设置 SvnAuthenticationCacheItem.SvnAuthenticationCacheItem(SvnAuthenticationCacheType type, Uri realmUri, String targetName) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthenticationCacheItem.Delete">
            <summary>设置 SvnAuthenticationCacheItem.Delete() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthenticationCacheItem.IsDeletedGet">
            <summary>设置 SvnAuthenticationCacheItem.get_IsDeleted() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthenticationCacheItem.RealmGet">
            <summary>设置 SvnAuthenticationCacheItem.get_Realm() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthenticationCacheItem.RealmUriGet">
            <summary>设置 SvnAuthenticationCacheItem.get_RealmUri() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Security.Fakes.ShimSvnAuthenticationCacheItem.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthenticationCacheItem.AllInstances.CacheTypeGet">
            <summary>设置 SvnAuthenticationCacheItem.get_CacheType() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthenticationCacheItem.AllInstances.Delete">
            <summary>设置 SvnAuthenticationCacheItem.Delete() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthenticationCacheItem.AllInstances.IsDeletedGet">
            <summary>设置 SvnAuthenticationCacheItem.get_IsDeleted() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthenticationCacheItem.AllInstances.RealmGet">
            <summary>设置 SvnAuthenticationCacheItem.get_Realm() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthenticationCacheItem.AllInstances.RealmUriGet">
            <summary>设置 SvnAuthenticationCacheItem.get_RealmUri() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Security.Fakes.ShimSvnAuthenticationEventArgs">
            <summary>SharpSvn.Security.SvnAuthenticationEventArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Security.Fakes.ShimSvnAuthenticationEventArgs.#ctor(SharpSvn.Security.SvnAuthenticationEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Security.Fakes.ShimSvnAuthenticationEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Security.Fakes.ShimSvnAuthenticationEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthenticationEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthenticationEventArgs.BreakGet">
            <summary>设置 SvnAuthenticationEventArgs.get_Break() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthenticationEventArgs.BreakSetBoolean">
            <summary>设置 SvnAuthenticationEventArgs.set_Break(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthenticationEventArgs.CancelGet">
            <summary>设置 SvnAuthenticationEventArgs.get_Cancel() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthenticationEventArgs.CancelSetBoolean">
            <summary>设置 SvnAuthenticationEventArgs.set_Cancel(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthenticationEventArgs.ConstructorStringBoolean">
            <summary>设置 SvnAuthenticationEventArgs.SvnAuthenticationEventArgs(String realm, Boolean maySave) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthenticationEventArgs.MaySaveGet">
            <summary>设置 SvnAuthenticationEventArgs.get_MaySave() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthenticationEventArgs.RealmGet">
            <summary>设置 SvnAuthenticationEventArgs.get_Realm() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthenticationEventArgs.RealmUriGet">
            <summary>设置 SvnAuthenticationEventArgs.get_RealmUri() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthenticationEventArgs.SaveGet">
            <summary>设置 SvnAuthenticationEventArgs.get_Save() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthenticationEventArgs.SaveSetBoolean">
            <summary>设置 SvnAuthenticationEventArgs.set_Save(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthenticationEventArgs.StaticConstructor">
            <summary>设置 SvnAuthenticationEventArgs.SvnAuthenticationEventArgs() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Security.Fakes.ShimSvnAuthenticationEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthenticationEventArgs.AllInstances.BreakGet">
            <summary>设置 SvnAuthenticationEventArgs.get_Break() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthenticationEventArgs.AllInstances.BreakSetBoolean">
            <summary>设置 SvnAuthenticationEventArgs.set_Break(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthenticationEventArgs.AllInstances.CancelGet">
            <summary>设置 SvnAuthenticationEventArgs.get_Cancel() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthenticationEventArgs.AllInstances.CancelSetBoolean">
            <summary>设置 SvnAuthenticationEventArgs.set_Cancel(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthenticationEventArgs.AllInstances.MaySaveGet">
            <summary>设置 SvnAuthenticationEventArgs.get_MaySave() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthenticationEventArgs.AllInstances.RealmGet">
            <summary>设置 SvnAuthenticationEventArgs.get_Realm() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthenticationEventArgs.AllInstances.RealmUriGet">
            <summary>设置 SvnAuthenticationEventArgs.get_RealmUri() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthenticationEventArgs.AllInstances.SaveGet">
            <summary>设置 SvnAuthenticationEventArgs.get_Save() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnAuthenticationEventArgs.AllInstances.SaveSetBoolean">
            <summary>设置 SvnAuthenticationEventArgs.set_Save(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Security.Fakes.ShimSvnBeforeEngineDialogEventArgs">
            <summary>SharpSvn.Security.SvnBeforeEngineDialogEventArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Security.Fakes.ShimSvnBeforeEngineDialogEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Security.Fakes.ShimSvnBeforeEngineDialogEventArgs.#ctor(SharpSvn.Security.SvnBeforeEngineDialogEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Security.Fakes.ShimSvnBeforeEngineDialogEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Security.Fakes.ShimSvnBeforeEngineDialogEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnBeforeEngineDialogEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnBeforeEngineDialogEventArgs.Constructor">
            <summary>设置 SvnBeforeEngineDialogEventArgs.SvnBeforeEngineDialogEventArgs() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnBeforeEngineDialogEventArgs.HandleGet">
            <summary>设置 SvnBeforeEngineDialogEventArgs.get_Handle() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnBeforeEngineDialogEventArgs.HandleSetIntPtr">
            <summary>设置 SvnBeforeEngineDialogEventArgs.set_Handle(IntPtr value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Security.Fakes.ShimSvnBeforeEngineDialogEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnBeforeEngineDialogEventArgs.AllInstances.HandleGet">
            <summary>设置 SvnBeforeEngineDialogEventArgs.get_Handle() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnBeforeEngineDialogEventArgs.AllInstances.HandleSetIntPtr">
            <summary>设置 SvnBeforeEngineDialogEventArgs.set_Handle(IntPtr value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Security.Fakes.ShimSvnSslAuthorityTrustEventArgs">
            <summary>SharpSvn.Security.SvnSslAuthorityTrustEventArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Security.Fakes.ShimSvnSslAuthorityTrustEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Security.Fakes.ShimSvnSslAuthorityTrustEventArgs.#ctor(SharpSvn.Security.SvnSslAuthorityTrustEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Security.Fakes.ShimSvnSslAuthorityTrustEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Security.Fakes.ShimSvnSslAuthorityTrustEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnSslAuthorityTrustEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnSslAuthorityTrustEventArgs.ConstructorStringBoolean">
            <summary>设置 SvnSslAuthorityTrustEventArgs.SvnSslAuthorityTrustEventArgs(String realm, Boolean maySave) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Security.Fakes.ShimSvnSslAuthorityTrustEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:SharpSvn.Security.Fakes.ShimSvnSslClientCertificateEventArgs">
            <summary>SharpSvn.Security.SvnSslClientCertificateEventArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Security.Fakes.ShimSvnSslClientCertificateEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Security.Fakes.ShimSvnSslClientCertificateEventArgs.#ctor(SharpSvn.Security.SvnSslClientCertificateEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Security.Fakes.ShimSvnSslClientCertificateEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Security.Fakes.ShimSvnSslClientCertificateEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnSslClientCertificateEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnSslClientCertificateEventArgs.CertificateFileGet">
            <summary>设置 SvnSslClientCertificateEventArgs.get_CertificateFile() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnSslClientCertificateEventArgs.CertificateFileSetString">
            <summary>设置 SvnSslClientCertificateEventArgs.set_CertificateFile(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnSslClientCertificateEventArgs.ConstructorStringBoolean">
            <summary>设置 SvnSslClientCertificateEventArgs.SvnSslClientCertificateEventArgs(String realm, Boolean maySave) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Security.Fakes.ShimSvnSslClientCertificateEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnSslClientCertificateEventArgs.AllInstances.CertificateFileGet">
            <summary>设置 SvnSslClientCertificateEventArgs.get_CertificateFile() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnSslClientCertificateEventArgs.AllInstances.CertificateFileSetString">
            <summary>设置 SvnSslClientCertificateEventArgs.set_CertificateFile(String value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Security.Fakes.ShimSvnSslClientCertificatePasswordEventArgs">
            <summary>SharpSvn.Security.SvnSslClientCertificatePasswordEventArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Security.Fakes.ShimSvnSslClientCertificatePasswordEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Security.Fakes.ShimSvnSslClientCertificatePasswordEventArgs.#ctor(SharpSvn.Security.SvnSslClientCertificatePasswordEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Security.Fakes.ShimSvnSslClientCertificatePasswordEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Security.Fakes.ShimSvnSslClientCertificatePasswordEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnSslClientCertificatePasswordEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnSslClientCertificatePasswordEventArgs.ConstructorStringBoolean">
            <summary>设置 SvnSslClientCertificatePasswordEventArgs.SvnSslClientCertificatePasswordEventArgs(String realm, Boolean maySave) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnSslClientCertificatePasswordEventArgs.PasswordGet">
            <summary>设置 SvnSslClientCertificatePasswordEventArgs.get_Password() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnSslClientCertificatePasswordEventArgs.PasswordSetString">
            <summary>设置 SvnSslClientCertificatePasswordEventArgs.set_Password(String value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Security.Fakes.ShimSvnSslClientCertificatePasswordEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnSslClientCertificatePasswordEventArgs.AllInstances.PasswordGet">
            <summary>设置 SvnSslClientCertificatePasswordEventArgs.get_Password() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnSslClientCertificatePasswordEventArgs.AllInstances.PasswordSetString">
            <summary>设置 SvnSslClientCertificatePasswordEventArgs.set_Password(String value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Security.Fakes.ShimSvnSslServerTrustEventArgs">
            <summary>SharpSvn.Security.SvnSslServerTrustEventArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Security.Fakes.ShimSvnSslServerTrustEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Security.Fakes.ShimSvnSslServerTrustEventArgs.#ctor(SharpSvn.Security.SvnSslServerTrustEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Security.Fakes.ShimSvnSslServerTrustEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Security.Fakes.ShimSvnSslServerTrustEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnSslServerTrustEventArgs.AcceptedFailuresGet">
            <summary>设置 SvnSslServerTrustEventArgs.get_AcceptedFailures() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnSslServerTrustEventArgs.AcceptedFailuresSetSvnCertificateTrustFailures">
            <summary>设置 SvnSslServerTrustEventArgs.set_AcceptedFailures(SvnCertificateTrustFailures value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnSslServerTrustEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnSslServerTrustEventArgs.CertificateValueGet">
            <summary>设置 SvnSslServerTrustEventArgs.get_CertificateValue() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnSslServerTrustEventArgs.CommonNameGet">
            <summary>设置 SvnSslServerTrustEventArgs.get_CommonName() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnSslServerTrustEventArgs.ConstructorSvnCertificateTrustFailuresStringStringStringStringStringStringStringBoolean">
            <summary>设置 SvnSslServerTrustEventArgs.SvnSslServerTrustEventArgs(SvnCertificateTrustFailures failures, String certificateCommonName, String certificateFingerprint, String certificateValidFrom, String certificateValidUntil, String certificateIssuer, String certificateValue, String realm, Boolean maySave) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnSslServerTrustEventArgs.FailuresGet">
            <summary>设置 SvnSslServerTrustEventArgs.get_Failures() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnSslServerTrustEventArgs.FingerprintGet">
            <summary>设置 SvnSslServerTrustEventArgs.get_Fingerprint() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnSslServerTrustEventArgs.IssuerGet">
            <summary>设置 SvnSslServerTrustEventArgs.get_Issuer() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnSslServerTrustEventArgs.ValidFromGet">
            <summary>设置 SvnSslServerTrustEventArgs.get_ValidFrom() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnSslServerTrustEventArgs.ValidUntilGet">
            <summary>设置 SvnSslServerTrustEventArgs.get_ValidUntil() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Security.Fakes.ShimSvnSslServerTrustEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnSslServerTrustEventArgs.AllInstances.AcceptedFailuresGet">
            <summary>设置 SvnSslServerTrustEventArgs.get_AcceptedFailures() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnSslServerTrustEventArgs.AllInstances.AcceptedFailuresSetSvnCertificateTrustFailures">
            <summary>设置 SvnSslServerTrustEventArgs.set_AcceptedFailures(SvnCertificateTrustFailures value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnSslServerTrustEventArgs.AllInstances.CertificateValueGet">
            <summary>设置 SvnSslServerTrustEventArgs.get_CertificateValue() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnSslServerTrustEventArgs.AllInstances.CommonNameGet">
            <summary>设置 SvnSslServerTrustEventArgs.get_CommonName() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnSslServerTrustEventArgs.AllInstances.FailuresGet">
            <summary>设置 SvnSslServerTrustEventArgs.get_Failures() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnSslServerTrustEventArgs.AllInstances.FingerprintGet">
            <summary>设置 SvnSslServerTrustEventArgs.get_Fingerprint() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnSslServerTrustEventArgs.AllInstances.IssuerGet">
            <summary>设置 SvnSslServerTrustEventArgs.get_Issuer() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnSslServerTrustEventArgs.AllInstances.ValidFromGet">
            <summary>设置 SvnSslServerTrustEventArgs.get_ValidFrom() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnSslServerTrustEventArgs.AllInstances.ValidUntilGet">
            <summary>设置 SvnSslServerTrustEventArgs.get_ValidUntil() 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Security.Fakes.ShimSvnUserNameEventArgs">
            <summary>SharpSvn.Security.SvnUserNameEventArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Security.Fakes.ShimSvnUserNameEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Security.Fakes.ShimSvnUserNameEventArgs.#ctor(SharpSvn.Security.SvnUserNameEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Security.Fakes.ShimSvnUserNameEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Security.Fakes.ShimSvnUserNameEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnUserNameEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnUserNameEventArgs.ConstructorStringBoolean">
            <summary>设置 SvnUserNameEventArgs.SvnUserNameEventArgs(String realm, Boolean maySave) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnUserNameEventArgs.UserNameGet">
            <summary>设置 SvnUserNameEventArgs.get_UserName() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnUserNameEventArgs.UserNameSetString">
            <summary>设置 SvnUserNameEventArgs.set_UserName(String value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Security.Fakes.ShimSvnUserNameEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnUserNameEventArgs.AllInstances.UserNameGet">
            <summary>设置 SvnUserNameEventArgs.get_UserName() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnUserNameEventArgs.AllInstances.UserNameSetString">
            <summary>设置 SvnUserNameEventArgs.set_UserName(String value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Security.Fakes.ShimSvnUserNamePasswordEventArgs">
            <summary>SharpSvn.Security.SvnUserNamePasswordEventArgs 的填充码类型</summary>
        </member>
        <member name="M:SharpSvn.Security.Fakes.ShimSvnUserNamePasswordEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SharpSvn.Security.Fakes.ShimSvnUserNamePasswordEventArgs.#ctor(SharpSvn.Security.SvnUserNamePasswordEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SharpSvn.Security.Fakes.ShimSvnUserNamePasswordEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SharpSvn.Security.Fakes.ShimSvnUserNamePasswordEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnUserNamePasswordEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnUserNamePasswordEventArgs.ConstructorStringStringBoolean">
            <summary>设置 SvnUserNamePasswordEventArgs.SvnUserNamePasswordEventArgs(String initialUserName, String realm, Boolean maySave) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnUserNamePasswordEventArgs.InitialUserNameGet">
            <summary>设置 SvnUserNamePasswordEventArgs.get_InitialUserName() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnUserNamePasswordEventArgs.PasswordGet">
            <summary>设置 SvnUserNamePasswordEventArgs.get_Password() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnUserNamePasswordEventArgs.PasswordSetString">
            <summary>设置 SvnUserNamePasswordEventArgs.set_Password(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnUserNamePasswordEventArgs.UserNameGet">
            <summary>设置 SvnUserNamePasswordEventArgs.get_UserName() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnUserNamePasswordEventArgs.UserNameSetString">
            <summary>设置 SvnUserNamePasswordEventArgs.set_UserName(String value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Security.Fakes.ShimSvnUserNamePasswordEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnUserNamePasswordEventArgs.AllInstances.InitialUserNameGet">
            <summary>设置 SvnUserNamePasswordEventArgs.get_InitialUserName() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnUserNamePasswordEventArgs.AllInstances.PasswordGet">
            <summary>设置 SvnUserNamePasswordEventArgs.get_Password() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnUserNamePasswordEventArgs.AllInstances.PasswordSetString">
            <summary>设置 SvnUserNamePasswordEventArgs.set_Password(String value) 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnUserNamePasswordEventArgs.AllInstances.UserNameGet">
            <summary>设置 SvnUserNamePasswordEventArgs.get_UserName() 的 填充码</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.ShimSvnUserNamePasswordEventArgs.AllInstances.UserNameSetString">
            <summary>设置 SvnUserNamePasswordEventArgs.set_UserName(String value) 的 填充码</summary>
        </member>
        <member name="T:SharpSvn.Security.Fakes.StubSvnAuthenticationEventArgs">
            <summary>SharpSvn.Security.SvnAuthenticationEventArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Security.Fakes.StubSvnAuthenticationEventArgs.#ctor(System.String,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Security.Fakes.StubSvnAuthenticationEventArgs.Detach(System.Boolean)">
            <summary>设置 SvnEventArgs.Detach(Boolean keepProperties) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Security.Fakes.StubSvnAuthenticationEventArgs.DetachBoolean">
            <summary>设置 SvnEventArgs.Detach(Boolean keepProperties) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Security.Fakes.StubSvnAuthenticationEventArgs.InitializeStub">
            <summary>初始化 type StubSvnAuthenticationEventArgs 的新实例</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.StubSvnAuthenticationEventArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.StubSvnAuthenticationEventArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.StubSvnAuthenticationEventArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Security.Fakes.StubSvnBeforeEngineDialogEventArgs">
            <summary>SharpSvn.Security.SvnBeforeEngineDialogEventArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Security.Fakes.StubSvnBeforeEngineDialogEventArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Security.Fakes.StubSvnBeforeEngineDialogEventArgs.Detach(System.Boolean)">
            <summary>设置 SvnEventArgs.Detach(Boolean keepProperties) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Security.Fakes.StubSvnBeforeEngineDialogEventArgs.DetachBoolean">
            <summary>设置 SvnEventArgs.Detach(Boolean keepProperties) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Security.Fakes.StubSvnBeforeEngineDialogEventArgs.InitializeStub">
            <summary>初始化 type StubSvnBeforeEngineDialogEventArgs 的新实例</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.StubSvnBeforeEngineDialogEventArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.StubSvnBeforeEngineDialogEventArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.StubSvnBeforeEngineDialogEventArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Security.Fakes.StubSvnSslClientCertificateEventArgs">
            <summary>SharpSvn.Security.SvnSslClientCertificateEventArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Security.Fakes.StubSvnSslClientCertificateEventArgs.#ctor(System.String,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Security.Fakes.StubSvnSslClientCertificateEventArgs.Detach(System.Boolean)">
            <summary>设置 SvnEventArgs.Detach(Boolean keepProperties) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Security.Fakes.StubSvnSslClientCertificateEventArgs.DetachBoolean">
            <summary>设置 SvnEventArgs.Detach(Boolean keepProperties) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Security.Fakes.StubSvnSslClientCertificateEventArgs.InitializeStub">
            <summary>初始化 type StubSvnSslClientCertificateEventArgs 的新实例</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.StubSvnSslClientCertificateEventArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.StubSvnSslClientCertificateEventArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.StubSvnSslClientCertificateEventArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Security.Fakes.StubSvnSslClientCertificatePasswordEventArgs">
            <summary>SharpSvn.Security.SvnSslClientCertificatePasswordEventArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Security.Fakes.StubSvnSslClientCertificatePasswordEventArgs.#ctor(System.String,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Security.Fakes.StubSvnSslClientCertificatePasswordEventArgs.Detach(System.Boolean)">
            <summary>设置 SvnEventArgs.Detach(Boolean keepProperties) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Security.Fakes.StubSvnSslClientCertificatePasswordEventArgs.DetachBoolean">
            <summary>设置 SvnEventArgs.Detach(Boolean keepProperties) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Security.Fakes.StubSvnSslClientCertificatePasswordEventArgs.InitializeStub">
            <summary>初始化 type StubSvnSslClientCertificatePasswordEventArgs 的新实例</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.StubSvnSslClientCertificatePasswordEventArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.StubSvnSslClientCertificatePasswordEventArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.StubSvnSslClientCertificatePasswordEventArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Security.Fakes.StubSvnSslServerTrustEventArgs">
            <summary>SharpSvn.Security.SvnSslServerTrustEventArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Security.Fakes.StubSvnSslServerTrustEventArgs.#ctor(SharpSvn.Security.SvnCertificateTrustFailures,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Security.Fakes.StubSvnSslServerTrustEventArgs.Detach(System.Boolean)">
            <summary>设置 SvnEventArgs.Detach(Boolean keepProperties) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Security.Fakes.StubSvnSslServerTrustEventArgs.DetachBoolean">
            <summary>设置 SvnEventArgs.Detach(Boolean keepProperties) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Security.Fakes.StubSvnSslServerTrustEventArgs.InitializeStub">
            <summary>初始化 type StubSvnSslServerTrustEventArgs 的新实例</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.StubSvnSslServerTrustEventArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.StubSvnSslServerTrustEventArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.StubSvnSslServerTrustEventArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Security.Fakes.StubSvnUserNameEventArgs">
            <summary>SharpSvn.Security.SvnUserNameEventArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Security.Fakes.StubSvnUserNameEventArgs.#ctor(System.String,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Security.Fakes.StubSvnUserNameEventArgs.Detach(System.Boolean)">
            <summary>设置 SvnEventArgs.Detach(Boolean keepProperties) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Security.Fakes.StubSvnUserNameEventArgs.DetachBoolean">
            <summary>设置 SvnEventArgs.Detach(Boolean keepProperties) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Security.Fakes.StubSvnUserNameEventArgs.InitializeStub">
            <summary>初始化 type StubSvnUserNameEventArgs 的新实例</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.StubSvnUserNameEventArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.StubSvnUserNameEventArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.StubSvnUserNameEventArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SharpSvn.Security.Fakes.StubSvnUserNamePasswordEventArgs">
            <summary>SharpSvn.Security.SvnUserNamePasswordEventArgs 的存根类型</summary>
        </member>
        <member name="M:SharpSvn.Security.Fakes.StubSvnUserNamePasswordEventArgs.#ctor(System.String,System.String,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SharpSvn.Security.Fakes.StubSvnUserNamePasswordEventArgs.Detach(System.Boolean)">
            <summary>设置 SvnEventArgs.Detach(Boolean keepProperties) 的 存根</summary>
        </member>
        <member name="F:SharpSvn.Security.Fakes.StubSvnUserNamePasswordEventArgs.DetachBoolean">
            <summary>设置 SvnEventArgs.Detach(Boolean keepProperties) 的 stub</summary>
        </member>
        <member name="M:SharpSvn.Security.Fakes.StubSvnUserNamePasswordEventArgs.InitializeStub">
            <summary>初始化 type StubSvnUserNamePasswordEventArgs 的新实例</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.StubSvnUserNamePasswordEventArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.StubSvnUserNamePasswordEventArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SharpSvn.Security.Fakes.StubSvnUserNamePasswordEventArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
    </members>
</doc>
